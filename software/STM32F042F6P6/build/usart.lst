ARM GAS  /tmp/ccHHgQzd.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART2_UART_Init
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART2_UART_Init:
  24              	.LFB37:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccHHgQzd.s 			page 2


  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** /* USER CODE BEGIN 0 */
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE END 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** UART_HandleTypeDef huart2;
  48:Src/usart.c   **** 
  49:Src/usart.c   **** /* USART2 init function */
  50:Src/usart.c   **** 
  51:Src/usart.c   **** void MX_USART2_UART_Init(void)
  52:Src/usart.c   **** {
  26              		.loc 1 52 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  53:Src/usart.c   **** 
  54:Src/usart.c   ****   huart2.Instance = USART2;
  35              		.loc 1 54 0
  36 0002 0C48     		ldr	r0, .L4
  37 0004 0C4B     		ldr	r3, .L4+4
  38 0006 0360     		str	r3, [r0]
  55:Src/usart.c   ****   huart2.Init.BaudRate = 38400;
  39              		.loc 1 55 0
  40 0008 9623     		movs	r3, #150
  41 000a 1B02     		lsls	r3, r3, #8
  42 000c 4360     		str	r3, [r0, #4]
  56:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  43              		.loc 1 56 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  57:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  46              		.loc 1 57 0
  47 0012 C360     		str	r3, [r0, #12]
  58:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  48              		.loc 1 58 0
  49 0014 0361     		str	r3, [r0, #16]
  59:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  50              		.loc 1 59 0
  51 0016 0C22     		movs	r2, #12
  52 0018 4261     		str	r2, [r0, #20]
  60:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  53              		.loc 1 60 0
  54 001a 8361     		str	r3, [r0, #24]
  61:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccHHgQzd.s 			page 3


  55              		.loc 1 61 0
  56 001c C361     		str	r3, [r0, #28]
  62:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  57              		.loc 1 62 0
  58 001e 0362     		str	r3, [r0, #32]
  63:Src/usart.c   ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  59              		.loc 1 63 0
  60 0020 4362     		str	r3, [r0, #36]
  64:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  61              		.loc 1 64 0
  62 0022 FFF7FEFF 		bl	HAL_UART_Init
  63              	.LVL0:
  64 0026 0028     		cmp	r0, #0
  65 0028 00D1     		bne	.L3
  66              	.L1:
  65:Src/usart.c   ****   {
  66:Src/usart.c   ****     Error_Handler();
  67:Src/usart.c   ****   }
  68:Src/usart.c   **** 
  69:Src/usart.c   **** }
  67              		.loc 1 69 0
  68              		@ sp needed
  69 002a 10BD     		pop	{r4, pc}
  70              	.L3:
  66:Src/usart.c   ****   }
  71              		.loc 1 66 0
  72 002c FFF7FEFF 		bl	Error_Handler
  73              	.LVL1:
  74              		.loc 1 69 0
  75 0030 FBE7     		b	.L1
  76              	.L5:
  77 0032 C046     		.align	2
  78              	.L4:
  79 0034 00000000 		.word	huart2
  80 0038 00440040 		.word	1073759232
  81              		.cfi_endproc
  82              	.LFE37:
  84              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  85              		.align	1
  86              		.global	HAL_UART_MspInit
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	HAL_UART_MspInit:
  93              	.LFB38:
  70:Src/usart.c   **** 
  71:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  72:Src/usart.c   **** {
  94              		.loc 1 72 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 32
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              	.LVL2:
  99 0000 10B5     		push	{r4, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccHHgQzd.s 			page 4


 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
 104 0002 88B0     		sub	sp, sp, #32
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 40
 107 0004 0400     		movs	r4, r0
  73:Src/usart.c   **** 
  74:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 108              		.loc 1 74 0
 109 0006 1422     		movs	r2, #20
 110 0008 0021     		movs	r1, #0
 111 000a 03A8     		add	r0, sp, #12
 112              	.LVL3:
 113 000c FFF7FEFF 		bl	memset
 114              	.LVL4:
  75:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 115              		.loc 1 75 0
 116 0010 2268     		ldr	r2, [r4]
 117 0012 124B     		ldr	r3, .L9
 118 0014 9A42     		cmp	r2, r3
 119 0016 01D0     		beq	.L8
 120              	.L6:
  76:Src/usart.c   ****   {
  77:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  78:Src/usart.c   **** 
  79:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  80:Src/usart.c   ****     /* USART2 clock enable */
  81:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
  82:Src/usart.c   ****   
  83:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  84:Src/usart.c   ****     /**USART2 GPIO Configuration    
  85:Src/usart.c   ****     PA2     ------> USART2_TX
  86:Src/usart.c   ****     PA3     ------> USART2_RX 
  87:Src/usart.c   ****     */
  88:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
  89:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  90:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  91:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  92:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
  93:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  94:Src/usart.c   **** 
  95:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  96:Src/usart.c   **** 
  97:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
  98:Src/usart.c   ****   }
  99:Src/usart.c   **** }
 121              		.loc 1 99 0
 122 0018 08B0     		add	sp, sp, #32
 123              		@ sp needed
 124              	.LVL5:
 125 001a 10BD     		pop	{r4, pc}
 126              	.LVL6:
 127              	.L8:
 128              	.LBB2:
  81:Src/usart.c   ****   
 129              		.loc 1 81 0
 130 001c 104B     		ldr	r3, .L9+4
ARM GAS  /tmp/ccHHgQzd.s 			page 5


 131 001e D969     		ldr	r1, [r3, #28]
 132 0020 8022     		movs	r2, #128
 133 0022 9202     		lsls	r2, r2, #10
 134 0024 1143     		orrs	r1, r2
 135 0026 D961     		str	r1, [r3, #28]
 136 0028 D969     		ldr	r1, [r3, #28]
 137 002a 1140     		ands	r1, r2
 138 002c 0191     		str	r1, [sp, #4]
 139 002e 0199     		ldr	r1, [sp, #4]
 140              	.LBE2:
 141              	.LBB3:
  83:Src/usart.c   ****     /**USART2 GPIO Configuration    
 142              		.loc 1 83 0
 143 0030 5969     		ldr	r1, [r3, #20]
 144 0032 1143     		orrs	r1, r2
 145 0034 5961     		str	r1, [r3, #20]
 146 0036 5B69     		ldr	r3, [r3, #20]
 147 0038 1A40     		ands	r2, r3
 148 003a 0292     		str	r2, [sp, #8]
 149 003c 029B     		ldr	r3, [sp, #8]
 150              	.LBE3:
  88:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 151              		.loc 1 88 0
 152 003e 0C23     		movs	r3, #12
 153 0040 0393     		str	r3, [sp, #12]
  89:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 89 0
 155 0042 0A3B     		subs	r3, r3, #10
 156 0044 0493     		str	r3, [sp, #16]
  91:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 157              		.loc 1 91 0
 158 0046 0133     		adds	r3, r3, #1
 159 0048 0693     		str	r3, [sp, #24]
  92:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 160              		.loc 1 92 0
 161 004a 023B     		subs	r3, r3, #2
 162 004c 0793     		str	r3, [sp, #28]
  93:Src/usart.c   **** 
 163              		.loc 1 93 0
 164 004e 9020     		movs	r0, #144
 165 0050 03A9     		add	r1, sp, #12
 166 0052 C005     		lsls	r0, r0, #23
 167 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 168              	.LVL7:
 169              		.loc 1 99 0
 170 0058 DEE7     		b	.L6
 171              	.L10:
 172 005a C046     		.align	2
 173              	.L9:
 174 005c 00440040 		.word	1073759232
 175 0060 00100240 		.word	1073876992
 176              		.cfi_endproc
 177              	.LFE38:
 179              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 180              		.align	1
 181              		.global	HAL_UART_MspDeInit
 182              		.syntax unified
ARM GAS  /tmp/ccHHgQzd.s 			page 6


 183              		.code	16
 184              		.thumb_func
 185              		.fpu softvfp
 187              	HAL_UART_MspDeInit:
 188              	.LFB39:
 100:Src/usart.c   **** 
 101:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 102:Src/usart.c   **** {
 189              		.loc 1 102 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              	.LVL8:
 194 0000 10B5     		push	{r4, lr}
 195              	.LCFI3:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 14, -4
 103:Src/usart.c   **** 
 104:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 199              		.loc 1 104 0
 200 0002 0268     		ldr	r2, [r0]
 201 0004 074B     		ldr	r3, .L14
 202 0006 9A42     		cmp	r2, r3
 203 0008 00D0     		beq	.L13
 204              	.LVL9:
 205              	.L11:
 105:Src/usart.c   ****   {
 106:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 107:Src/usart.c   **** 
 108:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 109:Src/usart.c   ****     /* Peripheral clock disable */
 110:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 111:Src/usart.c   ****   
 112:Src/usart.c   ****     /**USART2 GPIO Configuration    
 113:Src/usart.c   ****     PA2     ------> USART2_TX
 114:Src/usart.c   ****     PA3     ------> USART2_RX 
 115:Src/usart.c   ****     */
 116:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 117:Src/usart.c   **** 
 118:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 119:Src/usart.c   **** 
 120:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 121:Src/usart.c   ****   }
 122:Src/usart.c   **** } 
 206              		.loc 1 122 0
 207              		@ sp needed
 208 000a 10BD     		pop	{r4, pc}
 209              	.LVL10:
 210              	.L13:
 110:Src/usart.c   ****   
 211              		.loc 1 110 0
 212 000c 064A     		ldr	r2, .L14+4
 213 000e D369     		ldr	r3, [r2, #28]
 214 0010 0649     		ldr	r1, .L14+8
 215 0012 0B40     		ands	r3, r1
 216 0014 D361     		str	r3, [r2, #28]
ARM GAS  /tmp/ccHHgQzd.s 			page 7


 116:Src/usart.c   **** 
 217              		.loc 1 116 0
 218 0016 9020     		movs	r0, #144
 219              	.LVL11:
 220 0018 0C21     		movs	r1, #12
 221 001a C005     		lsls	r0, r0, #23
 222 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 223              	.LVL12:
 224              		.loc 1 122 0
 225 0020 F3E7     		b	.L11
 226              	.L15:
 227 0022 C046     		.align	2
 228              	.L14:
 229 0024 00440040 		.word	1073759232
 230 0028 00100240 		.word	1073876992
 231 002c FFFFFDFF 		.word	-131073
 232              		.cfi_endproc
 233              	.LFE39:
 235              		.comm	huart2,112,4
 236              		.text
 237              	.Letext0:
 238              		.file 2 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machi
 239              		.file 3 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 240              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 241              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 242              		.file 6 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/l
 243              		.file 7 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 244              		.file 8 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1
 245              		.file 9 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/r
 246              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 247              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 248              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 249              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 250              		.file 14 "Inc/usart.h"
 251              		.file 15 "Inc/main.h"
 252              		.file 16 "<built-in>"
ARM GAS  /tmp/ccHHgQzd.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccHHgQzd.s:16     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccHHgQzd.s:23     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccHHgQzd.s:79     .text.MX_USART2_UART_Init:0000000000000034 $d
                            *COM*:0000000000000070 huart2
     /tmp/ccHHgQzd.s:85     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccHHgQzd.s:92     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccHHgQzd.s:174    .text.HAL_UART_MspInit:000000000000005c $d
     /tmp/ccHHgQzd.s:180    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccHHgQzd.s:187    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccHHgQzd.s:229    .text.HAL_UART_MspDeInit:0000000000000024 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
memset
HAL_GPIO_Init
HAL_GPIO_DeInit

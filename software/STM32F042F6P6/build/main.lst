ARM GAS  /tmp/ccs7dXX0.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemClock_Config:
  24              	.LFB38:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccs7dXX0.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** #include "usart.h"
  44:Src/main.c    **** #include "gpio.h"
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  52:Src/main.c    **** /* USER CODE BEGIN PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PTD */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PD */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PM */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** /* USER CODE BEGIN PFP */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END PFP */
  77:Src/main.c    **** 
  78:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  79:Src/main.c    **** /* USER CODE BEGIN 0 */
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END 0 */
  82:Src/main.c    **** 
  83:Src/main.c    **** /**
  84:Src/main.c    ****   * @brief  The application entry point.
  85:Src/main.c    ****   * @retval int
  86:Src/main.c    ****   */
  87:Src/main.c    **** int main(void)
  88:Src/main.c    **** {
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
  90:Src/main.c    **** 
ARM GAS  /tmp/ccs7dXX0.s 			page 3


  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END Init */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Configure the system clock */
 103:Src/main.c    ****   SystemClock_Config();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END SysInit */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Initialize all configured peripherals */
 110:Src/main.c    ****   MX_GPIO_Init();
 111:Src/main.c    ****   MX_USART2_UART_Init();
 112:Src/main.c    ****   /* USER CODE BEGIN 2 */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END 2 */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Infinite loop */
 117:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 118:Src/main.c    ****   while (1)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     /* USER CODE END WHILE */
 121:Src/main.c    **** 
 122:Src/main.c    ****     /* USER CODE BEGIN 3 */
 123:Src/main.c    ****   }
 124:Src/main.c    ****   /* USER CODE END 3 */
 125:Src/main.c    **** }
 126:Src/main.c    **** 
 127:Src/main.c    **** /**
 128:Src/main.c    ****   * @brief System Clock Configuration
 129:Src/main.c    ****   * @retval None
 130:Src/main.c    ****   */
 131:Src/main.c    **** void SystemClock_Config(void)
 132:Src/main.c    **** {
  26              		.loc 1 132 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 72
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 93B0     		sub	sp, sp, #76
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 80
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  37              		.loc 1 133 0
  38 0004 3022     		movs	r2, #48
  39 0006 0021     		movs	r1, #0
ARM GAS  /tmp/ccs7dXX0.s 			page 4


  40 0008 06A8     		add	r0, sp, #24
  41 000a FFF7FEFF 		bl	memset
  42              	.LVL0:
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  43              		.loc 1 134 0
  44 000e 1022     		movs	r2, #16
  45 0010 0021     		movs	r1, #0
  46 0012 01A8     		add	r0, sp, #4
  47 0014 FFF7FEFF 		bl	memset
  48              	.LVL1:
 135:Src/main.c    **** 
 136:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 137:Src/main.c    ****   */
 138:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  49              		.loc 1 138 0
  50 0018 0223     		movs	r3, #2
  51 001a 0593     		str	r3, [sp, #20]
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  52              		.loc 1 139 0
  53 001c 013B     		subs	r3, r3, #1
  54 001e 0893     		str	r3, [sp, #32]
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  55              		.loc 1 140 0
  56 0020 0F33     		adds	r3, r3, #15
  57 0022 0993     		str	r3, [sp, #36]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 142:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  58              		.loc 1 142 0
  59 0024 05A8     		add	r0, sp, #20
  60 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
  61              	.LVL2:
 143:Src/main.c    ****   {
 144:Src/main.c    ****     Error_Handler();
 145:Src/main.c    ****   }
 146:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 147:Src/main.c    ****   */
 148:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  62              		.loc 1 148 0
  63 002a 0723     		movs	r3, #7
  64 002c 0193     		str	r3, [sp, #4]
 149:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 150:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  65              		.loc 1 150 0
  66 002e 0023     		movs	r3, #0
  67 0030 0293     		str	r3, [sp, #8]
 151:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  68              		.loc 1 151 0
  69 0032 0393     		str	r3, [sp, #12]
 152:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  70              		.loc 1 152 0
  71 0034 0493     		str	r3, [sp, #16]
 153:Src/main.c    **** 
 154:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  72              		.loc 1 154 0
  73 0036 0021     		movs	r1, #0
  74 0038 01A8     		add	r0, sp, #4
  75 003a FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccs7dXX0.s 			page 5


  76              	.LVL3:
 155:Src/main.c    ****   {
 156:Src/main.c    ****     Error_Handler();
 157:Src/main.c    ****   }
 158:Src/main.c    **** }
  77              		.loc 1 158 0
  78 003e 13B0     		add	sp, sp, #76
  79              		@ sp needed
  80 0040 00BD     		pop	{pc}
  81              		.cfi_endproc
  82              	.LFE38:
  84              		.section	.text.main,"ax",%progbits
  85              		.align	1
  86              		.global	main
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	main:
  93              	.LFB37:
  88:Src/main.c    ****   /* USER CODE BEGIN 1 */
  94              		.loc 1 88 0
  95              		.cfi_startproc
  96              		@ Volatile: function does not return.
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99 0000 10B5     		push	{r4, lr}
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 4, -8
 103              		.cfi_offset 14, -4
  96:Src/main.c    **** 
 104              		.loc 1 96 0
 105 0002 FFF7FEFF 		bl	HAL_Init
 106              	.LVL4:
 103:Src/main.c    **** 
 107              		.loc 1 103 0
 108 0006 FFF7FEFF 		bl	SystemClock_Config
 109              	.LVL5:
 110:Src/main.c    ****   MX_USART2_UART_Init();
 110              		.loc 1 110 0
 111 000a FFF7FEFF 		bl	MX_GPIO_Init
 112              	.LVL6:
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 113              		.loc 1 111 0
 114 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 115              	.LVL7:
 116              	.L3:
 117 0012 FEE7     		b	.L3
 118              		.cfi_endproc
 119              	.LFE37:
 121              		.section	.text.Error_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	Error_Handler
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
ARM GAS  /tmp/ccs7dXX0.s 			page 6


 127              		.fpu softvfp
 129              	Error_Handler:
 130              	.LFB39:
 159:Src/main.c    **** 
 160:Src/main.c    **** /* USER CODE BEGIN 4 */
 161:Src/main.c    **** 
 162:Src/main.c    **** /* USER CODE END 4 */
 163:Src/main.c    **** 
 164:Src/main.c    **** /**
 165:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 166:Src/main.c    ****   * @retval None
 167:Src/main.c    ****   */
 168:Src/main.c    **** void Error_Handler(void)
 169:Src/main.c    **** {
 131              		.loc 1 169 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 170:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 171:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 174:Src/main.c    **** }
 136              		.loc 1 174 0
 137              		@ sp needed
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE39:
 142              		.section	.text.assert_failed,"ax",%progbits
 143              		.align	1
 144              		.global	assert_failed
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 148              		.fpu softvfp
 150              	assert_failed:
 151              	.LFB40:
 175:Src/main.c    **** 
 176:Src/main.c    **** #ifdef  USE_FULL_ASSERT
 177:Src/main.c    **** /**
 178:Src/main.c    ****   * @brief  Reports the name of the source file and the source line number
 179:Src/main.c    ****   *         where the assert_param error has occurred.
 180:Src/main.c    ****   * @param  file: pointer to the source file name
 181:Src/main.c    ****   * @param  line: assert_param error line source number
 182:Src/main.c    ****   * @retval None
 183:Src/main.c    ****   */
 184:Src/main.c    **** void assert_failed(char *file, uint32_t line)
 185:Src/main.c    **** { 
 152              		.loc 1 185 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL8:
 186:Src/main.c    ****   /* USER CODE BEGIN 6 */
 187:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
ARM GAS  /tmp/ccs7dXX0.s 			page 7


 188:Src/main.c    ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 189:Src/main.c    ****   /* USER CODE END 6 */
 190:Src/main.c    **** }
 158              		.loc 1 190 0
 159              		@ sp needed
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE40:
 164              		.text
 165              	.Letext0:
 166              		.file 2 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machi
 167              		.file 3 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 168              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 169              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 170              		.file 6 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/l
 171              		.file 7 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 172              		.file 8 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1
 173              		.file 9 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/r
 174              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 175              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 176              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 177              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 178              		.file 14 "Inc/usart.h"
 179              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 180              		.file 16 "Inc/gpio.h"
 181              		.file 17 "<built-in>"
ARM GAS  /tmp/ccs7dXX0.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccs7dXX0.s:16     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccs7dXX0.s:23     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccs7dXX0.s:85     .text.main:0000000000000000 $t
     /tmp/ccs7dXX0.s:92     .text.main:0000000000000000 main
     /tmp/ccs7dXX0.s:122    .text.Error_Handler:0000000000000000 $t
     /tmp/ccs7dXX0.s:129    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccs7dXX0.s:143    .text.assert_failed:0000000000000000 $t
     /tmp/ccs7dXX0.s:150    .text.assert_failed:0000000000000000 assert_failed

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init

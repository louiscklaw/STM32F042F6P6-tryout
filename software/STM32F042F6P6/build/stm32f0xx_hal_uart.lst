ARM GAS  /tmp/ccF4ErZF.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB78:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @file    stm32f0xx_hal_uart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   [..]
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
ARM GAS  /tmp/ccF4ErZF.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (@) These APIs(HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_MultiProcessor_Init(),
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..]
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    [..] Three operation modes are available within this driver :     
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Polling mode IO operation ***
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      =================================
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ===================================
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]    
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** DMA mode IO operation ***    
ARM GAS  /tmp/ccF4ErZF.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ==============================
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback          
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      *** UART HAL driver macros list ***
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      ============================================= 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..]
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccF4ErZF.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #include "stm32f0xx_hal.h"
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup STM32F0xx_HAL_Driver
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** ===============================================================================
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     in asynchronous mode.
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Baud Rate
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Word Length
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Stop Bit
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Parity
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) data logical level inversion
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX and TX pins swap
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) RX overrun detection disabling
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) DMA disabling on RX error
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) MSB first on communication line
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) auto Baud rate detection
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init() and HAL_MultiProcessor_Init()
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     API follow respectively the UART asynchronous, UART Half duplex and multiprocessor mode
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual).
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /*
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   Additional Table:  If the parity is enabled, then the MSB bit of the data written
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      in the data register is transmitted but is changed by the parity bit.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      According to device capability (support or not of 7-bit word length),
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      frame length is either defined by the M bit (8-bits or 9-bits)
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      or by the M1 and M0 bits (7-bit, 8-bit or 9-bit).
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                      Possible UART frame formats are as listed in the following table:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       Table 1. UART frame format.             
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |       M bit       |  PCE bit  |             UART frame                |
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     0     |    | SB |    8-bit data   | STB |     |
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         0         |     1     |    | SB | 7-bit data | PB | STB |     |
ARM GAS  /tmp/ccF4ErZF.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     0     |    | SB |    9-bit data   | STB |     |
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |-------------------|-----------|---------------------------------------|
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |         1         |     1     |    | SB | 8-bit data | PB | STB |     |
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     0     |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    0    |     1     |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     0     |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    0    |    1    |     1     |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     0     |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       |    1    |    0    |     1     |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       +-----------------------------------------------------------------------+
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check the parameters */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccF4ErZF.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccF4ErZF.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART instance */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), and IREN (if IrDA is supported)  bits in the USART_CR3 regist
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_SCEN);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_IREN);
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
ARM GAS  /tmp/ccF4ErZF.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Address UART node address (4-, 6-, 7- or 8-bit long).
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param WakeUpMethod specifies the UART wakeup method.
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the wake up method parameter */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported) bits in the USART_CR3 r
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR2_LINEN)
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_SCEN)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if defined (USART_CR3_IREN)
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the Peripheral */
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart == NULL)
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_ERROR;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the Peripheral */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DeInit the low level hardware */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlock */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
ARM GAS  /tmp/ccF4ErZF.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### IO operation functions #####
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     and Half duplex data transfers.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) There are two mode of transfer:
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode.
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            after finishing transfer.
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (++) Non-Blocking mode: The communication is performed using Interrupts
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            using DMA mode.
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Blocking mode API's are :
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive()
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort()
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit()
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive()
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_Abort_IT()
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmit_IT()
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceive_IT()
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortCpltCallback()
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortTransmitCpltCallback()
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) HAL_UART_AbortReceiveCpltCallback()
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
ARM GAS  /tmp/ccF4ErZF.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         Errors are handled as follows :
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in In
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UA
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              If user wants to abort it, Abort services should be called by user.
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****              Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() u
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size Amount of data to be sent.
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccF4ErZF.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_TIMEOUT;
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Timeout Timeout duration.
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
ARM GAS  /tmp/ccF4ErZF.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t uhMask;
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return  HAL_ERROR;
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     tickstart = HAL_GetTick();
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* as long as data have to be received */
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount--;
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
ARM GAS  /tmp/ccF4ErZF.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccF4ErZF.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled through a u16 cast. */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
ARM GAS  /tmp/ccF4ErZF.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be sent.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be 
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
ARM GAS  /tmp/ccF4ErZF.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param pData pointer to data buffer.
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param Size amount of data to be received.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccF4ErZF.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_ERROR;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be 
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((((uint32_t)pData)&1U) != 0U)
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return  HAL_ERROR;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Locked */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_LOCK(huart);
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA error callback */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the DMA abort callback */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Process Unlocked */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccF4ErZF.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccF4ErZF.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccF4ErZF.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  /tmp/ccF4ErZF.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U; 
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccF4ErZF.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
ARM GAS  /tmp/ccF4ErZF.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      before any call to DMA Abort functions */
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        Otherwise, set it to NULL */
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
ARM GAS  /tmp/ccF4ErZF.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 0U;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (abortcplt == 1U)
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset errorCode */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccF4ErZF.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA TX */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Tx transfer counter */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount = 0U; 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Tx transfer counter */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U; 
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
ARM GAS  /tmp/ccF4ErZF.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         This procedure performs following operations :
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - Set handle State to READY
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** */
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Abort DMA RX */
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Reset Rx transfer counter */
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxXferCount = 0U; 
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/ccF4ErZF.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Reset Rx transfer counter */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U; 
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t errorflags;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If no error occurs */
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       UART_Receive_IT(huart);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }  
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* If some errors occur */
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
ARM GAS  /tmp/ccF4ErZF.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_Receive_IT(huart);
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          consider error as blocking */
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Abort DMA RX */
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           else
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             /* Call user error callback */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         else
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           /* Call user error callback */
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            Error is notified to user through user error callback */
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   } /* End if some error occurs */
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_Transmit_IT(huart);
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccF4ErZF.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/ccF4ErZF.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief UART error callback.
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccF4ErZF.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UNUSED(huart);
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    */
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *  @brief   UART control functions
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  ===============================================================================
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccF4ErZF.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status.
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccF4ErZF.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_LOCK(huart);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear TE and RE bits */
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****  *
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @verbatim
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   ==============================================================================
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     [..]
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     This subsection provides functions allowing to :
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle state.
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (+) Return the UART handle error code
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** @endverbatim
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle state.
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL state
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp1 = huart->gState;
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval UART Error Code
ARM GAS  /tmp/ccF4ErZF.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @}
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @{
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the parameters */
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * to huart->Init.StopBits value */
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
ARM GAS  /tmp/ccF4ErZF.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Configure
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****    *   to huart->Init.OneBitSampling */
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     switch (clocksource)
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       default:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         ret = HAL_ERROR;
ARM GAS  /tmp/ccF4ErZF.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return ret;
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure data inversion */
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
ARM GAS  /tmp/ccF4ErZF.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief Check the UART Idle State.
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param huart UART handle.
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tickstart = 0U;
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   tickstart = HAL_GetTick();
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Transmitter is enabled */
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until TEACK flag is set */
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccF4ErZF.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check if the Receiver is enabled */
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Wait until REACK flag is set */
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Timeout occurred */
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Initialize the UART State */
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Tickstart Tick start value
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  Timeout Timeout duration
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Check for the Timeout */
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         /* Process Unlocked */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
ARM GAS  /tmp/ccF4ErZF.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  25              		.loc 1 2382 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 2384 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2387 0
  38 000a 6923     		movs	r3, #105
  39 000c 2022     		movs	r2, #32
  40 000e C254     		strb	r2, [r0, r3]
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  41              		.loc 1 2388 0
  42              		@ sp needed
  43 0010 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE78:
  47              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.code	16
  51              		.thumb_func
  52              		.fpu softvfp
  54              	UART_EndRxTransfer:
  55              	.LFB79:
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
  56              		.loc 1 2397 0
  57              		.cfi_startproc
ARM GAS  /tmp/ccF4ErZF.s 			page 44


  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  62              		.loc 1 2399 0
  63 0000 0268     		ldr	r2, [r0]
  64 0002 1368     		ldr	r3, [r2]
  65 0004 0649     		ldr	r1, .L3
  66 0006 0B40     		ands	r3, r1
  67 0008 1360     		str	r3, [r2]
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  68              		.loc 1 2400 0
  69 000a 0268     		ldr	r2, [r0]
  70 000c 9368     		ldr	r3, [r2, #8]
  71 000e 2331     		adds	r1, r1, #35
  72 0010 FF31     		adds	r1, r1, #255
  73 0012 8B43     		bics	r3, r1
  74 0014 9360     		str	r3, [r2, #8]
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  75              		.loc 1 2403 0
  76 0016 6A23     		movs	r3, #106
  77 0018 2022     		movs	r2, #32
  78 001a C254     		strb	r2, [r0, r3]
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
  79              		.loc 1 2404 0
  80              		@ sp needed
  81 001c 7047     		bx	lr
  82              	.L4:
  83 001e C046     		.align	2
  84              	.L3:
  85 0020 DFFEFFFF 		.word	-289
  86              		.cfi_endproc
  87              	.LFE79:
  89              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  90              		.align	1
  91              		.weak	HAL_UART_MspInit
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	HAL_UART_MspInit:
  98              	.LFB41:
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
  99              		.loc 1 574 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL2:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 105              		.loc 1 581 0
 106              		@ sp needed
 107 0000 7047     		bx	lr
ARM GAS  /tmp/ccF4ErZF.s 			page 45


 108              		.cfi_endproc
 109              	.LFE41:
 111              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 112              		.align	1
 113              		.weak	HAL_UART_MspDeInit
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 117              		.fpu softvfp
 119              	HAL_UART_MspDeInit:
 120              	.LFB42:
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 121              		.loc 1 589 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LVL3:
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 127              		.loc 1 596 0
 128              		@ sp needed
 129 0000 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE42:
 133              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 134              		.align	1
 135              		.global	HAL_UART_DeInit
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	HAL_UART_DeInit:
 142              	.LFB40:
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 143              		.loc 1 536 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL4:
 148 0000 70B5     		push	{r4, r5, r6, lr}
 149              	.LCFI0:
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 4, -16
 152              		.cfi_offset 5, -12
 153              		.cfi_offset 6, -8
 154              		.cfi_offset 14, -4
 155 0002 041E     		subs	r4, r0, #0
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 156              		.loc 1 538 0
 157 0004 25D0     		beq	.L10
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 158              		.loc 1 544 0
 159 0006 0368     		ldr	r3, [r0]
 160 0008 134A     		ldr	r2, .L11
 161 000a 9342     		cmp	r3, r2
 162 000c 07D0     		beq	.L9
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 46


 163              		.loc 1 544 0 is_stmt 0 discriminator 1
 164 000e 134A     		ldr	r2, .L11+4
 165 0010 9342     		cmp	r3, r2
 166 0012 04D0     		beq	.L9
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 167              		.loc 1 544 0 discriminator 2
 168 0014 8821     		movs	r1, #136
 169 0016 8900     		lsls	r1, r1, #2
 170 0018 1148     		ldr	r0, .L11+8
 171              	.LVL5:
 172 001a FFF7FEFF 		bl	assert_failed
 173              	.LVL6:
 174              	.L9:
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 175              		.loc 1 546 0 is_stmt 1
 176 001e 6926     		movs	r6, #105
 177 0020 2423     		movs	r3, #36
 178 0022 A355     		strb	r3, [r4, r6]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 179              		.loc 1 549 0
 180 0024 2268     		ldr	r2, [r4]
 181 0026 1368     		ldr	r3, [r2]
 182 0028 0121     		movs	r1, #1
 183 002a 8B43     		bics	r3, r1
 184 002c 1360     		str	r3, [r2]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 185              		.loc 1 551 0
 186 002e 2368     		ldr	r3, [r4]
 187 0030 0025     		movs	r5, #0
 188 0032 1D60     		str	r5, [r3]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 189              		.loc 1 552 0
 190 0034 2368     		ldr	r3, [r4]
 191 0036 5D60     		str	r5, [r3, #4]
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 192              		.loc 1 553 0
 193 0038 2368     		ldr	r3, [r4]
 194 003a 9D60     		str	r5, [r3, #8]
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 195              		.loc 1 556 0
 196 003c 2000     		movs	r0, r4
 197 003e FFF7FEFF 		bl	HAL_UART_MspDeInit
 198              	.LVL7:
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 199              		.loc 1 558 0
 200 0042 E566     		str	r5, [r4, #108]
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 201              		.loc 1 559 0
 202 0044 A555     		strb	r5, [r4, r6]
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 203              		.loc 1 560 0
 204 0046 6A23     		movs	r3, #106
 205 0048 E554     		strb	r5, [r4, r3]
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 206              		.loc 1 563 0
 207 004a 023B     		subs	r3, r3, #2
 208 004c E554     		strb	r5, [r4, r3]
ARM GAS  /tmp/ccF4ErZF.s 			page 47


 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 209              		.loc 1 565 0
 210 004e 0020     		movs	r0, #0
 211              	.L8:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 212              		.loc 1 566 0
 213              		@ sp needed
 214              	.LVL8:
 215 0050 70BD     		pop	{r4, r5, r6, pc}
 216              	.LVL9:
 217              	.L10:
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 218              		.loc 1 540 0
 219 0052 0120     		movs	r0, #1
 220              	.LVL10:
 221 0054 FCE7     		b	.L8
 222              	.L12:
 223 0056 C046     		.align	2
 224              	.L11:
 225 0058 00380140 		.word	1073821696
 226 005c 00440040 		.word	1073759232
 227 0060 00000000 		.word	.LC0
 228              		.cfi_endproc
 229              	.LFE40:
 231              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 232              		.align	1
 233              		.global	HAL_UART_Transmit_IT
 234              		.syntax unified
 235              		.code	16
 236              		.thumb_func
 237              		.fpu softvfp
 239              	HAL_UART_Transmit_IT:
 240              	.LFB45:
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 241              		.loc 1 862 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              	.LVL11:
 246 0000 10B5     		push	{r4, lr}
 247              	.LCFI1:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 251              		.loc 1 864 0
 252 0002 6923     		movs	r3, #105
 253 0004 C35C     		ldrb	r3, [r0, r3]
 254 0006 202B     		cmp	r3, #32
 255 0008 26D1     		bne	.L16
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 256              		.loc 1 866 0
 257 000a 0029     		cmp	r1, #0
 258 000c 26D0     		beq	.L17
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 259              		.loc 1 866 0 is_stmt 0 discriminator 1
 260 000e 002A     		cmp	r2, #0
ARM GAS  /tmp/ccF4ErZF.s 			page 48


 261 0010 26D0     		beq	.L18
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 262              		.loc 1 874 0 is_stmt 1
 263 0012 8023     		movs	r3, #128
 264 0014 5B01     		lsls	r3, r3, #5
 265 0016 8468     		ldr	r4, [r0, #8]
 266 0018 9C42     		cmp	r4, r3
 267 001a 16D0     		beq	.L21
 268              	.L15:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 269              		.loc 1 883 0
 270 001c 6823     		movs	r3, #104
 271 001e C35C     		ldrb	r3, [r0, r3]
 272 0020 012B     		cmp	r3, #1
 273 0022 1FD0     		beq	.L20
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 274              		.loc 1 885 0 discriminator 2
 275 0024 C164     		str	r1, [r0, #76]
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 276              		.loc 1 886 0 discriminator 2
 277 0026 5023     		movs	r3, #80
 278 0028 C252     		strh	r2, [r0, r3]
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 279              		.loc 1 887 0 discriminator 2
 280 002a 0233     		adds	r3, r3, #2
 281 002c C252     		strh	r2, [r0, r3]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 282              		.loc 1 889 0 discriminator 2
 283 002e 0023     		movs	r3, #0
 284 0030 C366     		str	r3, [r0, #108]
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 285              		.loc 1 890 0 discriminator 2
 286 0032 6922     		movs	r2, #105
 287              	.LVL12:
 288 0034 2121     		movs	r1, #33
 289              	.LVL13:
 290 0036 8154     		strb	r1, [r0, r2]
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 291              		.loc 1 893 0 discriminator 2
 292 0038 013A     		subs	r2, r2, #1
 293 003a 8354     		strb	r3, [r0, r2]
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 294              		.loc 1 896 0 discriminator 2
 295 003c 0268     		ldr	r2, [r0]
 296 003e 1368     		ldr	r3, [r2]
 297 0040 5F31     		adds	r1, r1, #95
 298 0042 0B43     		orrs	r3, r1
 299 0044 1360     		str	r3, [r2]
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 300              		.loc 1 898 0 discriminator 2
 301 0046 0020     		movs	r0, #0
 302              	.LVL14:
 303 0048 07E0     		b	.L14
 304              	.LVL15:
 305              	.L21:
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 306              		.loc 1 874 0 discriminator 1
ARM GAS  /tmp/ccF4ErZF.s 			page 49


 307 004a 0369     		ldr	r3, [r0, #16]
 308 004c 002B     		cmp	r3, #0
 309 004e E5D1     		bne	.L15
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 310              		.loc 1 876 0
 311 0050 CB07     		lsls	r3, r1, #31
 312 0052 E3D5     		bpl	.L15
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 313              		.loc 1 878 0
 314 0054 0120     		movs	r0, #1
 315              	.LVL16:
 316 0056 00E0     		b	.L14
 317              	.LVL17:
 318              	.L16:
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 319              		.loc 1 902 0
 320 0058 0220     		movs	r0, #2
 321              	.LVL18:
 322              	.L14:
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 323              		.loc 1 904 0
 324              		@ sp needed
 325 005a 10BD     		pop	{r4, pc}
 326              	.LVL19:
 327              	.L17:
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 328              		.loc 1 868 0
 329 005c 0120     		movs	r0, #1
 330              	.LVL20:
 331 005e FCE7     		b	.L14
 332              	.LVL21:
 333              	.L18:
 334 0060 0120     		movs	r0, #1
 335              	.LVL22:
 336 0062 FAE7     		b	.L14
 337              	.LVL23:
 338              	.L20:
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 339              		.loc 1 883 0
 340 0064 0220     		movs	r0, #2
 341              	.LVL24:
 342 0066 F8E7     		b	.L14
 343              		.cfi_endproc
 344              	.LFE45:
 346              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 347              		.align	1
 348              		.global	HAL_UART_Receive_IT
 349              		.syntax unified
 350              		.code	16
 351              		.thumb_func
 352              		.fpu softvfp
 354              	HAL_UART_Receive_IT:
 355              	.LFB46:
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 356              		.loc 1 918 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccF4ErZF.s 			page 50


 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              	.LVL25:
 361 0000 30B5     		push	{r4, r5, lr}
 362              	.LCFI2:
 363              		.cfi_def_cfa_offset 12
 364              		.cfi_offset 4, -12
 365              		.cfi_offset 5, -8
 366              		.cfi_offset 14, -4
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 367              		.loc 1 920 0
 368 0002 6A23     		movs	r3, #106
 369 0004 C35C     		ldrb	r3, [r0, r3]
 370 0006 202B     		cmp	r3, #32
 371 0008 5AD1     		bne	.L31
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 372              		.loc 1 922 0
 373 000a 0029     		cmp	r1, #0
 374 000c 5AD0     		beq	.L32
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 375              		.loc 1 922 0 is_stmt 0 discriminator 1
 376 000e 002A     		cmp	r2, #0
 377 0010 5AD0     		beq	.L33
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 378              		.loc 1 930 0 is_stmt 1
 379 0012 8368     		ldr	r3, [r0, #8]
 380 0014 8024     		movs	r4, #128
 381 0016 6401     		lsls	r4, r4, #5
 382 0018 A342     		cmp	r3, r4
 383 001a 18D0     		beq	.L36
 384              	.L24:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 385              		.loc 1 939 0
 386 001c 6824     		movs	r4, #104
 387 001e 045D     		ldrb	r4, [r0, r4]
 388 0020 012C     		cmp	r4, #1
 389 0022 53D0     		beq	.L35
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 390              		.loc 1 939 0 is_stmt 0 discriminator 2
 391 0024 6824     		movs	r4, #104
 392 0026 0125     		movs	r5, #1
 393 0028 0555     		strb	r5, [r0, r4]
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 394              		.loc 1 941 0 is_stmt 1 discriminator 2
 395 002a 4165     		str	r1, [r0, #84]
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 396              		.loc 1 942 0 discriminator 2
 397 002c 5821     		movs	r1, #88
 398              	.LVL26:
 399 002e 4252     		strh	r2, [r0, r1]
 400              	.LVL27:
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 401              		.loc 1 943 0 discriminator 2
 402 0030 0231     		adds	r1, r1, #2
 403 0032 4252     		strh	r2, [r0, r1]
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 404              		.loc 1 946 0 discriminator 2
 405 0034 8022     		movs	r2, #128
ARM GAS  /tmp/ccF4ErZF.s 			page 51


 406              	.LVL28:
 407 0036 5201     		lsls	r2, r2, #5
 408 0038 9342     		cmp	r3, r2
 409 003a 0FD0     		beq	.L37
 410 003c 002B     		cmp	r3, #0
 411 003e 1CD1     		bne	.L28
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 412              		.loc 1 946 0 is_stmt 0 discriminator 5
 413 0040 0369     		ldr	r3, [r0, #16]
 414 0042 002B     		cmp	r3, #0
 415 0044 15D1     		bne	.L29
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 416              		.loc 1 946 0 discriminator 7
 417 0046 5C33     		adds	r3, r3, #92
 418 0048 FF22     		movs	r2, #255
 419 004a C252     		strh	r2, [r0, r3]
 420              	.LVL29:
 421 004c 19E0     		b	.L27
 422              	.LVL30:
 423              	.L36:
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 424              		.loc 1 930 0 is_stmt 1 discriminator 1
 425 004e 0469     		ldr	r4, [r0, #16]
 426 0050 002C     		cmp	r4, #0
 427 0052 E3D1     		bne	.L24
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 428              		.loc 1 932 0
 429 0054 CC07     		lsls	r4, r1, #31
 430 0056 E1D5     		bpl	.L24
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 431              		.loc 1 934 0
 432 0058 0120     		movs	r0, #1
 433              	.LVL31:
 434 005a 32E0     		b	.L23
 435              	.LVL32:
 436              	.L37:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 437              		.loc 1 946 0 discriminator 1
 438 005c 0369     		ldr	r3, [r0, #16]
 439 005e 002B     		cmp	r3, #0
 440 0060 03D1     		bne	.L26
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 441              		.loc 1 946 0 is_stmt 0 discriminator 3
 442 0062 5C33     		adds	r3, r3, #92
 443 0064 1A4A     		ldr	r2, .L39
 444 0066 C252     		strh	r2, [r0, r3]
 445              	.LVL33:
 446 0068 0BE0     		b	.L27
 447              	.LVL34:
 448              	.L26:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 449              		.loc 1 946 0 discriminator 4
 450 006a 5C23     		movs	r3, #92
 451 006c FF22     		movs	r2, #255
 452 006e C252     		strh	r2, [r0, r3]
 453              	.LVL35:
 454 0070 07E0     		b	.L27
ARM GAS  /tmp/ccF4ErZF.s 			page 52


 455              	.LVL36:
 456              	.L29:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 457              		.loc 1 946 0 discriminator 8
 458 0072 5C23     		movs	r3, #92
 459 0074 7F22     		movs	r2, #127
 460 0076 C252     		strh	r2, [r0, r3]
 461              	.LVL37:
 462 0078 03E0     		b	.L27
 463              	.LVL38:
 464              	.L28:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 465              		.loc 1 946 0 discriminator 6
 466 007a 8022     		movs	r2, #128
 467 007c 5205     		lsls	r2, r2, #21
 468 007e 9342     		cmp	r3, r2
 469 0080 13D0     		beq	.L38
 470              	.LVL39:
 471              	.L27:
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 472              		.loc 1 948 0 is_stmt 1
 473 0082 0023     		movs	r3, #0
 474 0084 C366     		str	r3, [r0, #108]
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 475              		.loc 1 949 0
 476 0086 6A22     		movs	r2, #106
 477 0088 2221     		movs	r1, #34
 478 008a 8154     		strb	r1, [r0, r2]
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 479              		.loc 1 952 0
 480 008c 023A     		subs	r2, r2, #2
 481 008e 8354     		strb	r3, [r0, r2]
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 482              		.loc 1 955 0
 483 0090 0268     		ldr	r2, [r0]
 484 0092 9368     		ldr	r3, [r2, #8]
 485 0094 2139     		subs	r1, r1, #33
 486 0096 0B43     		orrs	r3, r1
 487 0098 9360     		str	r3, [r2, #8]
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 488              		.loc 1 958 0
 489 009a 0268     		ldr	r2, [r0]
 490 009c 1168     		ldr	r1, [r2]
 491 009e 9023     		movs	r3, #144
 492 00a0 5B00     		lsls	r3, r3, #1
 493 00a2 0B43     		orrs	r3, r1
 494 00a4 1360     		str	r3, [r2]
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 495              		.loc 1 960 0
 496 00a6 0020     		movs	r0, #0
 497              	.LVL40:
 498 00a8 0BE0     		b	.L23
 499              	.LVL41:
 500              	.L38:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 501              		.loc 1 946 0 discriminator 9
 502 00aa 0369     		ldr	r3, [r0, #16]
ARM GAS  /tmp/ccF4ErZF.s 			page 53


 503 00ac 002B     		cmp	r3, #0
 504 00ae 03D1     		bne	.L30
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 505              		.loc 1 946 0 is_stmt 0 discriminator 10
 506 00b0 5C33     		adds	r3, r3, #92
 507 00b2 7F22     		movs	r2, #127
 508 00b4 C252     		strh	r2, [r0, r3]
 509              	.LVL42:
 510 00b6 E4E7     		b	.L27
 511              	.LVL43:
 512              	.L30:
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 513              		.loc 1 946 0 discriminator 11
 514 00b8 5C23     		movs	r3, #92
 515 00ba 3F22     		movs	r2, #63
 516 00bc C252     		strh	r2, [r0, r3]
 517              	.LVL44:
 518 00be E0E7     		b	.L27
 519              	.LVL45:
 520              	.L31:
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 521              		.loc 1 964 0 is_stmt 1
 522 00c0 0220     		movs	r0, #2
 523              	.LVL46:
 524              	.L23:
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 525              		.loc 1 966 0
 526              		@ sp needed
 527 00c2 30BD     		pop	{r4, r5, pc}
 528              	.LVL47:
 529              	.L32:
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 530              		.loc 1 924 0
 531 00c4 0120     		movs	r0, #1
 532              	.LVL48:
 533 00c6 FCE7     		b	.L23
 534              	.LVL49:
 535              	.L33:
 536 00c8 0120     		movs	r0, #1
 537              	.LVL50:
 538 00ca FAE7     		b	.L23
 539              	.LVL51:
 540              	.L35:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 541              		.loc 1 939 0
 542 00cc 0220     		movs	r0, #2
 543              	.LVL52:
 544 00ce F8E7     		b	.L23
 545              	.L40:
 546              		.align	2
 547              	.L39:
 548 00d0 FF010000 		.word	511
 549              		.cfi_endproc
 550              	.LFE46:
 552              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 553              		.align	1
 554              		.global	HAL_UART_Transmit_DMA
ARM GAS  /tmp/ccF4ErZF.s 			page 54


 555              		.syntax unified
 556              		.code	16
 557              		.thumb_func
 558              		.fpu softvfp
 560              	HAL_UART_Transmit_DMA:
 561              	.LFB47:
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 562              		.loc 1 980 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              	.LVL53:
 567 0000 70B5     		push	{r4, r5, r6, lr}
 568              	.LCFI3:
 569              		.cfi_def_cfa_offset 16
 570              		.cfi_offset 4, -16
 571              		.cfi_offset 5, -12
 572              		.cfi_offset 6, -8
 573              		.cfi_offset 14, -4
 574 0002 0400     		movs	r4, r0
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 575              		.loc 1 982 0
 576 0004 6920     		movs	r0, #105
 577              	.LVL54:
 578 0006 205C     		ldrb	r0, [r4, r0]
 579 0008 2028     		cmp	r0, #32
 580 000a 3ED1     		bne	.L44
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 581              		.loc 1 984 0
 582 000c 0029     		cmp	r1, #0
 583 000e 3ED0     		beq	.L45
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 584              		.loc 1 984 0 is_stmt 0 discriminator 1
 585 0010 002A     		cmp	r2, #0
 586 0012 3ED0     		beq	.L46
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 587              		.loc 1 992 0 is_stmt 1
 588 0014 8023     		movs	r3, #128
 589 0016 5B01     		lsls	r3, r3, #5
 590 0018 A068     		ldr	r0, [r4, #8]
 591 001a 9842     		cmp	r0, r3
 592 001c 2ED0     		beq	.L49
 593              	.L43:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 594              		.loc 1 1001 0
 595 001e 6823     		movs	r3, #104
 596 0020 E35C     		ldrb	r3, [r4, r3]
 597 0022 012B     		cmp	r3, #1
 598 0024 37D0     		beq	.L48
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 599              		.loc 1 1001 0 is_stmt 0 discriminator 2
 600 0026 6826     		movs	r6, #104
 601 0028 0123     		movs	r3, #1
 602 002a A355     		strb	r3, [r4, r6]
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferSize = Size;
 603              		.loc 1 1003 0 is_stmt 1 discriminator 2
 604 002c E164     		str	r1, [r4, #76]
ARM GAS  /tmp/ccF4ErZF.s 			page 55


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 605              		.loc 1 1004 0 discriminator 2
 606 002e 4F33     		adds	r3, r3, #79
 607 0030 E252     		strh	r2, [r4, r3]
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 608              		.loc 1 1005 0 discriminator 2
 609 0032 0233     		adds	r3, r3, #2
 610 0034 E252     		strh	r2, [r4, r3]
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 611              		.loc 1 1007 0 discriminator 2
 612 0036 0025     		movs	r5, #0
 613 0038 E566     		str	r5, [r4, #108]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 614              		.loc 1 1008 0 discriminator 2
 615 003a 1733     		adds	r3, r3, #23
 616 003c 2121     		movs	r1, #33
 617              	.LVL55:
 618 003e E154     		strb	r1, [r4, r3]
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 619              		.loc 1 1011 0 discriminator 2
 620 0040 236E     		ldr	r3, [r4, #96]
 621 0042 1649     		ldr	r1, .L50
 622 0044 9962     		str	r1, [r3, #40]
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 623              		.loc 1 1014 0 discriminator 2
 624 0046 236E     		ldr	r3, [r4, #96]
 625 0048 1549     		ldr	r1, .L50+4
 626 004a D962     		str	r1, [r3, #44]
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 627              		.loc 1 1017 0 discriminator 2
 628 004c 236E     		ldr	r3, [r4, #96]
 629 004e 1549     		ldr	r1, .L50+8
 630 0050 1963     		str	r1, [r3, #48]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 631              		.loc 1 1020 0 discriminator 2
 632 0052 236E     		ldr	r3, [r4, #96]
 633 0054 5D63     		str	r5, [r3, #52]
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 634              		.loc 1 1023 0 discriminator 2
 635 0056 2168     		ldr	r1, [r4]
 636 0058 2831     		adds	r1, r1, #40
 637 005a 1300     		movs	r3, r2
 638 005c 0A00     		movs	r2, r1
 639              	.LVL56:
 640 005e E16C     		ldr	r1, [r4, #76]
 641 0060 206E     		ldr	r0, [r4, #96]
 642 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 643              	.LVL57:
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 644              		.loc 1 1026 0 discriminator 2
 645 0066 2368     		ldr	r3, [r4]
 646 0068 4022     		movs	r2, #64
 647 006a 1A62     		str	r2, [r3, #32]
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 648              		.loc 1 1029 0 discriminator 2
 649 006c A555     		strb	r5, [r4, r6]
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 56


 650              		.loc 1 1033 0 discriminator 2
 651 006e 2268     		ldr	r2, [r4]
 652 0070 9368     		ldr	r3, [r2, #8]
 653 0072 8021     		movs	r1, #128
 654 0074 0B43     		orrs	r3, r1
 655 0076 9360     		str	r3, [r2, #8]
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 656              		.loc 1 1035 0 discriminator 2
 657 0078 0020     		movs	r0, #0
 658 007a 07E0     		b	.L42
 659              	.LVL58:
 660              	.L49:
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 661              		.loc 1 992 0 discriminator 1
 662 007c 2369     		ldr	r3, [r4, #16]
 663 007e 002B     		cmp	r3, #0
 664 0080 CDD1     		bne	.L43
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 665              		.loc 1 994 0
 666 0082 CB07     		lsls	r3, r1, #31
 667 0084 CBD5     		bpl	.L43
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 668              		.loc 1 996 0
 669 0086 0120     		movs	r0, #1
 670 0088 00E0     		b	.L42
 671              	.L44:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 672              		.loc 1 1039 0
 673 008a 0220     		movs	r0, #2
 674              	.LVL59:
 675              	.L42:
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 676              		.loc 1 1041 0
 677              		@ sp needed
 678              	.LVL60:
 679 008c 70BD     		pop	{r4, r5, r6, pc}
 680              	.LVL61:
 681              	.L45:
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 682              		.loc 1 986 0
 683 008e 0120     		movs	r0, #1
 684 0090 FCE7     		b	.L42
 685              	.L46:
 686 0092 0120     		movs	r0, #1
 687 0094 FAE7     		b	.L42
 688              	.L48:
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 689              		.loc 1 1001 0
 690 0096 0220     		movs	r0, #2
 691 0098 F8E7     		b	.L42
 692              	.L51:
 693 009a C046     		.align	2
 694              	.L50:
 695 009c 00000000 		.word	UART_DMATransmitCplt
 696 00a0 00000000 		.word	UART_DMATxHalfCplt
 697 00a4 00000000 		.word	UART_DMAError
 698              		.cfi_endproc
ARM GAS  /tmp/ccF4ErZF.s 			page 57


 699              	.LFE47:
 701              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 702              		.align	1
 703              		.global	HAL_UART_Receive_DMA
 704              		.syntax unified
 705              		.code	16
 706              		.thumb_func
 707              		.fpu softvfp
 709              	HAL_UART_Receive_DMA:
 710              	.LFB48:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 711              		.loc 1 1055 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              	.LVL62:
 716 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 717              	.LCFI4:
 718              		.cfi_def_cfa_offset 24
 719              		.cfi_offset 3, -24
 720              		.cfi_offset 4, -20
 721              		.cfi_offset 5, -16
 722              		.cfi_offset 6, -12
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 0400     		movs	r4, r0
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 726              		.loc 1 1057 0
 727 0004 6A20     		movs	r0, #106
 728              	.LVL63:
 729 0006 205C     		ldrb	r0, [r4, r0]
 730 0008 2028     		cmp	r0, #32
 731 000a 42D1     		bne	.L55
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 732              		.loc 1 1059 0
 733 000c 0029     		cmp	r1, #0
 734 000e 42D0     		beq	.L56
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 735              		.loc 1 1059 0 is_stmt 0 discriminator 1
 736 0010 002A     		cmp	r2, #0
 737 0012 42D0     		beq	.L57
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 738              		.loc 1 1067 0 is_stmt 1
 739 0014 8023     		movs	r3, #128
 740 0016 5B01     		lsls	r3, r3, #5
 741 0018 A068     		ldr	r0, [r4, #8]
 742 001a 9842     		cmp	r0, r3
 743 001c 32D0     		beq	.L60
 744              	.L54:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 745              		.loc 1 1076 0
 746 001e 6823     		movs	r3, #104
 747 0020 E35C     		ldrb	r3, [r4, r3]
 748 0022 012B     		cmp	r3, #1
 749 0024 3BD0     		beq	.L59
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 750              		.loc 1 1076 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccF4ErZF.s 			page 58


 751 0026 6827     		movs	r7, #104
 752 0028 0126     		movs	r6, #1
 753 002a E655     		strb	r6, [r4, r7]
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferSize = Size;
 754              		.loc 1 1078 0 is_stmt 1 discriminator 2
 755 002c 6165     		str	r1, [r4, #84]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 756              		.loc 1 1079 0 discriminator 2
 757 002e 5823     		movs	r3, #88
 758 0030 E252     		strh	r2, [r4, r3]
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 759              		.loc 1 1081 0 discriminator 2
 760 0032 0025     		movs	r5, #0
 761 0034 E566     		str	r5, [r4, #108]
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 762              		.loc 1 1082 0 discriminator 2
 763 0036 1233     		adds	r3, r3, #18
 764 0038 2221     		movs	r1, #34
 765              	.LVL64:
 766 003a E154     		strb	r1, [r4, r3]
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 767              		.loc 1 1085 0 discriminator 2
 768 003c 636E     		ldr	r3, [r4, #100]
 769 003e 1949     		ldr	r1, .L61
 770 0040 9962     		str	r1, [r3, #40]
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 771              		.loc 1 1088 0 discriminator 2
 772 0042 636E     		ldr	r3, [r4, #100]
 773 0044 1849     		ldr	r1, .L61+4
 774 0046 D962     		str	r1, [r3, #44]
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 775              		.loc 1 1091 0 discriminator 2
 776 0048 636E     		ldr	r3, [r4, #100]
 777 004a 1849     		ldr	r1, .L61+8
 778 004c 1963     		str	r1, [r3, #48]
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 779              		.loc 1 1094 0 discriminator 2
 780 004e 636E     		ldr	r3, [r4, #100]
 781 0050 5D63     		str	r5, [r3, #52]
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 782              		.loc 1 1097 0 discriminator 2
 783 0052 2168     		ldr	r1, [r4]
 784 0054 2431     		adds	r1, r1, #36
 785 0056 1300     		movs	r3, r2
 786 0058 626D     		ldr	r2, [r4, #84]
 787              	.LVL65:
 788 005a 606E     		ldr	r0, [r4, #100]
 789 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 790              	.LVL66:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 791              		.loc 1 1100 0 discriminator 2
 792 0060 E555     		strb	r5, [r4, r7]
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 793              		.loc 1 1103 0 discriminator 2
 794 0062 2268     		ldr	r2, [r4]
 795 0064 1168     		ldr	r1, [r2]
 796 0066 8023     		movs	r3, #128
ARM GAS  /tmp/ccF4ErZF.s 			page 59


 797 0068 5B00     		lsls	r3, r3, #1
 798 006a 0B43     		orrs	r3, r1
 799 006c 1360     		str	r3, [r2]
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 800              		.loc 1 1106 0 discriminator 2
 801 006e 2268     		ldr	r2, [r4]
 802 0070 9368     		ldr	r3, [r2, #8]
 803 0072 3343     		orrs	r3, r6
 804 0074 9360     		str	r3, [r2, #8]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 805              		.loc 1 1110 0 discriminator 2
 806 0076 2268     		ldr	r2, [r4]
 807 0078 9368     		ldr	r3, [r2, #8]
 808 007a 4021     		movs	r1, #64
 809 007c 0B43     		orrs	r3, r1
 810 007e 9360     		str	r3, [r2, #8]
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 811              		.loc 1 1112 0 discriminator 2
 812 0080 0020     		movs	r0, #0
 813 0082 07E0     		b	.L53
 814              	.LVL67:
 815              	.L60:
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 816              		.loc 1 1067 0 discriminator 1
 817 0084 2369     		ldr	r3, [r4, #16]
 818 0086 002B     		cmp	r3, #0
 819 0088 C9D1     		bne	.L54
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 820              		.loc 1 1069 0
 821 008a CB07     		lsls	r3, r1, #31
 822 008c C7D5     		bpl	.L54
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 823              		.loc 1 1071 0
 824 008e 0120     		movs	r0, #1
 825 0090 00E0     		b	.L53
 826              	.L55:
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 827              		.loc 1 1116 0
 828 0092 0220     		movs	r0, #2
 829              	.LVL68:
 830              	.L53:
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 831              		.loc 1 1118 0
 832              		@ sp needed
 833              	.LVL69:
 834 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 835              	.LVL70:
 836              	.L56:
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 837              		.loc 1 1061 0
 838 0096 0120     		movs	r0, #1
 839 0098 FCE7     		b	.L53
 840              	.L57:
 841 009a 0120     		movs	r0, #1
 842 009c FAE7     		b	.L53
 843              	.L59:
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
ARM GAS  /tmp/ccF4ErZF.s 			page 60


 844              		.loc 1 1076 0
 845 009e 0220     		movs	r0, #2
 846 00a0 F8E7     		b	.L53
 847              	.L62:
 848 00a2 C046     		.align	2
 849              	.L61:
 850 00a4 00000000 		.word	UART_DMAReceiveCplt
 851 00a8 00000000 		.word	UART_DMARxHalfCplt
 852 00ac 00000000 		.word	UART_DMAError
 853              		.cfi_endproc
 854              	.LFE48:
 856              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 857              		.align	1
 858              		.global	HAL_UART_DMAPause
 859              		.syntax unified
 860              		.code	16
 861              		.thumb_func
 862              		.fpu softvfp
 864              	HAL_UART_DMAPause:
 865              	.LFB49:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 866              		.loc 1 1126 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              		@ link register save eliminated.
 871              	.LVL71:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 872              		.loc 1 1128 0
 873 0000 6823     		movs	r3, #104
 874 0002 C35C     		ldrb	r3, [r0, r3]
 875 0004 012B     		cmp	r3, #1
 876 0006 2CD0     		beq	.L67
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 877              		.loc 1 1128 0 is_stmt 0 discriminator 2
 878 0008 6823     		movs	r3, #104
 879 000a 0122     		movs	r2, #1
 880 000c C254     		strb	r2, [r0, r3]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 881              		.loc 1 1130 0 is_stmt 1 discriminator 2
 882 000e 0133     		adds	r3, r3, #1
 883 0010 C35C     		ldrb	r3, [r0, r3]
 884 0012 212B     		cmp	r3, #33
 885 0014 08D0     		beq	.L68
 886              	.L65:
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 887              		.loc 1 1136 0
 888 0016 6A23     		movs	r3, #106
 889 0018 C35C     		ldrb	r3, [r0, r3]
 890 001a 222B     		cmp	r3, #34
 891 001c 0DD0     		beq	.L69
 892              	.L66:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 893              		.loc 1 1148 0
 894 001e 6823     		movs	r3, #104
 895 0020 0022     		movs	r2, #0
 896 0022 C254     		strb	r2, [r0, r3]
ARM GAS  /tmp/ccF4ErZF.s 			page 61


1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 897              		.loc 1 1150 0
 898 0024 0020     		movs	r0, #0
 899              	.LVL72:
 900              	.L64:
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 901              		.loc 1 1151 0
 902              		@ sp needed
 903 0026 7047     		bx	lr
 904              	.LVL73:
 905              	.L68:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 906              		.loc 1 1131 0 discriminator 1
 907 0028 0368     		ldr	r3, [r0]
 908 002a 9A68     		ldr	r2, [r3, #8]
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 909              		.loc 1 1130 0 discriminator 1
 910 002c 1206     		lsls	r2, r2, #24
 911 002e F2D5     		bpl	.L65
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 912              		.loc 1 1134 0
 913 0030 9A68     		ldr	r2, [r3, #8]
 914 0032 8021     		movs	r1, #128
 915 0034 8A43     		bics	r2, r1
 916 0036 9A60     		str	r2, [r3, #8]
 917 0038 EDE7     		b	.L65
 918              	.L69:
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 919              		.loc 1 1137 0 discriminator 1
 920 003a 0368     		ldr	r3, [r0]
 921 003c 9A68     		ldr	r2, [r3, #8]
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 922              		.loc 1 1136 0 discriminator 1
 923 003e 5206     		lsls	r2, r2, #25
 924 0040 EDD5     		bpl	.L66
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 925              		.loc 1 1140 0
 926 0042 1A68     		ldr	r2, [r3]
 927 0044 0849     		ldr	r1, .L70
 928 0046 0A40     		ands	r2, r1
 929 0048 1A60     		str	r2, [r3]
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 930              		.loc 1 1141 0
 931 004a 0268     		ldr	r2, [r0]
 932 004c 9368     		ldr	r3, [r2, #8]
 933 004e 0331     		adds	r1, r1, #3
 934 0050 FF31     		adds	r1, r1, #255
 935 0052 8B43     		bics	r3, r1
 936 0054 9360     		str	r3, [r2, #8]
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 937              		.loc 1 1144 0
 938 0056 0268     		ldr	r2, [r0]
 939 0058 9368     		ldr	r3, [r2, #8]
 940 005a 3F31     		adds	r1, r1, #63
 941 005c 8B43     		bics	r3, r1
 942 005e 9360     		str	r3, [r2, #8]
 943 0060 DDE7     		b	.L66
ARM GAS  /tmp/ccF4ErZF.s 			page 62


 944              	.L67:
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 945              		.loc 1 1128 0
 946 0062 0220     		movs	r0, #2
 947              	.LVL74:
 948 0064 DFE7     		b	.L64
 949              	.L71:
 950 0066 C046     		.align	2
 951              	.L70:
 952 0068 FFFEFFFF 		.word	-257
 953              		.cfi_endproc
 954              	.LFE49:
 956              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 957              		.align	1
 958              		.global	HAL_UART_DMAResume
 959              		.syntax unified
 960              		.code	16
 961              		.thumb_func
 962              		.fpu softvfp
 964              	HAL_UART_DMAResume:
 965              	.LFB50:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 966              		.loc 1 1159 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971              	.LVL75:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 972              		.loc 1 1161 0
 973 0000 6823     		movs	r3, #104
 974 0002 C35C     		ldrb	r3, [r0, r3]
 975 0004 012B     		cmp	r3, #1
 976 0006 29D0     		beq	.L76
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 977              		.loc 1 1161 0 is_stmt 0 discriminator 2
 978 0008 6823     		movs	r3, #104
 979 000a 0122     		movs	r2, #1
 980 000c C254     		strb	r2, [r0, r3]
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 981              		.loc 1 1163 0 is_stmt 1 discriminator 2
 982 000e 0133     		adds	r3, r3, #1
 983 0010 C35C     		ldrb	r3, [r0, r3]
 984 0012 212B     		cmp	r3, #33
 985 0014 08D0     		beq	.L77
 986              	.L74:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 987              		.loc 1 1168 0
 988 0016 6A23     		movs	r3, #106
 989 0018 C35C     		ldrb	r3, [r0, r3]
 990 001a 222B     		cmp	r3, #34
 991 001c 0AD0     		beq	.L78
 992              	.L75:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 993              		.loc 1 1182 0
 994 001e 6823     		movs	r3, #104
 995 0020 0022     		movs	r2, #0
ARM GAS  /tmp/ccF4ErZF.s 			page 63


 996 0022 C254     		strb	r2, [r0, r3]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 997              		.loc 1 1184 0
 998 0024 0020     		movs	r0, #0
 999              	.LVL76:
 1000              	.L73:
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1001              		.loc 1 1185 0
 1002              		@ sp needed
 1003 0026 7047     		bx	lr
 1004              	.LVL77:
 1005              	.L77:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1006              		.loc 1 1166 0
 1007 0028 0268     		ldr	r2, [r0]
 1008 002a 9368     		ldr	r3, [r2, #8]
 1009 002c 8021     		movs	r1, #128
 1010 002e 0B43     		orrs	r3, r1
 1011 0030 9360     		str	r3, [r2, #8]
 1012 0032 F0E7     		b	.L74
 1013              	.L78:
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1014              		.loc 1 1171 0
 1015 0034 0368     		ldr	r3, [r0]
 1016 0036 0822     		movs	r2, #8
 1017 0038 1A62     		str	r2, [r3, #32]
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1018              		.loc 1 1174 0
 1019 003a 0268     		ldr	r2, [r0]
 1020 003c 1168     		ldr	r1, [r2]
 1021 003e 8023     		movs	r3, #128
 1022 0040 5B00     		lsls	r3, r3, #1
 1023 0042 0B43     		orrs	r3, r1
 1024 0044 1360     		str	r3, [r2]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1025              		.loc 1 1175 0
 1026 0046 0268     		ldr	r2, [r0]
 1027 0048 9368     		ldr	r3, [r2, #8]
 1028 004a 0121     		movs	r1, #1
 1029 004c 0B43     		orrs	r3, r1
 1030 004e 9360     		str	r3, [r2, #8]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1031              		.loc 1 1178 0
 1032 0050 0268     		ldr	r2, [r0]
 1033 0052 9368     		ldr	r3, [r2, #8]
 1034 0054 3F31     		adds	r1, r1, #63
 1035 0056 0B43     		orrs	r3, r1
 1036 0058 9360     		str	r3, [r2, #8]
 1037 005a E0E7     		b	.L75
 1038              	.L76:
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1039              		.loc 1 1161 0
 1040 005c 0220     		movs	r0, #2
 1041              	.LVL78:
 1042 005e E2E7     		b	.L73
 1043              		.cfi_endproc
 1044              	.LFE50:
ARM GAS  /tmp/ccF4ErZF.s 			page 64


 1046              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1047              		.align	1
 1048              		.global	HAL_UART_DMAStop
 1049              		.syntax unified
 1050              		.code	16
 1051              		.thumb_func
 1052              		.fpu softvfp
 1054              	HAL_UART_DMAStop:
 1055              	.LFB51:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1056              		.loc 1 1193 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060              	.LVL79:
 1061 0000 10B5     		push	{r4, lr}
 1062              	.LCFI5:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 4, -8
 1065              		.cfi_offset 14, -4
 1066 0002 0400     		movs	r4, r0
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1067              		.loc 1 1202 0
 1068 0004 6923     		movs	r3, #105
 1069 0006 C35C     		ldrb	r3, [r0, r3]
 1070 0008 212B     		cmp	r3, #33
 1071 000a 05D0     		beq	.L84
 1072              	.LVL80:
 1073              	.L80:
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1074              		.loc 1 1217 0
 1075 000c 6A23     		movs	r3, #106
 1076 000e E35C     		ldrb	r3, [r4, r3]
 1077 0010 222B     		cmp	r3, #34
 1078 0012 12D0     		beq	.L85
 1079              	.L82:
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1080              		.loc 1 1232 0
 1081 0014 0020     		movs	r0, #0
 1082              		@ sp needed
 1083              	.LVL81:
 1084 0016 10BD     		pop	{r4, pc}
 1085              	.LVL82:
 1086              	.L84:
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1087              		.loc 1 1203 0 discriminator 1
 1088 0018 0368     		ldr	r3, [r0]
 1089 001a 9A68     		ldr	r2, [r3, #8]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1090              		.loc 1 1202 0 discriminator 1
 1091 001c 1206     		lsls	r2, r2, #24
 1092 001e F5D5     		bpl	.L80
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1093              		.loc 1 1205 0
 1094 0020 9A68     		ldr	r2, [r3, #8]
 1095 0022 8021     		movs	r1, #128
 1096 0024 8A43     		bics	r2, r1
ARM GAS  /tmp/ccF4ErZF.s 			page 65


 1097 0026 9A60     		str	r2, [r3, #8]
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1098              		.loc 1 1208 0
 1099 0028 006E     		ldr	r0, [r0, #96]
 1100              	.LVL83:
 1101 002a 0028     		cmp	r0, #0
 1102 002c 01D0     		beq	.L81
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1103              		.loc 1 1210 0
 1104 002e FFF7FEFF 		bl	HAL_DMA_Abort
 1105              	.LVL84:
 1106              	.L81:
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1107              		.loc 1 1213 0
 1108 0032 2000     		movs	r0, r4
 1109 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1110              	.LVL85:
 1111 0038 E8E7     		b	.L80
 1112              	.L85:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1113              		.loc 1 1218 0 discriminator 1
 1114 003a 2368     		ldr	r3, [r4]
 1115 003c 9A68     		ldr	r2, [r3, #8]
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1116              		.loc 1 1217 0 discriminator 1
 1117 003e 5206     		lsls	r2, r2, #25
 1118 0040 E8D5     		bpl	.L82
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1119              		.loc 1 1220 0
 1120 0042 9A68     		ldr	r2, [r3, #8]
 1121 0044 4021     		movs	r1, #64
 1122 0046 8A43     		bics	r2, r1
 1123 0048 9A60     		str	r2, [r3, #8]
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1124              		.loc 1 1223 0
 1125 004a 606E     		ldr	r0, [r4, #100]
 1126 004c 0028     		cmp	r0, #0
 1127 004e 01D0     		beq	.L83
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1128              		.loc 1 1225 0
 1129 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1130              	.LVL86:
 1131              	.L83:
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1132              		.loc 1 1228 0
 1133 0054 2000     		movs	r0, r4
 1134 0056 FFF7FEFF 		bl	UART_EndRxTransfer
 1135              	.LVL87:
 1136 005a DBE7     		b	.L82
 1137              		.cfi_endproc
 1138              	.LFE51:
 1140              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1141              		.align	1
 1142              		.global	HAL_UART_Abort
 1143              		.syntax unified
 1144              		.code	16
 1145              		.thumb_func
ARM GAS  /tmp/ccF4ErZF.s 			page 66


 1146              		.fpu softvfp
 1148              	HAL_UART_Abort:
 1149              	.LFB52:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1150              		.loc 1 1247 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              	.LVL88:
 1155 0000 10B5     		push	{r4, lr}
 1156              	.LCFI6:
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 4, -8
 1159              		.cfi_offset 14, -4
 1160 0002 0400     		movs	r4, r0
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1161              		.loc 1 1249 0
 1162 0004 0268     		ldr	r2, [r0]
 1163 0006 1368     		ldr	r3, [r2]
 1164 0008 1C49     		ldr	r1, .L89
 1165 000a 0B40     		ands	r3, r1
 1166 000c 1360     		str	r3, [r2]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1167              		.loc 1 1250 0
 1168 000e 0268     		ldr	r2, [r0]
 1169 0010 9368     		ldr	r3, [r2, #8]
 1170 0012 E331     		adds	r1, r1, #227
 1171 0014 FF31     		adds	r1, r1, #255
 1172 0016 8B43     		bics	r3, r1
 1173 0018 9360     		str	r3, [r2, #8]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1174              		.loc 1 1253 0
 1175 001a 0368     		ldr	r3, [r0]
 1176 001c 9A68     		ldr	r2, [r3, #8]
 1177 001e 1206     		lsls	r2, r2, #24
 1178 0020 0BD5     		bpl	.L87
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1179              		.loc 1 1255 0
 1180 0022 9A68     		ldr	r2, [r3, #8]
 1181 0024 7F31     		adds	r1, r1, #127
 1182 0026 8A43     		bics	r2, r1
 1183 0028 9A60     		str	r2, [r3, #8]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1184              		.loc 1 1258 0
 1185 002a 036E     		ldr	r3, [r0, #96]
 1186 002c 002B     		cmp	r3, #0
 1187 002e 04D0     		beq	.L87
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1188              		.loc 1 1262 0
 1189 0030 0022     		movs	r2, #0
 1190 0032 5A63     		str	r2, [r3, #52]
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1191              		.loc 1 1264 0
 1192 0034 006E     		ldr	r0, [r0, #96]
 1193              	.LVL89:
 1194 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1195              	.LVL90:
ARM GAS  /tmp/ccF4ErZF.s 			page 67


 1196              	.L87:
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1197              		.loc 1 1269 0
 1198 003a 2368     		ldr	r3, [r4]
 1199 003c 9A68     		ldr	r2, [r3, #8]
 1200 003e 5206     		lsls	r2, r2, #25
 1201 0040 0BD5     		bpl	.L88
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1202              		.loc 1 1271 0
 1203 0042 9A68     		ldr	r2, [r3, #8]
 1204 0044 4021     		movs	r1, #64
 1205 0046 8A43     		bics	r2, r1
 1206 0048 9A60     		str	r2, [r3, #8]
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1207              		.loc 1 1274 0
 1208 004a 636E     		ldr	r3, [r4, #100]
 1209 004c 002B     		cmp	r3, #0
 1210 004e 04D0     		beq	.L88
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1211              		.loc 1 1278 0
 1212 0050 0022     		movs	r2, #0
 1213 0052 5A63     		str	r2, [r3, #52]
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1214              		.loc 1 1280 0
 1215 0054 606E     		ldr	r0, [r4, #100]
 1216 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1217              	.LVL91:
 1218              	.L88:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U; 
 1219              		.loc 1 1285 0
 1220 005a 0023     		movs	r3, #0
 1221 005c 5222     		movs	r2, #82
 1222 005e A352     		strh	r3, [r4, r2]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1223              		.loc 1 1286 0
 1224 0060 0832     		adds	r2, r2, #8
 1225 0062 A352     		strh	r3, [r4, r2]
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1226              		.loc 1 1289 0
 1227 0064 2268     		ldr	r2, [r4]
 1228 0066 0F21     		movs	r1, #15
 1229 0068 1162     		str	r1, [r2, #32]
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1230              		.loc 1 1292 0
 1231 006a 2022     		movs	r2, #32
 1232 006c 5A31     		adds	r1, r1, #90
 1233 006e 6254     		strb	r2, [r4, r1]
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1234              		.loc 1 1293 0
 1235 0070 0131     		adds	r1, r1, #1
 1236 0072 6254     		strb	r2, [r4, r1]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1237              		.loc 1 1296 0
 1238 0074 E366     		str	r3, [r4, #108]
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1239              		.loc 1 1299 0
 1240 0076 0020     		movs	r0, #0
ARM GAS  /tmp/ccF4ErZF.s 			page 68


 1241              		@ sp needed
 1242              	.LVL92:
 1243 0078 10BD     		pop	{r4, pc}
 1244              	.L90:
 1245 007a C046     		.align	2
 1246              	.L89:
 1247 007c 1FFEFFFF 		.word	-481
 1248              		.cfi_endproc
 1249              	.LFE52:
 1251              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1252              		.align	1
 1253              		.global	HAL_UART_AbortTransmit
 1254              		.syntax unified
 1255              		.code	16
 1256              		.thumb_func
 1257              		.fpu softvfp
 1259              	HAL_UART_AbortTransmit:
 1260              	.LFB53:
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1261              		.loc 1 1314 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 0
 1264              		@ frame_needed = 0, uses_anonymous_args = 0
 1265              	.LVL93:
 1266 0000 10B5     		push	{r4, lr}
 1267              	.LCFI7:
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 4, -8
 1270              		.cfi_offset 14, -4
 1271 0002 0400     		movs	r4, r0
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1272              		.loc 1 1316 0
 1273 0004 0268     		ldr	r2, [r0]
 1274 0006 1368     		ldr	r3, [r2]
 1275 0008 C021     		movs	r1, #192
 1276 000a 8B43     		bics	r3, r1
 1277 000c 1360     		str	r3, [r2]
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1278              		.loc 1 1319 0
 1279 000e 0368     		ldr	r3, [r0]
 1280 0010 9A68     		ldr	r2, [r3, #8]
 1281 0012 1206     		lsls	r2, r2, #24
 1282 0014 0BD5     		bpl	.L92
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1283              		.loc 1 1321 0
 1284 0016 9A68     		ldr	r2, [r3, #8]
 1285 0018 4039     		subs	r1, r1, #64
 1286 001a 8A43     		bics	r2, r1
 1287 001c 9A60     		str	r2, [r3, #8]
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1288              		.loc 1 1324 0
 1289 001e 036E     		ldr	r3, [r0, #96]
 1290 0020 002B     		cmp	r3, #0
 1291 0022 04D0     		beq	.L92
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1292              		.loc 1 1328 0
 1293 0024 0022     		movs	r2, #0
ARM GAS  /tmp/ccF4ErZF.s 			page 69


 1294 0026 5A63     		str	r2, [r3, #52]
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1295              		.loc 1 1330 0
 1296 0028 006E     		ldr	r0, [r0, #96]
 1297              	.LVL94:
 1298 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1299              	.LVL95:
 1300              	.L92:
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1301              		.loc 1 1335 0
 1302 002e 5223     		movs	r3, #82
 1303 0030 0022     		movs	r2, #0
 1304 0032 E252     		strh	r2, [r4, r3]
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1305              		.loc 1 1338 0
 1306 0034 1733     		adds	r3, r3, #23
 1307 0036 2032     		adds	r2, r2, #32
 1308 0038 E254     		strb	r2, [r4, r3]
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1309              		.loc 1 1341 0
 1310 003a 0020     		movs	r0, #0
 1311              		@ sp needed
 1312              	.LVL96:
 1313 003c 10BD     		pop	{r4, pc}
 1314              		.cfi_endproc
 1315              	.LFE53:
 1317              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1318              		.align	1
 1319              		.global	HAL_UART_AbortReceive
 1320              		.syntax unified
 1321              		.code	16
 1322              		.thumb_func
 1323              		.fpu softvfp
 1325              	HAL_UART_AbortReceive:
 1326              	.LFB54:
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1327              		.loc 1 1356 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              	.LVL97:
 1332 0000 10B5     		push	{r4, lr}
 1333              	.LCFI8:
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 4, -8
 1336              		.cfi_offset 14, -4
 1337 0002 0400     		movs	r4, r0
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1338              		.loc 1 1358 0
 1339 0004 0268     		ldr	r2, [r0]
 1340 0006 1368     		ldr	r3, [r2]
 1341 0008 1149     		ldr	r1, .L95
 1342 000a 0B40     		ands	r3, r1
 1343 000c 1360     		str	r3, [r2]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1344              		.loc 1 1359 0
 1345 000e 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccF4ErZF.s 			page 70


 1346 0010 9368     		ldr	r3, [r2, #8]
 1347 0012 2331     		adds	r1, r1, #35
 1348 0014 FF31     		adds	r1, r1, #255
 1349 0016 8B43     		bics	r3, r1
 1350 0018 9360     		str	r3, [r2, #8]
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1351              		.loc 1 1362 0
 1352 001a 0368     		ldr	r3, [r0]
 1353 001c 9A68     		ldr	r2, [r3, #8]
 1354 001e 5206     		lsls	r2, r2, #25
 1355 0020 0BD5     		bpl	.L94
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1356              		.loc 1 1364 0
 1357 0022 9A68     		ldr	r2, [r3, #8]
 1358 0024 3F31     		adds	r1, r1, #63
 1359 0026 8A43     		bics	r2, r1
 1360 0028 9A60     		str	r2, [r3, #8]
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1361              		.loc 1 1367 0
 1362 002a 436E     		ldr	r3, [r0, #100]
 1363 002c 002B     		cmp	r3, #0
 1364 002e 04D0     		beq	.L94
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1365              		.loc 1 1371 0
 1366 0030 0022     		movs	r2, #0
 1367 0032 5A63     		str	r2, [r3, #52]
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1368              		.loc 1 1373 0
 1369 0034 406E     		ldr	r0, [r0, #100]
 1370              	.LVL98:
 1371 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1372              	.LVL99:
 1373              	.L94:
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1374              		.loc 1 1378 0
 1375 003a 5A23     		movs	r3, #90
 1376 003c 0022     		movs	r2, #0
 1377 003e E252     		strh	r2, [r4, r3]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1378              		.loc 1 1381 0
 1379 0040 2368     		ldr	r3, [r4]
 1380 0042 0F32     		adds	r2, r2, #15
 1381 0044 1A62     		str	r2, [r3, #32]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1382              		.loc 1 1384 0
 1383 0046 6A23     		movs	r3, #106
 1384 0048 1132     		adds	r2, r2, #17
 1385 004a E254     		strb	r2, [r4, r3]
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1386              		.loc 1 1387 0
 1387 004c 0020     		movs	r0, #0
 1388              		@ sp needed
 1389              	.LVL100:
 1390 004e 10BD     		pop	{r4, pc}
 1391              	.L96:
 1392              		.align	2
 1393              	.L95:
ARM GAS  /tmp/ccF4ErZF.s 			page 71


 1394 0050 DFFEFFFF 		.word	-289
 1395              		.cfi_endproc
 1396              	.LFE54:
 1398              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1399              		.align	1
 1400              		.weak	HAL_UART_TxCpltCallback
 1401              		.syntax unified
 1402              		.code	16
 1403              		.thumb_func
 1404              		.fpu softvfp
 1406              	HAL_UART_TxCpltCallback:
 1407              	.LFB59:
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1408              		.loc 1 1811 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413              	.LVL101:
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1414              		.loc 1 1818 0
 1415              		@ sp needed
 1416 0000 7047     		bx	lr
 1417              		.cfi_endproc
 1418              	.LFE59:
 1420              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1421              		.align	1
 1422              		.syntax unified
 1423              		.code	16
 1424              		.thumb_func
 1425              		.fpu softvfp
 1427              	UART_DMATransmitCplt:
 1428              	.LFB80:
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1429              		.loc 1 2413 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              	.LVL102:
 1434 0000 10B5     		push	{r4, lr}
 1435              	.LCFI9:
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 4, -8
 1438              		.cfi_offset 14, -4
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1439              		.loc 1 2414 0
 1440 0002 436A     		ldr	r3, [r0, #36]
 1441              	.LVL103:
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
ARM GAS  /tmp/ccF4ErZF.s 			page 72


2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1442              		.loc 1 2417 0
 1443 0004 0268     		ldr	r2, [r0]
 1444 0006 1268     		ldr	r2, [r2]
 1445 0008 9206     		lsls	r2, r2, #26
 1446 000a 0DD4     		bmi	.L99
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0;
 1447              		.loc 1 2419 0
 1448 000c 5222     		movs	r2, #82
 1449 000e 0021     		movs	r1, #0
 1450 0010 9952     		strh	r1, [r3, r2]
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1451              		.loc 1 2423 0
 1452 0012 1968     		ldr	r1, [r3]
 1453 0014 8A68     		ldr	r2, [r1, #8]
 1454 0016 8020     		movs	r0, #128
 1455              	.LVL104:
 1456 0018 8243     		bics	r2, r0
 1457 001a 8A60     		str	r2, [r1, #8]
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1458              		.loc 1 2426 0
 1459 001c 1A68     		ldr	r2, [r3]
 1460 001e 1368     		ldr	r3, [r2]
 1461              	.LVL105:
 1462 0020 4021     		movs	r1, #64
 1463 0022 0B43     		orrs	r3, r1
 1464 0024 1360     		str	r3, [r2]
 1465              	.L98:
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Circular mode */
2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1466              		.loc 1 2434 0
 1467              		@ sp needed
 1468 0026 10BD     		pop	{r4, pc}
 1469              	.LVL106:
 1470              	.L99:
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1471              		.loc 1 2431 0
 1472 0028 1800     		movs	r0, r3
 1473              	.LVL107:
 1474 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1475              	.LVL108:
 1476              		.loc 1 2434 0
 1477 002e FAE7     		b	.L98
 1478              		.cfi_endproc
ARM GAS  /tmp/ccF4ErZF.s 			page 73


 1479              	.LFE80:
 1481              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1482              		.align	1
 1483              		.weak	HAL_UART_TxHalfCpltCallback
 1484              		.syntax unified
 1485              		.code	16
 1486              		.thumb_func
 1487              		.fpu softvfp
 1489              	HAL_UART_TxHalfCpltCallback:
 1490              	.LFB60:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1491              		.loc 1 1826 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 1496              	.LVL109:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1497              		.loc 1 1833 0
 1498              		@ sp needed
 1499 0000 7047     		bx	lr
 1500              		.cfi_endproc
 1501              	.LFE60:
 1503              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1504              		.align	1
 1505              		.syntax unified
 1506              		.code	16
 1507              		.thumb_func
 1508              		.fpu softvfp
 1510              	UART_DMATxHalfCplt:
 1511              	.LFB81:
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1512              		.loc 1 2442 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              	.LVL110:
 1517 0000 10B5     		push	{r4, lr}
 1518              	.LCFI10:
 1519              		.cfi_def_cfa_offset 8
 1520              		.cfi_offset 4, -8
 1521              		.cfi_offset 14, -4
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1522              		.loc 1 2443 0
 1523 0002 406A     		ldr	r0, [r0, #36]
 1524              	.LVL111:
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 1525              		.loc 1 2445 0
 1526 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
ARM GAS  /tmp/ccF4ErZF.s 			page 74


 1527              	.LVL112:
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1528              		.loc 1 2446 0
 1529              		@ sp needed
 1530 0008 10BD     		pop	{r4, pc}
 1531              		.cfi_endproc
 1532              	.LFE81:
 1534              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1535              		.align	1
 1536              		.weak	HAL_UART_RxCpltCallback
 1537              		.syntax unified
 1538              		.code	16
 1539              		.thumb_func
 1540              		.fpu softvfp
 1542              	HAL_UART_RxCpltCallback:
 1543              	.LFB61:
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1544              		.loc 1 1841 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548              		@ link register save eliminated.
 1549              	.LVL113:
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1550              		.loc 1 1848 0
 1551              		@ sp needed
 1552 0000 7047     		bx	lr
 1553              		.cfi_endproc
 1554              	.LFE61:
 1556              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1557              		.align	1
 1558              		.syntax unified
 1559              		.code	16
 1560              		.thumb_func
 1561              		.fpu softvfp
 1563              	UART_DMAReceiveCplt:
 1564              	.LFB82:
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1565              		.loc 1 2454 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              	.LVL114:
 1570 0000 10B5     		push	{r4, lr}
 1571              	.LCFI11:
 1572              		.cfi_def_cfa_offset 8
 1573              		.cfi_offset 4, -8
 1574              		.cfi_offset 14, -4
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1575              		.loc 1 2455 0
ARM GAS  /tmp/ccF4ErZF.s 			page 75


 1576 0002 436A     		ldr	r3, [r0, #36]
 1577              	.LVL115:
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* DMA Normal mode */
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 1578              		.loc 1 2458 0
 1579 0004 0268     		ldr	r2, [r0]
 1580 0006 1268     		ldr	r2, [r2]
 1581 0008 9206     		lsls	r2, r2, #26
 1582 000a 15D4     		bmi	.L105
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1583              		.loc 1 2460 0
 1584 000c 5A22     		movs	r2, #90
 1585 000e 0021     		movs	r1, #0
 1586 0010 9952     		strh	r1, [r3, r2]
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1587              		.loc 1 2463 0
 1588 0012 1968     		ldr	r1, [r3]
 1589 0014 0A68     		ldr	r2, [r1]
 1590 0016 0A48     		ldr	r0, .L106
 1591              	.LVL116:
 1592 0018 0240     		ands	r2, r0
 1593 001a 0A60     		str	r2, [r1]
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1594              		.loc 1 2464 0
 1595 001c 1968     		ldr	r1, [r3]
 1596 001e 8A68     		ldr	r2, [r1, #8]
 1597 0020 0330     		adds	r0, r0, #3
 1598 0022 FF30     		adds	r0, r0, #255
 1599 0024 8243     		bics	r2, r0
 1600 0026 8A60     		str	r2, [r1, #8]
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        in the UART CR3 register */
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1601              		.loc 1 2468 0
 1602 0028 1968     		ldr	r1, [r3]
 1603 002a 8A68     		ldr	r2, [r1, #8]
 1604 002c 3F30     		adds	r0, r0, #63
 1605 002e 8243     		bics	r2, r0
 1606 0030 8A60     		str	r2, [r1, #8]
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1607              		.loc 1 2471 0
 1608 0032 6A22     		movs	r2, #106
 1609 0034 2021     		movs	r1, #32
 1610 0036 9954     		strb	r1, [r3, r2]
 1611              	.L105:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 1612              		.loc 1 2474 0
 1613 0038 1800     		movs	r0, r3
ARM GAS  /tmp/ccF4ErZF.s 			page 76


 1614 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1615              	.LVL117:
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1616              		.loc 1 2475 0
 1617              		@ sp needed
 1618 003e 10BD     		pop	{r4, pc}
 1619              	.L107:
 1620              		.align	2
 1621              	.L106:
 1622 0040 FFFEFFFF 		.word	-257
 1623              		.cfi_endproc
 1624              	.LFE82:
 1626              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1627              		.align	1
 1628              		.weak	HAL_UART_RxHalfCpltCallback
 1629              		.syntax unified
 1630              		.code	16
 1631              		.thumb_func
 1632              		.fpu softvfp
 1634              	HAL_UART_RxHalfCpltCallback:
 1635              	.LFB62:
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1636              		.loc 1 1856 0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 1640              		@ link register save eliminated.
 1641              	.LVL118:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1642              		.loc 1 1863 0
 1643              		@ sp needed
 1644 0000 7047     		bx	lr
 1645              		.cfi_endproc
 1646              	.LFE62:
 1648              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1649              		.align	1
 1650              		.syntax unified
 1651              		.code	16
 1652              		.thumb_func
 1653              		.fpu softvfp
 1655              	UART_DMARxHalfCplt:
 1656              	.LFB83:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1657              		.loc 1 2483 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              	.LVL119:
 1662 0000 10B5     		push	{r4, lr}
 1663              	.LCFI12:
ARM GAS  /tmp/ccF4ErZF.s 			page 77


 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 4, -8
 1666              		.cfi_offset 14, -4
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1667              		.loc 1 2484 0
 1668 0002 406A     		ldr	r0, [r0, #36]
 1669              	.LVL120:
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 1670              		.loc 1 2486 0
 1671 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1672              	.LVL121:
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1673              		.loc 1 2487 0
 1674              		@ sp needed
 1675 0008 10BD     		pop	{r4, pc}
 1676              		.cfi_endproc
 1677              	.LFE83:
 1679              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1680              		.align	1
 1681              		.weak	HAL_UART_ErrorCallback
 1682              		.syntax unified
 1683              		.code	16
 1684              		.thumb_func
 1685              		.fpu softvfp
 1687              	HAL_UART_ErrorCallback:
 1688              	.LFB63:
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1689              		.loc 1 1871 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              		@ link register save eliminated.
 1694              	.LVL122:
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1695              		.loc 1 1878 0
 1696              		@ sp needed
 1697 0000 7047     		bx	lr
 1698              		.cfi_endproc
 1699              	.LFE63:
 1701              		.section	.text.UART_DMAError,"ax",%progbits
 1702              		.align	1
 1703              		.syntax unified
 1704              		.code	16
 1705              		.thumb_func
 1706              		.fpu softvfp
 1708              	UART_DMAError:
 1709              	.LFB84:
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param hdma DMA handle.
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1710              		.loc 1 2495 0
ARM GAS  /tmp/ccF4ErZF.s 			page 78


 1711              		.cfi_startproc
 1712              		@ args = 0, pretend = 0, frame = 0
 1713              		@ frame_needed = 0, uses_anonymous_args = 0
 1714              	.LVL123:
 1715 0000 10B5     		push	{r4, lr}
 1716              	.LCFI13:
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 4, -8
 1719              		.cfi_offset 14, -4
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1720              		.loc 1 2496 0
 1721 0002 446A     		ldr	r4, [r0, #36]
 1722              	.LVL124:
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 1723              		.loc 1 2499 0
 1724 0004 6923     		movs	r3, #105
 1725 0006 E35C     		ldrb	r3, [r4, r3]
 1726 0008 212B     		cmp	r3, #33
 1727 000a 0BD0     		beq	.L114
 1728              	.LVL125:
 1729              	.L112:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1730              		.loc 1 2507 0
 1731 000c 6A23     		movs	r3, #106
 1732 000e E35C     		ldrb	r3, [r4, r3]
 1733 0010 222B     		cmp	r3, #34
 1734 0012 12D0     		beq	.L115
 1735              	.L113:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 1736              		.loc 1 2514 0
 1737 0014 E36E     		ldr	r3, [r4, #108]
 1738 0016 1022     		movs	r2, #16
 1739 0018 1343     		orrs	r3, r2
 1740 001a E366     		str	r3, [r4, #108]
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1741              		.loc 1 2515 0
 1742 001c 2000     		movs	r0, r4
 1743 001e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1744              	.LVL126:
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1745              		.loc 1 2516 0
 1746              		@ sp needed
ARM GAS  /tmp/ccF4ErZF.s 			page 79


 1747              	.LVL127:
 1748 0022 10BD     		pop	{r4, pc}
 1749              	.LVL128:
 1750              	.L114:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1751              		.loc 1 2500 0
 1752 0024 2368     		ldr	r3, [r4]
 1753 0026 9B68     		ldr	r3, [r3, #8]
 1754 0028 1B06     		lsls	r3, r3, #24
 1755 002a EFD5     		bpl	.L112
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1756              		.loc 1 2502 0
 1757 002c 5223     		movs	r3, #82
 1758 002e 0022     		movs	r2, #0
 1759 0030 E252     		strh	r2, [r4, r3]
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1760              		.loc 1 2503 0
 1761 0032 2000     		movs	r0, r4
 1762              	.LVL129:
 1763 0034 FFF7FEFF 		bl	UART_EndTxTransfer
 1764              	.LVL130:
 1765 0038 E8E7     		b	.L112
 1766              	.L115:
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1767              		.loc 1 2508 0
 1768 003a 2368     		ldr	r3, [r4]
 1769 003c 9B68     		ldr	r3, [r3, #8]
 1770 003e 5B06     		lsls	r3, r3, #25
 1771 0040 E8D5     		bpl	.L113
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1772              		.loc 1 2510 0
 1773 0042 5A23     		movs	r3, #90
 1774 0044 0022     		movs	r2, #0
 1775 0046 E252     		strh	r2, [r4, r3]
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1776              		.loc 1 2511 0
 1777 0048 2000     		movs	r0, r4
 1778 004a FFF7FEFF 		bl	UART_EndRxTransfer
 1779              	.LVL131:
 1780 004e E1E7     		b	.L113
 1781              		.cfi_endproc
 1782              	.LFE84:
 1784              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1785              		.align	1
 1786              		.syntax unified
 1787              		.code	16
 1788              		.thumb_func
 1789              		.fpu softvfp
 1791              	UART_DMAAbortOnError:
 1792              	.LFB85:
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
ARM GAS  /tmp/ccF4ErZF.s 			page 80


2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 1793              		.loc 1 2525 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 0
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              	.LVL132:
 1798 0000 10B5     		push	{r4, lr}
 1799              	.LCFI14:
 1800              		.cfi_def_cfa_offset 8
 1801              		.cfi_offset 4, -8
 1802              		.cfi_offset 14, -4
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1803              		.loc 1 2526 0
 1804 0002 406A     		ldr	r0, [r0, #36]
 1805              	.LVL133:
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1806              		.loc 1 2527 0
 1807 0004 0023     		movs	r3, #0
 1808 0006 5A22     		movs	r2, #90
 1809 0008 8352     		strh	r3, [r0, r2]
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1810              		.loc 1 2528 0
 1811 000a 083A     		subs	r2, r2, #8
 1812 000c 8352     		strh	r3, [r0, r2]
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 1813              		.loc 1 2530 0
 1814 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1815              	.LVL134:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 1816              		.loc 1 2531 0
 1817              		@ sp needed
 1818 0012 10BD     		pop	{r4, pc}
 1819              		.cfi_endproc
 1820              	.LFE85:
 1822              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1823              		.align	1
 1824              		.weak	HAL_UART_AbortCpltCallback
 1825              		.syntax unified
 1826              		.code	16
 1827              		.thumb_func
 1828              		.fpu softvfp
 1830              	HAL_UART_AbortCpltCallback:
 1831              	.LFB64:
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1832              		.loc 1 1886 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 0, uses_anonymous_args = 0
 1836              		@ link register save eliminated.
 1837              	.LVL135:
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1838              		.loc 1 1893 0
 1839              		@ sp needed
 1840 0000 7047     		bx	lr
 1841              		.cfi_endproc
ARM GAS  /tmp/ccF4ErZF.s 			page 81


 1842              	.LFE64:
 1844              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1845              		.align	1
 1846              		.global	HAL_UART_Abort_IT
 1847              		.syntax unified
 1848              		.code	16
 1849              		.thumb_func
 1850              		.fpu softvfp
 1852              	HAL_UART_Abort_IT:
 1853              	.LFB55:
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1854              		.loc 1 1404 0
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 0
 1857              		@ frame_needed = 0, uses_anonymous_args = 0
 1858              	.LVL136:
 1859 0000 10B5     		push	{r4, lr}
 1860              	.LCFI15:
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 4, -8
 1863              		.cfi_offset 14, -4
 1864 0002 0400     		movs	r4, r0
 1865              	.LVL137:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1866              		.loc 1 1408 0
 1867 0004 0268     		ldr	r2, [r0]
 1868 0006 1368     		ldr	r3, [r2]
 1869 0008 3049     		ldr	r1, .L130
 1870 000a 0B40     		ands	r3, r1
 1871 000c 1360     		str	r3, [r2]
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1872              		.loc 1 1409 0
 1873 000e 0268     		ldr	r2, [r0]
 1874 0010 9368     		ldr	r3, [r2, #8]
 1875 0012 E331     		adds	r1, r1, #227
 1876 0014 FF31     		adds	r1, r1, #255
 1877 0016 8B43     		bics	r3, r1
 1878 0018 9360     		str	r3, [r2, #8]
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1879              		.loc 1 1414 0
 1880 001a 036E     		ldr	r3, [r0, #96]
 1881 001c 002B     		cmp	r3, #0
 1882 001e 05D0     		beq	.L119
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1883              		.loc 1 1418 0
 1884 0020 0268     		ldr	r2, [r0]
 1885 0022 9268     		ldr	r2, [r2, #8]
 1886 0024 1206     		lsls	r2, r2, #24
 1887 0026 1ED5     		bpl	.L120
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1888              		.loc 1 1420 0
 1889 0028 294A     		ldr	r2, .L130+4
 1890 002a 5A63     		str	r2, [r3, #52]
 1891              	.L119:
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1892              		.loc 1 1428 0
 1893 002c 636E     		ldr	r3, [r4, #100]
ARM GAS  /tmp/ccF4ErZF.s 			page 82


 1894 002e 002B     		cmp	r3, #0
 1895 0030 05D0     		beq	.L121
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1896              		.loc 1 1432 0
 1897 0032 2268     		ldr	r2, [r4]
 1898 0034 9268     		ldr	r2, [r2, #8]
 1899 0036 5206     		lsls	r2, r2, #25
 1900 0038 18D5     		bpl	.L122
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1901              		.loc 1 1434 0
 1902 003a 264A     		ldr	r2, .L130+8
 1903 003c 5A63     		str	r2, [r3, #52]
 1904              	.L121:
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1905              		.loc 1 1443 0
 1906 003e 2368     		ldr	r3, [r4]
 1907 0040 9A68     		ldr	r2, [r3, #8]
 1908 0042 1206     		lsls	r2, r2, #24
 1909 0044 15D5     		bpl	.L127
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1910              		.loc 1 1446 0
 1911 0046 9A68     		ldr	r2, [r3, #8]
 1912 0048 8021     		movs	r1, #128
 1913 004a 8A43     		bics	r2, r1
 1914 004c 9A60     		str	r2, [r3, #8]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1915              		.loc 1 1449 0
 1916 004e 206E     		ldr	r0, [r4, #96]
 1917              	.LVL138:
 1918 0050 0028     		cmp	r0, #0
 1919 0052 33D0     		beq	.L128
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1920              		.loc 1 1455 0
 1921 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1922              	.LVL139:
 1923 0058 0028     		cmp	r0, #0
 1924 005a 31D0     		beq	.L129
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 1925              		.loc 1 1457 0
 1926 005c 236E     		ldr	r3, [r4, #96]
 1927 005e 0022     		movs	r2, #0
 1928 0060 5A63     		str	r2, [r3, #52]
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1929              		.loc 1 1405 0
 1930 0062 0121     		movs	r1, #1
 1931 0064 06E0     		b	.L123
 1932              	.LVL140:
 1933              	.L120:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1934              		.loc 1 1424 0
 1935 0066 0022     		movs	r2, #0
 1936 0068 5A63     		str	r2, [r3, #52]
 1937 006a DFE7     		b	.L119
 1938              	.L122:
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 1939              		.loc 1 1438 0
 1940 006c 0022     		movs	r2, #0
ARM GAS  /tmp/ccF4ErZF.s 			page 83


 1941 006e 5A63     		str	r2, [r3, #52]
 1942 0070 E5E7     		b	.L121
 1943              	.L127:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 1944              		.loc 1 1405 0
 1945 0072 0121     		movs	r1, #1
 1946              	.LVL141:
 1947              	.L123:
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 1948              		.loc 1 1467 0
 1949 0074 2368     		ldr	r3, [r4]
 1950 0076 9A68     		ldr	r2, [r3, #8]
 1951 0078 5206     		lsls	r2, r2, #25
 1952 007a 23D5     		bpl	.L124
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1953              		.loc 1 1469 0
 1954 007c 9A68     		ldr	r2, [r3, #8]
 1955 007e 4020     		movs	r0, #64
 1956 0080 8243     		bics	r2, r0
 1957 0082 9A60     		str	r2, [r3, #8]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 1958              		.loc 1 1472 0
 1959 0084 606E     		ldr	r0, [r4, #100]
 1960 0086 0028     		cmp	r0, #0
 1961 0088 1CD0     		beq	.L124
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 1962              		.loc 1 1478 0
 1963 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1964              	.LVL142:
 1965 008e 0028     		cmp	r0, #0
 1966 0090 1AD0     		beq	.L125
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         abortcplt = 1U;
 1967              		.loc 1 1480 0
 1968 0092 636E     		ldr	r3, [r4, #100]
 1969 0094 0022     		movs	r2, #0
 1970 0096 5A63     		str	r2, [r3, #52]
 1971              	.LVL143:
 1972              	.L126:
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1973              		.loc 1 1494 0
 1974 0098 0023     		movs	r3, #0
 1975 009a 5222     		movs	r2, #82
 1976 009c A352     		strh	r3, [r4, r2]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1977              		.loc 1 1495 0
 1978 009e 0832     		adds	r2, r2, #8
 1979 00a0 A352     		strh	r3, [r4, r2]
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1980              		.loc 1 1498 0
 1981 00a2 E366     		str	r3, [r4, #108]
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1982              		.loc 1 1501 0
 1983 00a4 2368     		ldr	r3, [r4]
 1984 00a6 4B3A     		subs	r2, r2, #75
 1985 00a8 1A62     		str	r2, [r3, #32]
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1986              		.loc 1 1504 0
ARM GAS  /tmp/ccF4ErZF.s 			page 84


 1987 00aa 2023     		movs	r3, #32
 1988 00ac 5A32     		adds	r2, r2, #90
 1989 00ae A354     		strb	r3, [r4, r2]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 1990              		.loc 1 1505 0
 1991 00b0 0132     		adds	r2, r2, #1
 1992 00b2 A354     		strb	r3, [r4, r2]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 1993              		.loc 1 1508 0
 1994 00b4 2000     		movs	r0, r4
 1995 00b6 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1996              	.LVL144:
 1997 00ba 05E0     		b	.L125
 1998              	.LVL145:
 1999              	.L128:
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2000              		.loc 1 1405 0
 2001 00bc 0121     		movs	r1, #1
 2002 00be D9E7     		b	.L123
 2003              	.L129:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2004              		.loc 1 1461 0
 2005 00c0 0021     		movs	r1, #0
 2006 00c2 D7E7     		b	.L123
 2007              	.LVL146:
 2008              	.L124:
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2009              		.loc 1 1491 0
 2010 00c4 0129     		cmp	r1, #1
 2011 00c6 E7D0     		beq	.L126
 2012              	.LVL147:
 2013              	.L125:
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2014              		.loc 1 1512 0
 2015 00c8 0020     		movs	r0, #0
 2016              		@ sp needed
 2017              	.LVL148:
 2018 00ca 10BD     		pop	{r4, pc}
 2019              	.L131:
 2020              		.align	2
 2021              	.L130:
 2022 00cc 1FFEFFFF 		.word	-481
 2023 00d0 00000000 		.word	UART_DMATxAbortCallback
 2024 00d4 00000000 		.word	UART_DMARxAbortCallback
 2025              		.cfi_endproc
 2026              	.LFE55:
 2028              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2029              		.align	1
 2030              		.syntax unified
 2031              		.code	16
 2032              		.thumb_func
 2033              		.fpu softvfp
 2035              	UART_DMARxAbortCallback:
 2036              	.LFB87:
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
ARM GAS  /tmp/ccF4ErZF.s 			page 85


2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2037              		.loc 1 2584 0
 2038              		.cfi_startproc
 2039              		@ args = 0, pretend = 0, frame = 0
 2040              		@ frame_needed = 0, uses_anonymous_args = 0
 2041              	.LVL149:
 2042 0000 10B5     		push	{r4, lr}
 2043              	.LCFI16:
ARM GAS  /tmp/ccF4ErZF.s 			page 86


 2044              		.cfi_def_cfa_offset 8
 2045              		.cfi_offset 4, -8
 2046              		.cfi_offset 14, -4
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2047              		.loc 1 2585 0
 2048 0002 406A     		ldr	r0, [r0, #36]
 2049              	.LVL150:
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 2050              		.loc 1 2587 0
 2051 0004 436E     		ldr	r3, [r0, #100]
 2052 0006 0022     		movs	r2, #0
 2053 0008 5A63     		str	r2, [r3, #52]
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2054              		.loc 1 2590 0
 2055 000a 036E     		ldr	r3, [r0, #96]
 2056 000c 002B     		cmp	r3, #0
 2057 000e 03D0     		beq	.L133
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 2058              		.loc 1 2592 0
 2059 0010 5B6B     		ldr	r3, [r3, #52]
 2060 0012 002B     		cmp	r3, #0
 2061 0014 00D0     		beq	.L133
 2062              	.LVL151:
 2063              	.L132:
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Reset errorCode */
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2064              		.loc 1 2614 0
 2065              		@ sp needed
 2066 0016 10BD     		pop	{r4, pc}
 2067              	.LVL152:
 2068              	.L133:
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2069              		.loc 1 2599 0
ARM GAS  /tmp/ccF4ErZF.s 			page 87


 2070 0018 0023     		movs	r3, #0
 2071 001a 5222     		movs	r2, #82
 2072 001c 8352     		strh	r3, [r0, r2]
2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2073              		.loc 1 2600 0
 2074 001e 0832     		adds	r2, r2, #8
 2075 0020 8352     		strh	r3, [r0, r2]
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2076              		.loc 1 2603 0
 2077 0022 C366     		str	r3, [r0, #108]
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2078              		.loc 1 2606 0
 2079 0024 0368     		ldr	r3, [r0]
 2080 0026 4B3A     		subs	r2, r2, #75
 2081 0028 1A62     		str	r2, [r3, #32]
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2082              		.loc 1 2609 0
 2083 002a 2023     		movs	r3, #32
 2084 002c 5A32     		adds	r2, r2, #90
 2085 002e 8354     		strb	r3, [r0, r2]
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2086              		.loc 1 2610 0
 2087 0030 0132     		adds	r2, r2, #1
 2088 0032 8354     		strb	r3, [r0, r2]
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2089              		.loc 1 2613 0
 2090 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2091              	.LVL153:
 2092 0038 EDE7     		b	.L132
 2093              		.cfi_endproc
 2094              	.LFE87:
 2096              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2097              		.align	1
 2098              		.syntax unified
 2099              		.code	16
 2100              		.thumb_func
 2101              		.fpu softvfp
 2103              	UART_DMATxAbortCallback:
 2104              	.LFB86:
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2105              		.loc 1 2542 0
 2106              		.cfi_startproc
 2107              		@ args = 0, pretend = 0, frame = 0
 2108              		@ frame_needed = 0, uses_anonymous_args = 0
 2109              	.LVL154:
 2110 0000 10B5     		push	{r4, lr}
 2111              	.LCFI17:
 2112              		.cfi_def_cfa_offset 8
 2113              		.cfi_offset 4, -8
 2114              		.cfi_offset 14, -4
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2115              		.loc 1 2543 0
 2116 0002 406A     		ldr	r0, [r0, #36]
 2117              	.LVL155:
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2118              		.loc 1 2545 0
 2119 0004 036E     		ldr	r3, [r0, #96]
ARM GAS  /tmp/ccF4ErZF.s 			page 88


 2120 0006 0022     		movs	r2, #0
 2121 0008 5A63     		str	r2, [r3, #52]
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2122              		.loc 1 2548 0
 2123 000a 436E     		ldr	r3, [r0, #100]
 2124 000c 002B     		cmp	r3, #0
 2125 000e 03D0     		beq	.L136
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2126              		.loc 1 2550 0
 2127 0010 5B6B     		ldr	r3, [r3, #52]
 2128 0012 002B     		cmp	r3, #0
 2129 0014 00D0     		beq	.L136
 2130              	.LVL156:
 2131              	.L135:
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2132              		.loc 1 2572 0
 2133              		@ sp needed
 2134 0016 10BD     		pop	{r4, pc}
 2135              	.LVL157:
 2136              	.L136:
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2137              		.loc 1 2557 0
 2138 0018 0023     		movs	r3, #0
 2139 001a 5222     		movs	r2, #82
 2140 001c 8352     		strh	r3, [r0, r2]
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2141              		.loc 1 2558 0
 2142 001e 0832     		adds	r2, r2, #8
 2143 0020 8352     		strh	r3, [r0, r2]
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2144              		.loc 1 2561 0
 2145 0022 C366     		str	r3, [r0, #108]
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2146              		.loc 1 2564 0
 2147 0024 0368     		ldr	r3, [r0]
 2148 0026 4B3A     		subs	r2, r2, #75
 2149 0028 1A62     		str	r2, [r3, #32]
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2150              		.loc 1 2567 0
 2151 002a 2023     		movs	r3, #32
 2152 002c 5A32     		adds	r2, r2, #90
 2153 002e 8354     		strb	r3, [r0, r2]
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2154              		.loc 1 2568 0
 2155 0030 0132     		adds	r2, r2, #1
 2156 0032 8354     		strb	r3, [r0, r2]
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2157              		.loc 1 2571 0
 2158 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2159              	.LVL158:
 2160 0038 EDE7     		b	.L135
 2161              		.cfi_endproc
 2162              	.LFE86:
 2164              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2165              		.align	1
 2166              		.weak	HAL_UART_AbortTransmitCpltCallback
 2167              		.syntax unified
ARM GAS  /tmp/ccF4ErZF.s 			page 89


 2168              		.code	16
 2169              		.thumb_func
 2170              		.fpu softvfp
 2172              	HAL_UART_AbortTransmitCpltCallback:
 2173              	.LFB65:
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2174              		.loc 1 1901 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              		@ link register save eliminated.
 2179              	.LVL159:
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2180              		.loc 1 1908 0
 2181              		@ sp needed
 2182 0000 7047     		bx	lr
 2183              		.cfi_endproc
 2184              	.LFE65:
 2186              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2187              		.align	1
 2188              		.global	HAL_UART_AbortTransmit_IT
 2189              		.syntax unified
 2190              		.code	16
 2191              		.thumb_func
 2192              		.fpu softvfp
 2194              	HAL_UART_AbortTransmit_IT:
 2195              	.LFB56:
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2196              		.loc 1 1529 0
 2197              		.cfi_startproc
 2198              		@ args = 0, pretend = 0, frame = 0
 2199              		@ frame_needed = 0, uses_anonymous_args = 0
 2200              	.LVL160:
 2201 0000 10B5     		push	{r4, lr}
 2202              	.LCFI18:
 2203              		.cfi_def_cfa_offset 8
 2204              		.cfi_offset 4, -8
 2205              		.cfi_offset 14, -4
 2206 0002 0400     		movs	r4, r0
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2207              		.loc 1 1531 0
 2208 0004 0268     		ldr	r2, [r0]
 2209 0006 1368     		ldr	r3, [r2]
 2210 0008 C021     		movs	r1, #192
 2211 000a 8B43     		bics	r3, r1
 2212 000c 1360     		str	r3, [r2]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2213              		.loc 1 1534 0
 2214 000e 0368     		ldr	r3, [r0]
 2215 0010 9A68     		ldr	r2, [r3, #8]
 2216 0012 1206     		lsls	r2, r2, #24
 2217 0014 1BD5     		bpl	.L140
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2218              		.loc 1 1536 0
 2219 0016 9A68     		ldr	r2, [r3, #8]
 2220 0018 4039     		subs	r1, r1, #64
 2221 001a 8A43     		bics	r2, r1
ARM GAS  /tmp/ccF4ErZF.s 			page 90


 2222 001c 9A60     		str	r2, [r3, #8]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2223              		.loc 1 1539 0
 2224 001e 036E     		ldr	r3, [r0, #96]
 2225 0020 002B     		cmp	r3, #0
 2226 0022 0BD0     		beq	.L141
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2227              		.loc 1 1543 0
 2228 0024 0E4A     		ldr	r2, .L143
 2229 0026 5A63     		str	r2, [r3, #52]
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2230              		.loc 1 1546 0
 2231 0028 006E     		ldr	r0, [r0, #96]
 2232              	.LVL161:
 2233 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2234              	.LVL162:
 2235 002e 0028     		cmp	r0, #0
 2236 0030 02D0     		beq	.L142
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2237              		.loc 1 1549 0
 2238 0032 206E     		ldr	r0, [r4, #96]
 2239 0034 436B     		ldr	r3, [r0, #52]
 2240 0036 9847     		blx	r3
 2241              	.LVL163:
 2242              	.L142:
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2243              		.loc 1 1577 0
 2244 0038 0020     		movs	r0, #0
 2245              		@ sp needed
 2246              	.LVL164:
 2247 003a 10BD     		pop	{r4, pc}
 2248              	.LVL165:
 2249              	.L141:
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2250              		.loc 1 1555 0
 2251 003c 5223     		movs	r3, #82
 2252 003e 0022     		movs	r2, #0
 2253 0040 C252     		strh	r2, [r0, r3]
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2254              		.loc 1 1558 0
 2255 0042 1733     		adds	r3, r3, #23
 2256 0044 2032     		adds	r2, r2, #32
 2257 0046 C254     		strb	r2, [r0, r3]
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2258              		.loc 1 1561 0
 2259 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2260              	.LVL166:
 2261 004c F4E7     		b	.L142
 2262              	.LVL167:
 2263              	.L140:
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2264              		.loc 1 1567 0
 2265 004e 5223     		movs	r3, #82
 2266 0050 0022     		movs	r2, #0
 2267 0052 C252     		strh	r2, [r0, r3]
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2268              		.loc 1 1570 0
ARM GAS  /tmp/ccF4ErZF.s 			page 91


 2269 0054 1733     		adds	r3, r3, #23
 2270 0056 2032     		adds	r2, r2, #32
 2271 0058 C254     		strb	r2, [r0, r3]
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2272              		.loc 1 1573 0
 2273 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2274              	.LVL168:
 2275 005e EBE7     		b	.L142
 2276              	.L144:
 2277              		.align	2
 2278              	.L143:
 2279 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2280              		.cfi_endproc
 2281              	.LFE56:
 2283              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2284              		.align	1
 2285              		.syntax unified
 2286              		.code	16
 2287              		.thumb_func
 2288              		.fpu softvfp
 2290              	UART_DMATxOnlyAbortCallback:
 2291              	.LFB88:
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2292              		.loc 1 2626 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              	.LVL169:
 2297 0000 10B5     		push	{r4, lr}
 2298              	.LCFI19:
 2299              		.cfi_def_cfa_offset 8
 2300              		.cfi_offset 4, -8
 2301              		.cfi_offset 14, -4
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2302              		.loc 1 2627 0
 2303 0002 406A     		ldr	r0, [r0, #36]
 2304              	.LVL170:
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2305              		.loc 1 2629 0
 2306 0004 5223     		movs	r3, #82
 2307 0006 0022     		movs	r2, #0
 2308 0008 C252     		strh	r2, [r0, r3]
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccF4ErZF.s 			page 92


 2309              		.loc 1 2632 0
 2310 000a 1733     		adds	r3, r3, #23
 2311 000c 2032     		adds	r2, r2, #32
 2312 000e C254     		strb	r2, [r0, r3]
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 2313              		.loc 1 2635 0
 2314 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2315              	.LVL171:
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2316              		.loc 1 2636 0
 2317              		@ sp needed
 2318 0014 10BD     		pop	{r4, pc}
 2319              		.cfi_endproc
 2320              	.LFE88:
 2322              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2323              		.align	1
 2324              		.weak	HAL_UART_AbortReceiveCpltCallback
 2325              		.syntax unified
 2326              		.code	16
 2327              		.thumb_func
 2328              		.fpu softvfp
 2330              	HAL_UART_AbortReceiveCpltCallback:
 2331              	.LFB66:
1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2332              		.loc 1 1916 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336              		@ link register save eliminated.
 2337              	.LVL172:
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2338              		.loc 1 1923 0
 2339              		@ sp needed
 2340 0000 7047     		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE66:
 2344              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2345              		.align	1
 2346              		.global	HAL_UART_AbortReceive_IT
 2347              		.syntax unified
 2348              		.code	16
 2349              		.thumb_func
 2350              		.fpu softvfp
 2352              	HAL_UART_AbortReceive_IT:
 2353              	.LFB57:
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2354              		.loc 1 1594 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 0
 2357              		@ frame_needed = 0, uses_anonymous_args = 0
 2358              	.LVL173:
 2359 0000 10B5     		push	{r4, lr}
 2360              	.LCFI20:
 2361              		.cfi_def_cfa_offset 8
 2362              		.cfi_offset 4, -8
ARM GAS  /tmp/ccF4ErZF.s 			page 93


 2363              		.cfi_offset 14, -4
 2364 0002 0400     		movs	r4, r0
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2365              		.loc 1 1596 0
 2366 0004 0268     		ldr	r2, [r0]
 2367 0006 1368     		ldr	r3, [r2]
 2368 0008 1B49     		ldr	r1, .L151
 2369 000a 0B40     		ands	r3, r1
 2370 000c 1360     		str	r3, [r2]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2371              		.loc 1 1597 0
 2372 000e 0268     		ldr	r2, [r0]
 2373 0010 9368     		ldr	r3, [r2, #8]
 2374 0012 2331     		adds	r1, r1, #35
 2375 0014 FF31     		adds	r1, r1, #255
 2376 0016 8B43     		bics	r3, r1
 2377 0018 9360     		str	r3, [r2, #8]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2378              		.loc 1 1600 0
 2379 001a 0368     		ldr	r3, [r0]
 2380 001c 9A68     		ldr	r2, [r3, #8]
 2381 001e 5206     		lsls	r2, r2, #25
 2382 0020 1ED5     		bpl	.L148
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2383              		.loc 1 1602 0
 2384 0022 9A68     		ldr	r2, [r3, #8]
 2385 0024 3F31     		adds	r1, r1, #63
 2386 0026 8A43     		bics	r2, r1
 2387 0028 9A60     		str	r2, [r3, #8]
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2388              		.loc 1 1605 0
 2389 002a 436E     		ldr	r3, [r0, #100]
 2390 002c 002B     		cmp	r3, #0
 2391 002e 0BD0     		beq	.L149
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2392              		.loc 1 1609 0
 2393 0030 124A     		ldr	r2, .L151+4
 2394 0032 5A63     		str	r2, [r3, #52]
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 2395              		.loc 1 1612 0
 2396 0034 406E     		ldr	r0, [r0, #100]
 2397              	.LVL174:
 2398 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2399              	.LVL175:
 2400 003a 0028     		cmp	r0, #0
 2401 003c 02D0     		beq	.L150
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 2402              		.loc 1 1615 0
 2403 003e 606E     		ldr	r0, [r4, #100]
 2404 0040 436B     		ldr	r3, [r0, #52]
 2405 0042 9847     		blx	r3
 2406              	.LVL176:
 2407              	.L150:
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2408              		.loc 1 1649 0
 2409 0044 0020     		movs	r0, #0
 2410              		@ sp needed
ARM GAS  /tmp/ccF4ErZF.s 			page 94


 2411              	.LVL177:
 2412 0046 10BD     		pop	{r4, pc}
 2413              	.LVL178:
 2414              	.L149:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2415              		.loc 1 1621 0
 2416 0048 5A23     		movs	r3, #90
 2417 004a 0022     		movs	r2, #0
 2418 004c C252     		strh	r2, [r0, r3]
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2419              		.loc 1 1624 0
 2420 004e 0368     		ldr	r3, [r0]
 2421 0050 0F32     		adds	r2, r2, #15
 2422 0052 1A62     		str	r2, [r3, #32]
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2423              		.loc 1 1627 0
 2424 0054 6A23     		movs	r3, #106
 2425 0056 1132     		adds	r2, r2, #17
 2426 0058 C254     		strb	r2, [r0, r3]
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 2427              		.loc 1 1630 0
 2428 005a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2429              	.LVL179:
 2430 005e F1E7     		b	.L150
 2431              	.LVL180:
 2432              	.L148:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2433              		.loc 1 1636 0
 2434 0060 5A22     		movs	r2, #90
 2435 0062 0021     		movs	r1, #0
 2436 0064 8152     		strh	r1, [r0, r2]
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2437              		.loc 1 1639 0
 2438 0066 4B3A     		subs	r2, r2, #75
 2439 0068 1A62     		str	r2, [r3, #32]
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2440              		.loc 1 1642 0
 2441 006a 6A23     		movs	r3, #106
 2442 006c 1132     		adds	r2, r2, #17
 2443 006e C254     		strb	r2, [r0, r3]
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 2444              		.loc 1 1645 0
 2445 0070 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2446              	.LVL181:
 2447 0074 E6E7     		b	.L150
 2448              	.L152:
 2449 0076 C046     		.align	2
 2450              	.L151:
 2451 0078 DFFEFFFF 		.word	-289
 2452 007c 00000000 		.word	UART_DMARxOnlyAbortCallback
 2453              		.cfi_endproc
 2454              	.LFE57:
 2456              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2457              		.align	1
 2458              		.syntax unified
 2459              		.code	16
 2460              		.thumb_func
ARM GAS  /tmp/ccF4ErZF.s 			page 95


 2461              		.fpu softvfp
 2463              	UART_DMARxOnlyAbortCallback:
 2464              	.LFB89:
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  hdma DMA handle.
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval None
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 2465              		.loc 1 2647 0
 2466              		.cfi_startproc
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469              	.LVL182:
 2470 0000 10B5     		push	{r4, lr}
 2471              	.LCFI21:
 2472              		.cfi_def_cfa_offset 8
 2473              		.cfi_offset 4, -8
 2474              		.cfi_offset 14, -4
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2475              		.loc 1 2648 0
 2476 0002 406A     		ldr	r0, [r0, #36]
 2477              	.LVL183:
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2478              		.loc 1 2650 0
 2479 0004 5A23     		movs	r3, #90
 2480 0006 0022     		movs	r2, #0
 2481 0008 C252     		strh	r2, [r0, r3]
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2482              		.loc 1 2653 0
 2483 000a 0368     		ldr	r3, [r0]
 2484 000c 0F32     		adds	r2, r2, #15
 2485 000e 1A62     		str	r2, [r3, #32]
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2486              		.loc 1 2656 0
 2487 0010 6A23     		movs	r3, #106
 2488 0012 1132     		adds	r2, r2, #17
 2489 0014 C254     		strb	r2, [r0, r3]
2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Call user Abort complete callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 2490              		.loc 1 2659 0
 2491 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2492              	.LVL184:
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2493              		.loc 1 2660 0
 2494              		@ sp needed
ARM GAS  /tmp/ccF4ErZF.s 			page 96


 2495 001a 10BD     		pop	{r4, pc}
 2496              		.cfi_endproc
 2497              	.LFE89:
 2499              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2500              		.align	1
 2501              		.global	HAL_MultiProcessor_EnterMuteMode
 2502              		.syntax unified
 2503              		.code	16
 2504              		.thumb_func
 2505              		.fpu softvfp
 2507              	HAL_MultiProcessor_EnterMuteMode:
 2508              	.LFB69:
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2509              		.loc 1 1996 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 0
 2512              		@ frame_needed = 0, uses_anonymous_args = 0
 2513              		@ link register save eliminated.
 2514              	.LVL185:
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2515              		.loc 1 1997 0
 2516 0000 0268     		ldr	r2, [r0]
 2517 0002 9369     		ldr	r3, [r2, #24]
 2518 0004 0421     		movs	r1, #4
 2519 0006 0B43     		orrs	r3, r1
 2520 0008 9361     		str	r3, [r2, #24]
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2521              		.loc 1 1998 0
 2522              		@ sp needed
 2523 000a 7047     		bx	lr
 2524              		.cfi_endproc
 2525              	.LFE69:
 2527              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2528              		.align	1
 2529              		.global	HAL_HalfDuplex_EnableTransmitter
 2530              		.syntax unified
 2531              		.code	16
 2532              		.thumb_func
 2533              		.fpu softvfp
 2535              	HAL_HalfDuplex_EnableTransmitter:
 2536              	.LFB70:
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2537              		.loc 1 2006 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541              	.LVL186:
 2542 0000 30B5     		push	{r4, r5, lr}
 2543              	.LCFI22:
 2544              		.cfi_def_cfa_offset 12
 2545              		.cfi_offset 4, -12
 2546              		.cfi_offset 5, -8
 2547              		.cfi_offset 14, -4
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2548              		.loc 1 2008 0
 2549 0002 6823     		movs	r3, #104
 2550 0004 C35C     		ldrb	r3, [r0, r3]
ARM GAS  /tmp/ccF4ErZF.s 			page 97


 2551 0006 012B     		cmp	r3, #1
 2552 0008 15D0     		beq	.L157
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2553              		.loc 1 2008 0 is_stmt 0 discriminator 2
 2554 000a 6822     		movs	r2, #104
 2555 000c 0123     		movs	r3, #1
 2556 000e 8354     		strb	r3, [r0, r2]
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2557              		.loc 1 2009 0 is_stmt 1 discriminator 2
 2558 0010 6921     		movs	r1, #105
 2559 0012 2333     		adds	r3, r3, #35
 2560 0014 4354     		strb	r3, [r0, r1]
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2561              		.loc 1 2012 0 discriminator 2
 2562 0016 0468     		ldr	r4, [r0]
 2563 0018 2368     		ldr	r3, [r4]
 2564 001a 0C25     		movs	r5, #12
 2565 001c AB43     		bics	r3, r5
 2566 001e 2360     		str	r3, [r4]
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2567              		.loc 1 2014 0 discriminator 2
 2568 0020 0468     		ldr	r4, [r0]
 2569 0022 2368     		ldr	r3, [r4]
 2570 0024 043D     		subs	r5, r5, #4
 2571 0026 2B43     		orrs	r3, r5
 2572 0028 2360     		str	r3, [r4]
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2573              		.loc 1 2016 0 discriminator 2
 2574 002a 2023     		movs	r3, #32
 2575 002c 4354     		strb	r3, [r0, r1]
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2576              		.loc 1 2019 0 discriminator 2
 2577 002e 0023     		movs	r3, #0
 2578 0030 8354     		strb	r3, [r0, r2]
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2579              		.loc 1 2021 0 discriminator 2
 2580 0032 0020     		movs	r0, #0
 2581              	.LVL187:
 2582              	.L156:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2583              		.loc 1 2022 0
 2584              		@ sp needed
 2585 0034 30BD     		pop	{r4, r5, pc}
 2586              	.LVL188:
 2587              	.L157:
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2588              		.loc 1 2008 0
 2589 0036 0220     		movs	r0, #2
 2590              	.LVL189:
 2591 0038 FCE7     		b	.L156
 2592              		.cfi_endproc
 2593              	.LFE70:
 2595              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2596              		.align	1
 2597              		.global	HAL_HalfDuplex_EnableReceiver
 2598              		.syntax unified
 2599              		.code	16
ARM GAS  /tmp/ccF4ErZF.s 			page 98


 2600              		.thumb_func
 2601              		.fpu softvfp
 2603              	HAL_HalfDuplex_EnableReceiver:
 2604              	.LFB71:
2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 2605              		.loc 1 2030 0
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 0
 2608              		@ frame_needed = 0, uses_anonymous_args = 0
 2609              	.LVL190:
 2610 0000 30B5     		push	{r4, r5, lr}
 2611              	.LCFI23:
 2612              		.cfi_def_cfa_offset 12
 2613              		.cfi_offset 4, -12
 2614              		.cfi_offset 5, -8
 2615              		.cfi_offset 14, -4
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2616              		.loc 1 2032 0
 2617 0002 6823     		movs	r3, #104
 2618 0004 C35C     		ldrb	r3, [r0, r3]
 2619 0006 012B     		cmp	r3, #1
 2620 0008 15D0     		beq	.L160
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2621              		.loc 1 2032 0 is_stmt 0 discriminator 2
 2622 000a 6822     		movs	r2, #104
 2623 000c 0123     		movs	r3, #1
 2624 000e 8354     		strb	r3, [r0, r2]
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2625              		.loc 1 2033 0 is_stmt 1 discriminator 2
 2626 0010 6921     		movs	r1, #105
 2627 0012 2333     		adds	r3, r3, #35
 2628 0014 4354     		strb	r3, [r0, r1]
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2629              		.loc 1 2036 0 discriminator 2
 2630 0016 0468     		ldr	r4, [r0]
 2631 0018 2368     		ldr	r3, [r4]
 2632 001a 0C25     		movs	r5, #12
 2633 001c AB43     		bics	r3, r5
 2634 001e 2360     		str	r3, [r4]
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2635              		.loc 1 2038 0 discriminator 2
 2636 0020 0468     		ldr	r4, [r0]
 2637 0022 2368     		ldr	r3, [r4]
 2638 0024 083D     		subs	r5, r5, #8
 2639 0026 2B43     		orrs	r3, r5
 2640 0028 2360     		str	r3, [r4]
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Unlocked */
 2641              		.loc 1 2040 0 discriminator 2
 2642 002a 2023     		movs	r3, #32
 2643 002c 4354     		strb	r3, [r0, r1]
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2644              		.loc 1 2042 0 discriminator 2
 2645 002e 0023     		movs	r3, #0
 2646 0030 8354     		strb	r3, [r0, r2]
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2647              		.loc 1 2044 0 discriminator 2
 2648 0032 0020     		movs	r0, #0
ARM GAS  /tmp/ccF4ErZF.s 			page 99


 2649              	.LVL191:
 2650              	.L159:
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2651              		.loc 1 2045 0
 2652              		@ sp needed
 2653 0034 30BD     		pop	{r4, r5, pc}
 2654              	.LVL192:
 2655              	.L160:
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2656              		.loc 1 2032 0
 2657 0036 0220     		movs	r0, #2
 2658              	.LVL193:
 2659 0038 FCE7     		b	.L159
 2660              		.cfi_endproc
 2661              	.LFE71:
 2663              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2664              		.align	1
 2665              		.global	HAL_UART_GetState
 2666              		.syntax unified
 2667              		.code	16
 2668              		.thumb_func
 2669              		.fpu softvfp
 2671              	HAL_UART_GetState:
 2672              	.LFB72:
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2673              		.loc 1 2074 0
 2674              		.cfi_startproc
 2675              		@ args = 0, pretend = 0, frame = 0
 2676              		@ frame_needed = 0, uses_anonymous_args = 0
 2677              		@ link register save eliminated.
 2678              	.LVL194:
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   temp2 = huart->RxState;
 2679              		.loc 1 2076 0
 2680 0000 6923     		movs	r3, #105
 2681 0002 C35C     		ldrb	r3, [r0, r3]
 2682              	.LVL195:
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2683              		.loc 1 2077 0
 2684 0004 6A22     		movs	r2, #106
 2685 0006 805C     		ldrb	r0, [r0, r2]
 2686              	.LVL196:
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2687              		.loc 1 2079 0
 2688 0008 1843     		orrs	r0, r3
 2689              	.LVL197:
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2690              		.loc 1 2080 0
 2691              		@ sp needed
 2692 000a 7047     		bx	lr
 2693              		.cfi_endproc
 2694              	.LFE72:
 2696              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2697              		.align	1
 2698              		.global	HAL_UART_GetError
 2699              		.syntax unified
 2700              		.code	16
 2701              		.thumb_func
ARM GAS  /tmp/ccF4ErZF.s 			page 100


 2702              		.fpu softvfp
 2704              	HAL_UART_GetError:
 2705              	.LFB73:
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return huart->ErrorCode;
 2706              		.loc 1 2089 0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 0
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
 2710              		@ link register save eliminated.
 2711              	.LVL198:
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 2712              		.loc 1 2090 0
 2713 0000 C06E     		ldr	r0, [r0, #108]
 2714              	.LVL199:
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
 2715              		.loc 1 2091 0
 2716              		@ sp needed
 2717 0002 7047     		bx	lr
 2718              		.cfi_endproc
 2719              	.LFE73:
 2721              		.global	__aeabi_uidiv
 2722              		.section	.text.UART_SetConfig,"ax",%progbits
 2723              		.align	1
 2724              		.global	UART_SetConfig
 2725              		.syntax unified
 2726              		.code	16
 2727              		.thumb_func
 2728              		.fpu softvfp
 2730              	UART_SetConfig:
 2731              	.LFB74:
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 2732              		.loc 1 2110 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 0, uses_anonymous_args = 0
 2736              	.LVL200:
 2737 0000 70B5     		push	{r4, r5, r6, lr}
 2738              	.LCFI24:
 2739              		.cfi_def_cfa_offset 16
 2740              		.cfi_offset 4, -16
 2741              		.cfi_offset 5, -12
 2742              		.cfi_offset 6, -8
 2743              		.cfi_offset 14, -4
 2744 0002 0400     		movs	r4, r0
 2745              	.LVL201:
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2746              		.loc 1 2118 0
 2747 0004 A04B     		ldr	r3, .L209
 2748 0006 4268     		ldr	r2, [r0, #4]
 2749 0008 9A42     		cmp	r2, r3
 2750 000a 00D9     		bls	.LCB2304
 2751 000c 90E0     		b	.L197	@long jump
 2752              	.LCB2304:
 2753              	.LVL202:
 2754              	.L164:
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2755              		.loc 1 2119 0
ARM GAS  /tmp/ccF4ErZF.s 			page 101


 2756 000e A368     		ldr	r3, [r4, #8]
 2757 0010 8022     		movs	r2, #128
 2758 0012 5205     		lsls	r2, r2, #21
 2759 0014 9342     		cmp	r3, r2
 2760 0016 06D0     		beq	.L165
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2761              		.loc 1 2119 0 is_stmt 0 discriminator 1
 2762 0018 002B     		cmp	r3, #0
 2763 001a 04D0     		beq	.L165
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2764              		.loc 1 2119 0 discriminator 2
 2765 001c 8022     		movs	r2, #128
 2766 001e 5201     		lsls	r2, r2, #5
 2767 0020 9342     		cmp	r3, r2
 2768 0022 00D0     		beq	.LCB2317
 2769 0024 89E0     		b	.L198	@long jump
 2770              	.LCB2317:
 2771              	.L165:
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2772              		.loc 1 2120 0 is_stmt 1
 2773 0026 E368     		ldr	r3, [r4, #12]
 2774 0028 8022     		movs	r2, #128
 2775 002a 5201     		lsls	r2, r2, #5
 2776 002c 9342     		cmp	r3, r2
 2777 002e 0AD0     		beq	.L166
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2778              		.loc 1 2120 0 is_stmt 0 discriminator 1
 2779 0030 002B     		cmp	r3, #0
 2780 0032 08D0     		beq	.L166
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2781              		.loc 1 2120 0 discriminator 2
 2782 0034 C022     		movs	r2, #192
 2783 0036 9201     		lsls	r2, r2, #6
 2784 0038 9342     		cmp	r3, r2
 2785 003a 04D0     		beq	.L166
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2786              		.loc 1 2120 0 discriminator 3
 2787 003c 8022     		movs	r2, #128
 2788 003e 9201     		lsls	r2, r2, #6
 2789 0040 9342     		cmp	r3, r2
 2790 0042 00D0     		beq	.LCB2333
 2791 0044 7EE0     		b	.L199	@long jump
 2792              	.LCB2333:
 2793              	.L166:
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2794              		.loc 1 2121 0 is_stmt 1
 2795 0046 2369     		ldr	r3, [r4, #16]
 2796 0048 002B     		cmp	r3, #0
 2797 004a 07D0     		beq	.L167
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2798              		.loc 1 2121 0 is_stmt 0 discriminator 1
 2799 004c 8022     		movs	r2, #128
 2800 004e D200     		lsls	r2, r2, #3
 2801 0050 9342     		cmp	r3, r2
 2802 0052 03D0     		beq	.L167
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2803              		.loc 1 2121 0 discriminator 2
ARM GAS  /tmp/ccF4ErZF.s 			page 102


 2804 0054 C022     		movs	r2, #192
 2805 0056 D200     		lsls	r2, r2, #3
 2806 0058 9342     		cmp	r3, r2
 2807 005a 78D1     		bne	.L200
 2808              	.L167:
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2809              		.loc 1 2122 0 is_stmt 1
 2810 005c 6369     		ldr	r3, [r4, #20]
 2811 005e 0C22     		movs	r2, #12
 2812 0060 1900     		movs	r1, r3
 2813 0062 9143     		bics	r1, r2
 2814 0064 01D1     		bne	.L168
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2815              		.loc 1 2122 0 is_stmt 0 discriminator 2
 2816 0066 002B     		cmp	r3, #0
 2817 0068 03D1     		bne	.L169
 2818              	.L168:
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2819              		.loc 1 2122 0 discriminator 3
 2820 006a 8849     		ldr	r1, .L209+4
 2821 006c 8848     		ldr	r0, .L209+8
 2822 006e FFF7FEFF 		bl	assert_failed
 2823              	.LVL203:
 2824              	.L169:
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2825              		.loc 1 2123 0 is_stmt 1
 2826 0072 A369     		ldr	r3, [r4, #24]
 2827 0074 002B     		cmp	r3, #0
 2828 0076 0BD0     		beq	.L170
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2829              		.loc 1 2123 0 is_stmt 0 discriminator 1
 2830 0078 8022     		movs	r2, #128
 2831 007a 5200     		lsls	r2, r2, #1
 2832 007c 9342     		cmp	r3, r2
 2833 007e 07D0     		beq	.L170
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2834              		.loc 1 2123 0 discriminator 2
 2835 0080 0132     		adds	r2, r2, #1
 2836 0082 FF32     		adds	r2, r2, #255
 2837 0084 9342     		cmp	r3, r2
 2838 0086 03D0     		beq	.L170
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2839              		.loc 1 2123 0 discriminator 3
 2840 0088 0132     		adds	r2, r2, #1
 2841 008a FF32     		adds	r2, r2, #255
 2842 008c 9342     		cmp	r3, r2
 2843 008e 63D1     		bne	.L201
 2844              	.L170:
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2845              		.loc 1 2124 0 is_stmt 1
 2846 0090 236A     		ldr	r3, [r4, #32]
 2847 0092 002B     		cmp	r3, #0
 2848 0094 03D0     		beq	.L171
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2849              		.loc 1 2124 0 is_stmt 0 discriminator 1
 2850 0096 8022     		movs	r2, #128
 2851 0098 1201     		lsls	r2, r2, #4
ARM GAS  /tmp/ccF4ErZF.s 			page 103


 2852 009a 9342     		cmp	r3, r2
 2853 009c 61D1     		bne	.L202
 2854              	.L171:
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2855              		.loc 1 2125 0 is_stmt 1
 2856 009e E369     		ldr	r3, [r4, #28]
 2857 00a0 002B     		cmp	r3, #0
 2858 00a2 03D0     		beq	.L172
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2859              		.loc 1 2125 0 is_stmt 0 discriminator 1
 2860 00a4 8022     		movs	r2, #128
 2861 00a6 1202     		lsls	r2, r2, #8
 2862 00a8 9342     		cmp	r3, r2
 2863 00aa 5FD1     		bne	.L203
 2864              	.L172:
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2865              		.loc 1 2135 0 is_stmt 1
 2866 00ac A368     		ldr	r3, [r4, #8]
 2867 00ae 2269     		ldr	r2, [r4, #16]
 2868 00b0 1343     		orrs	r3, r2
 2869 00b2 6269     		ldr	r2, [r4, #20]
 2870 00b4 1343     		orrs	r3, r2
 2871 00b6 E269     		ldr	r2, [r4, #28]
 2872 00b8 1343     		orrs	r3, r2
 2873              	.LVL204:
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2874              		.loc 1 2136 0
 2875 00ba 2168     		ldr	r1, [r4]
 2876 00bc 0A68     		ldr	r2, [r1]
 2877 00be 7548     		ldr	r0, .L209+12
 2878 00c0 0240     		ands	r2, r0
 2879 00c2 1343     		orrs	r3, r2
 2880              	.LVL205:
 2881 00c4 0B60     		str	r3, [r1]
 2882              	.LVL206:
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2883              		.loc 1 2141 0
 2884 00c6 2268     		ldr	r2, [r4]
 2885 00c8 5368     		ldr	r3, [r2, #4]
 2886 00ca 7349     		ldr	r1, .L209+16
 2887 00cc 0B40     		ands	r3, r1
 2888 00ce E168     		ldr	r1, [r4, #12]
 2889 00d0 0B43     		orrs	r3, r1
 2890 00d2 5360     		str	r3, [r2, #4]
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2891              		.loc 1 2149 0
 2892 00d4 A269     		ldr	r2, [r4, #24]
 2893 00d6 236A     		ldr	r3, [r4, #32]
 2894 00d8 1A43     		orrs	r2, r3
 2895              	.LVL207:
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2896              		.loc 1 2150 0
 2897 00da 2168     		ldr	r1, [r4]
 2898 00dc 8B68     		ldr	r3, [r1, #8]
 2899 00de 6F48     		ldr	r0, .L209+20
 2900 00e0 0340     		ands	r3, r0
 2901 00e2 1343     		orrs	r3, r2
ARM GAS  /tmp/ccF4ErZF.s 			page 104


 2902 00e4 8B60     		str	r3, [r1, #8]
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2903              		.loc 1 2153 0
 2904 00e6 2568     		ldr	r5, [r4]
 2905 00e8 6D4B     		ldr	r3, .L209+24
 2906 00ea 9D42     		cmp	r5, r3
 2907 00ec 43D0     		beq	.L204
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2908              		.loc 1 2153 0 is_stmt 0 discriminator 2
 2909 00ee 6D4B     		ldr	r3, .L209+28
 2910 00f0 9D42     		cmp	r5, r3
 2911 00f2 54D0     		beq	.L205
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 2912              		.loc 1 2153 0
 2913 00f4 1023     		movs	r3, #16
 2914              	.LVL208:
 2915              	.L178:
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 2916              		.loc 1 2156 0 is_stmt 1
 2917 00f6 8022     		movs	r2, #128
 2918 00f8 1202     		lsls	r2, r2, #8
 2919 00fa E169     		ldr	r1, [r4, #28]
 2920 00fc 9142     		cmp	r1, r2
 2921 00fe 52D0     		beq	.L206
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 2922              		.loc 1 2184 0
 2923 0100 022B     		cmp	r3, #2
 2924 0102 00D1     		bne	.LCB2454
 2925 0104 A3E0     		b	.L187	@long jump
 2926              	.LCB2454:
 2927 0106 00D8     		bhi	.LCB2456
 2928 0108 91E0     		b	.L207	@long jump
 2929              	.LCB2456:
 2930 010a 042B     		cmp	r3, #4
 2931 010c 00D1     		bne	.LCB2458
 2932 010e AAE0     		b	.L190	@long jump
 2933              	.LCB2458:
 2934 0110 082B     		cmp	r3, #8
 2935 0112 00D0     		beq	.LCB2460
 2936 0114 B5E0     		b	.L195	@long jump
 2937              	.LCB2460:
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 2938              		.loc 1 2196 0
 2939 0116 6168     		ldr	r1, [r4, #4]
 2940 0118 4808     		lsrs	r0, r1, #1
 2941 011a 8023     		movs	r3, #128
 2942              	.LVL209:
 2943 011c 1B02     		lsls	r3, r3, #8
 2944 011e 9C46     		mov	ip, r3
 2945 0120 6044     		add	r0, r0, ip
 2946 0122 FFF7FEFF 		bl	__aeabi_uidiv
 2947              	.LVL210:
 2948 0126 0004     		lsls	r0, r0, #16
 2949 0128 000C     		lsrs	r0, r0, #16
 2950 012a E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 2951              		.loc 1 2115 0
ARM GAS  /tmp/ccF4ErZF.s 			page 105


 2952 012c 0020     		movs	r0, #0
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2953              		.loc 1 2197 0
 2954 012e 63E0     		b	.L186
 2955              	.LVL211:
 2956              	.L197:
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2957              		.loc 1 2118 0 discriminator 1
 2958 0130 5D49     		ldr	r1, .L209+32
 2959 0132 5748     		ldr	r0, .L209+8
 2960              	.LVL212:
 2961 0134 FFF7FEFF 		bl	assert_failed
 2962              	.LVL213:
 2963 0138 69E7     		b	.L164
 2964              	.L198:
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2965              		.loc 1 2119 0 discriminator 3
 2966 013a 5C49     		ldr	r1, .L209+36
 2967 013c 5448     		ldr	r0, .L209+8
 2968 013e FFF7FEFF 		bl	assert_failed
 2969              	.LVL214:
 2970 0142 70E7     		b	.L165
 2971              	.L199:
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2972              		.loc 1 2120 0 discriminator 4
 2973 0144 5A49     		ldr	r1, .L209+40
 2974 0146 5248     		ldr	r0, .L209+8
 2975 0148 FFF7FEFF 		bl	assert_failed
 2976              	.LVL215:
 2977 014c 7BE7     		b	.L166
 2978              	.L200:
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2979              		.loc 1 2121 0 discriminator 3
 2980 014e 5949     		ldr	r1, .L209+44
 2981 0150 4F48     		ldr	r0, .L209+8
 2982 0152 FFF7FEFF 		bl	assert_failed
 2983              	.LVL216:
 2984 0156 81E7     		b	.L167
 2985              	.L201:
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2986              		.loc 1 2123 0 discriminator 4
 2987 0158 5749     		ldr	r1, .L209+48
 2988 015a 4D48     		ldr	r0, .L209+8
 2989 015c FFF7FEFF 		bl	assert_failed
 2990              	.LVL217:
 2991 0160 96E7     		b	.L170
 2992              	.L202:
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2993              		.loc 1 2124 0 discriminator 2
 2994 0162 5649     		ldr	r1, .L209+52
 2995 0164 4A48     		ldr	r0, .L209+8
 2996 0166 FFF7FEFF 		bl	assert_failed
 2997              	.LVL218:
 2998 016a 98E7     		b	.L171
 2999              	.L203:
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3000              		.loc 1 2125 0 discriminator 2
ARM GAS  /tmp/ccF4ErZF.s 			page 106


 3001 016c 5449     		ldr	r1, .L209+56
 3002 016e 4848     		ldr	r0, .L209+8
 3003 0170 FFF7FEFF 		bl	assert_failed
 3004              	.LVL219:
 3005 0174 9AE7     		b	.L172
 3006              	.LVL220:
 3007              	.L204:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 3008              		.loc 1 2153 0 discriminator 1
 3009 0176 534B     		ldr	r3, .L209+60
 3010 0178 1A6B     		ldr	r2, [r3, #48]
 3011              	.LVL221:
 3012 017a 0323     		movs	r3, #3
 3013 017c 1340     		ands	r3, r2
 3014 017e 012B     		cmp	r3, #1
 3015 0180 09D0     		beq	.L175
 3016 0182 002B     		cmp	r3, #0
 3017 0184 05D0     		beq	.L176
 3018 0186 022B     		cmp	r3, #2
 3019 0188 07D0     		beq	.L177
 3020 018a 032B     		cmp	r3, #3
 3021 018c 09D0     		beq	.L192
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 3022              		.loc 1 2153 0 is_stmt 0 discriminator 3
 3023 018e 1023     		movs	r3, #16
 3024 0190 B1E7     		b	.L178
 3025              	.L176:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 3026              		.loc 1 2153 0
 3027 0192 0023     		movs	r3, #0
 3028 0194 AFE7     		b	.L178
 3029              	.L175:
 3030              	.LVL222:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 3031              		.loc 1 2153 0 discriminator 5
 3032 0196 0423     		movs	r3, #4
 3033 0198 ADE7     		b	.L178
 3034              	.LVL223:
 3035              	.L177:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 3036              		.loc 1 2153 0 discriminator 6
 3037 019a 0823     		movs	r3, #8
 3038 019c ABE7     		b	.L178
 3039              	.LVL224:
 3040              	.L205:
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   
 3041              		.loc 1 2153 0
 3042 019e 0023     		movs	r3, #0
 3043 01a0 A9E7     		b	.L178
 3044              	.LVL225:
 3045              	.L192:
 3046 01a2 0223     		movs	r3, #2
 3047 01a4 A7E7     		b	.L178
 3048              	.LVL226:
 3049              	.L206:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3050              		.loc 1 2158 0 is_stmt 1
ARM GAS  /tmp/ccF4ErZF.s 			page 107


 3051 01a6 022B     		cmp	r3, #2
 3052 01a8 27D0     		beq	.L181
 3053 01aa 0FD9     		bls	.L208
 3054 01ac 042B     		cmp	r3, #4
 3055 01ae 2FD0     		beq	.L184
 3056 01b0 082B     		cmp	r3, #8
 3057 01b2 39D1     		bne	.L194
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3058              		.loc 1 2170 0
 3059 01b4 6368     		ldr	r3, [r4, #4]
 3060              	.LVL227:
 3061 01b6 5808     		lsrs	r0, r3, #1
 3062 01b8 8023     		movs	r3, #128
 3063 01ba 5B02     		lsls	r3, r3, #9
 3064 01bc 9C46     		mov	ip, r3
 3065 01be 6044     		add	r0, r0, ip
 3066 01c0 6168     		ldr	r1, [r4, #4]
 3067 01c2 FFF7FEFF 		bl	__aeabi_uidiv
 3068              	.LVL228:
 3069 01c6 83B2     		uxth	r3, r0
 3070              	.LVL229:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3071              		.loc 1 2115 0
 3072 01c8 0020     		movs	r0, #0
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3073              		.loc 1 2171 0
 3074 01ca 0CE0     		b	.L180
 3075              	.LVL230:
 3076              	.L208:
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3077              		.loc 1 2158 0
 3078 01cc 002B     		cmp	r3, #0
 3079 01ce 2BD1     		bne	.L194
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3080              		.loc 1 2161 0
 3081 01d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3082              	.LVL231:
 3083 01d4 4000     		lsls	r0, r0, #1
 3084 01d6 6368     		ldr	r3, [r4, #4]
 3085 01d8 5B08     		lsrs	r3, r3, #1
 3086 01da C018     		adds	r0, r0, r3
 3087 01dc 6168     		ldr	r1, [r4, #4]
 3088 01de FFF7FEFF 		bl	__aeabi_uidiv
 3089              	.LVL232:
 3090 01e2 83B2     		uxth	r3, r0
 3091              	.LVL233:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3092              		.loc 1 2115 0
 3093 01e4 0020     		movs	r0, #0
 3094              	.LVL234:
 3095              	.L180:
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3096              		.loc 1 2178 0
 3097 01e6 0F22     		movs	r2, #15
 3098 01e8 1900     		movs	r1, r3
 3099 01ea 9143     		bics	r1, r2
 3100              	.LVL235:
ARM GAS  /tmp/ccF4ErZF.s 			page 108


2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 3101              		.loc 1 2179 0
 3102 01ec 5B10     		asrs	r3, r3, #1
 3103              	.LVL236:
 3104 01ee 083A     		subs	r2, r2, #8
 3105 01f0 1340     		ands	r3, r2
 3106 01f2 0B43     		orrs	r3, r1
 3107              	.LVL237:
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3108              		.loc 1 2180 0
 3109 01f4 2268     		ldr	r2, [r4]
 3110 01f6 D360     		str	r3, [r2, #12]
 3111              	.LVL238:
 3112              	.L186:
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3113              		.loc 1 2207 0
 3114              		@ sp needed
 3115              	.LVL239:
 3116 01f8 70BD     		pop	{r4, r5, r6, pc}
 3117              	.LVL240:
 3118              	.L181:
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3119              		.loc 1 2164 0
 3120 01fa 6368     		ldr	r3, [r4, #4]
 3121              	.LVL241:
 3122 01fc 5808     		lsrs	r0, r3, #1
 3123 01fe 324B     		ldr	r3, .L209+64
 3124 0200 9C46     		mov	ip, r3
 3125 0202 6044     		add	r0, r0, ip
 3126 0204 6168     		ldr	r1, [r4, #4]
 3127 0206 FFF7FEFF 		bl	__aeabi_uidiv
 3128              	.LVL242:
 3129 020a 83B2     		uxth	r3, r0
 3130              	.LVL243:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3131              		.loc 1 2115 0
 3132 020c 0020     		movs	r0, #0
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3133              		.loc 1 2165 0
 3134 020e EAE7     		b	.L180
 3135              	.LVL244:
 3136              	.L184:
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3137              		.loc 1 2167 0
 3138 0210 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3139              	.LVL245:
 3140 0214 4000     		lsls	r0, r0, #1
 3141 0216 6368     		ldr	r3, [r4, #4]
 3142 0218 5B08     		lsrs	r3, r3, #1
 3143 021a C018     		adds	r0, r0, r3
 3144 021c 6168     		ldr	r1, [r4, #4]
 3145 021e FFF7FEFF 		bl	__aeabi_uidiv
 3146              	.LVL246:
 3147 0222 83B2     		uxth	r3, r0
 3148              	.LVL247:
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3149              		.loc 1 2115 0
ARM GAS  /tmp/ccF4ErZF.s 			page 109


 3150 0224 0020     		movs	r0, #0
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3151              		.loc 1 2168 0
 3152 0226 DEE7     		b	.L180
 3153              	.LVL248:
 3154              	.L194:
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3155              		.loc 1 2174 0
 3156 0228 0120     		movs	r0, #1
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3157              		.loc 1 2114 0
 3158 022a 0023     		movs	r3, #0
 3159              	.LVL249:
 3160 022c DBE7     		b	.L180
 3161              	.LVL250:
 3162              	.L207:
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3163              		.loc 1 2184 0
 3164 022e 002B     		cmp	r3, #0
 3165 0230 27D1     		bne	.L195
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3166              		.loc 1 2187 0
 3167 0232 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3168              	.LVL251:
 3169 0236 6368     		ldr	r3, [r4, #4]
 3170 0238 5B08     		lsrs	r3, r3, #1
 3171 023a C018     		adds	r0, r0, r3
 3172 023c 6168     		ldr	r1, [r4, #4]
 3173 023e FFF7FEFF 		bl	__aeabi_uidiv
 3174              	.LVL252:
 3175 0242 2368     		ldr	r3, [r4]
 3176 0244 0004     		lsls	r0, r0, #16
 3177 0246 000C     		lsrs	r0, r0, #16
 3178 0248 D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3179              		.loc 1 2115 0
 3180 024a 0020     		movs	r0, #0
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3181              		.loc 1 2188 0
 3182 024c D4E7     		b	.L186
 3183              	.LVL253:
 3184              	.L187:
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3185              		.loc 1 2190 0
 3186 024e 6168     		ldr	r1, [r4, #4]
 3187 0250 4808     		lsrs	r0, r1, #1
 3188 0252 1E4B     		ldr	r3, .L209+68
 3189              	.LVL254:
 3190 0254 9C46     		mov	ip, r3
 3191 0256 6044     		add	r0, r0, ip
 3192 0258 FFF7FEFF 		bl	__aeabi_uidiv
 3193              	.LVL255:
 3194 025c 0004     		lsls	r0, r0, #16
 3195 025e 000C     		lsrs	r0, r0, #16
 3196 0260 E860     		str	r0, [r5, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3197              		.loc 1 2115 0
ARM GAS  /tmp/ccF4ErZF.s 			page 110


 3198 0262 0020     		movs	r0, #0
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3199              		.loc 1 2191 0
 3200 0264 C8E7     		b	.L186
 3201              	.LVL256:
 3202              	.L190:
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3203              		.loc 1 2193 0
 3204 0266 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3205              	.LVL257:
 3206 026a 6368     		ldr	r3, [r4, #4]
 3207 026c 5B08     		lsrs	r3, r3, #1
 3208 026e C018     		adds	r0, r0, r3
 3209 0270 6168     		ldr	r1, [r4, #4]
 3210 0272 FFF7FEFF 		bl	__aeabi_uidiv
 3211              	.LVL258:
 3212 0276 2368     		ldr	r3, [r4]
 3213 0278 0004     		lsls	r0, r0, #16
 3214 027a 000C     		lsrs	r0, r0, #16
 3215 027c D860     		str	r0, [r3, #12]
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3216              		.loc 1 2115 0
 3217 027e 0020     		movs	r0, #0
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3218              		.loc 1 2194 0
 3219 0280 BAE7     		b	.L186
 3220              	.LVL259:
 3221              	.L195:
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         break;
 3222              		.loc 1 2200 0
 3223 0282 0120     		movs	r0, #1
 3224 0284 B8E7     		b	.L186
 3225              	.L210:
 3226 0286 C046     		.align	2
 3227              	.L209:
 3228 0288 808D5B00 		.word	6000000
 3229 028c 4A080000 		.word	2122
 3230 0290 00000000 		.word	.LC0
 3231 0294 F369FFEF 		.word	-268473869
 3232 0298 FFCFFFFF 		.word	-12289
 3233 029c FFF4FFFF 		.word	-2817
 3234 02a0 00380140 		.word	1073821696
 3235 02a4 00440040 		.word	1073759232
 3236 02a8 46080000 		.word	2118
 3237 02ac 47080000 		.word	2119
 3238 02b0 48080000 		.word	2120
 3239 02b4 49080000 		.word	2121
 3240 02b8 4B080000 		.word	2123
 3241 02bc 4C080000 		.word	2124
 3242 02c0 4D080000 		.word	2125
 3243 02c4 00100240 		.word	1073876992
 3244 02c8 0024F400 		.word	16000000
 3245 02cc 00127A00 		.word	8000000
 3246              		.cfi_endproc
 3247              	.LFE74:
 3249              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3250              		.align	1
ARM GAS  /tmp/ccF4ErZF.s 			page 111


 3251              		.global	UART_AdvFeatureConfig
 3252              		.syntax unified
 3253              		.code	16
 3254              		.thumb_func
 3255              		.fpu softvfp
 3257              	UART_AdvFeatureConfig:
 3258              	.LFB75:
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3259              		.loc 1 2215 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 0
 3262              		@ frame_needed = 0, uses_anonymous_args = 0
 3263              	.LVL260:
 3264 0000 10B5     		push	{r4, lr}
 3265              	.LCFI25:
 3266              		.cfi_def_cfa_offset 8
 3267              		.cfi_offset 4, -8
 3268              		.cfi_offset 14, -4
 3269 0002 0400     		movs	r4, r0
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3270              		.loc 1 2217 0
 3271 0004 436A     		ldr	r3, [r0, #36]
 3272 0006 FF2B     		cmp	r3, #255
 3273 0008 00D9     		bls	.LCB2838
 3274 000a 99E0     		b	.L231	@long jump
 3275              	.LCB2838:
 3276              	.LVL261:
 3277              	.L212:
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3278              		.loc 1 2220 0
 3279 000c 636A     		ldr	r3, [r4, #36]
 3280 000e DB07     		lsls	r3, r3, #31
 3281 0010 0ED5     		bpl	.L213
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3282              		.loc 1 2222 0
 3283 0012 A36A     		ldr	r3, [r4, #40]
 3284 0014 002B     		cmp	r3, #0
 3285 0016 04D0     		beq	.L214
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3286              		.loc 1 2222 0 is_stmt 0 discriminator 1
 3287 0018 8022     		movs	r2, #128
 3288 001a 9202     		lsls	r2, r2, #10
 3289 001c 9342     		cmp	r3, r2
 3290 001e 00D0     		beq	.LCB2853
 3291 0020 93E0     		b	.L232	@long jump
 3292              	.LCB2853:
 3293              	.L214:
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3294              		.loc 1 2223 0 is_stmt 1
 3295 0022 2268     		ldr	r2, [r4]
 3296 0024 5368     		ldr	r3, [r2, #4]
 3297 0026 6B49     		ldr	r1, .L242
 3298 0028 0B40     		ands	r3, r1
 3299 002a A16A     		ldr	r1, [r4, #40]
 3300 002c 0B43     		orrs	r3, r1
 3301 002e 5360     		str	r3, [r2, #4]
 3302              	.L213:
ARM GAS  /tmp/ccF4ErZF.s 			page 112


2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3303              		.loc 1 2227 0
 3304 0030 636A     		ldr	r3, [r4, #36]
 3305 0032 9B07     		lsls	r3, r3, #30
 3306 0034 0ED5     		bpl	.L215
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3307              		.loc 1 2229 0
 3308 0036 E36A     		ldr	r3, [r4, #44]
 3309 0038 002B     		cmp	r3, #0
 3310 003a 04D0     		beq	.L216
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3311              		.loc 1 2229 0 is_stmt 0 discriminator 1
 3312 003c 8022     		movs	r2, #128
 3313 003e 5202     		lsls	r2, r2, #9
 3314 0040 9342     		cmp	r3, r2
 3315 0042 00D0     		beq	.LCB2878
 3316 0044 86E0     		b	.L233	@long jump
 3317              	.LCB2878:
 3318              	.L216:
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3319              		.loc 1 2230 0 is_stmt 1
 3320 0046 2268     		ldr	r2, [r4]
 3321 0048 5368     		ldr	r3, [r2, #4]
 3322 004a 6349     		ldr	r1, .L242+4
 3323 004c 0B40     		ands	r3, r1
 3324 004e E16A     		ldr	r1, [r4, #44]
 3325 0050 0B43     		orrs	r3, r1
 3326 0052 5360     		str	r3, [r2, #4]
 3327              	.L215:
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3328              		.loc 1 2234 0
 3329 0054 636A     		ldr	r3, [r4, #36]
 3330 0056 5B07     		lsls	r3, r3, #29
 3331 0058 0ED5     		bpl	.L217
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3332              		.loc 1 2236 0
 3333 005a 236B     		ldr	r3, [r4, #48]
 3334 005c 002B     		cmp	r3, #0
 3335 005e 04D0     		beq	.L218
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3336              		.loc 1 2236 0 is_stmt 0 discriminator 1
 3337 0060 8022     		movs	r2, #128
 3338 0062 D202     		lsls	r2, r2, #11
 3339 0064 9342     		cmp	r3, r2
 3340 0066 00D0     		beq	.LCB2903
 3341 0068 79E0     		b	.L234	@long jump
 3342              	.LCB2903:
 3343              	.L218:
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3344              		.loc 1 2237 0 is_stmt 1
 3345 006a 2268     		ldr	r2, [r4]
 3346 006c 5368     		ldr	r3, [r2, #4]
 3347 006e 5B49     		ldr	r1, .L242+8
 3348 0070 0B40     		ands	r3, r1
 3349 0072 216B     		ldr	r1, [r4, #48]
 3350 0074 0B43     		orrs	r3, r1
 3351 0076 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccF4ErZF.s 			page 113


 3352              	.L217:
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3353              		.loc 1 2241 0
 3354 0078 636A     		ldr	r3, [r4, #36]
 3355 007a 1B07     		lsls	r3, r3, #28
 3356 007c 0ED5     		bpl	.L219
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3357              		.loc 1 2243 0
 3358 007e 636B     		ldr	r3, [r4, #52]
 3359 0080 002B     		cmp	r3, #0
 3360 0082 04D0     		beq	.L220
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3361              		.loc 1 2243 0 is_stmt 0 discriminator 1
 3362 0084 8022     		movs	r2, #128
 3363 0086 1202     		lsls	r2, r2, #8
 3364 0088 9342     		cmp	r3, r2
 3365 008a 00D0     		beq	.LCB2928
 3366 008c 6CE0     		b	.L235	@long jump
 3367              	.LCB2928:
 3368              	.L220:
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3369              		.loc 1 2244 0 is_stmt 1
 3370 008e 2268     		ldr	r2, [r4]
 3371 0090 5368     		ldr	r3, [r2, #4]
 3372 0092 5349     		ldr	r1, .L242+12
 3373 0094 0B40     		ands	r3, r1
 3374 0096 616B     		ldr	r1, [r4, #52]
 3375 0098 0B43     		orrs	r3, r1
 3376 009a 5360     		str	r3, [r2, #4]
 3377              	.L219:
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3378              		.loc 1 2248 0
 3379 009c 636A     		ldr	r3, [r4, #36]
 3380 009e DB06     		lsls	r3, r3, #27
 3381 00a0 0DD5     		bpl	.L221
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3382              		.loc 1 2250 0
 3383 00a2 A36B     		ldr	r3, [r4, #56]
 3384 00a4 002B     		cmp	r3, #0
 3385 00a6 03D0     		beq	.L222
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3386              		.loc 1 2250 0 is_stmt 0 discriminator 1
 3387 00a8 8022     		movs	r2, #128
 3388 00aa 5201     		lsls	r2, r2, #5
 3389 00ac 9342     		cmp	r3, r2
 3390 00ae 60D1     		bne	.L236
 3391              	.L222:
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3392              		.loc 1 2251 0 is_stmt 1
 3393 00b0 2268     		ldr	r2, [r4]
 3394 00b2 9368     		ldr	r3, [r2, #8]
 3395 00b4 4B49     		ldr	r1, .L242+16
 3396 00b6 0B40     		ands	r3, r1
 3397 00b8 A16B     		ldr	r1, [r4, #56]
 3398 00ba 0B43     		orrs	r3, r1
 3399 00bc 9360     		str	r3, [r2, #8]
 3400              	.L221:
ARM GAS  /tmp/ccF4ErZF.s 			page 114


2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3401              		.loc 1 2255 0
 3402 00be 636A     		ldr	r3, [r4, #36]
 3403 00c0 9B06     		lsls	r3, r3, #26
 3404 00c2 0DD5     		bpl	.L223
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3405              		.loc 1 2257 0
 3406 00c4 E36B     		ldr	r3, [r4, #60]
 3407 00c6 002B     		cmp	r3, #0
 3408 00c8 03D0     		beq	.L224
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3409              		.loc 1 2257 0 is_stmt 0 discriminator 1
 3410 00ca 8022     		movs	r2, #128
 3411 00cc 9201     		lsls	r2, r2, #6
 3412 00ce 9342     		cmp	r3, r2
 3413 00d0 54D1     		bne	.L237
 3414              	.L224:
2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3415              		.loc 1 2258 0 is_stmt 1
 3416 00d2 2268     		ldr	r2, [r4]
 3417 00d4 9368     		ldr	r3, [r2, #8]
 3418 00d6 4449     		ldr	r1, .L242+20
 3419 00d8 0B40     		ands	r3, r1
 3420 00da E16B     		ldr	r1, [r4, #60]
 3421 00dc 0B43     		orrs	r3, r1
 3422 00de 9360     		str	r3, [r2, #8]
 3423              	.L223:
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3424              		.loc 1 2262 0
 3425 00e0 636A     		ldr	r3, [r4, #36]
 3426 00e2 5B06     		lsls	r3, r3, #25
 3427 00e4 1AD5     		bpl	.L225
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 3428              		.loc 1 2264 0
 3429 00e6 414B     		ldr	r3, .L242+24
 3430 00e8 2268     		ldr	r2, [r4]
 3431 00ea 9A42     		cmp	r2, r3
 3432 00ec 03D0     		beq	.L226
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 3433              		.loc 1 2264 0 is_stmt 0 discriminator 1
 3434 00ee 4049     		ldr	r1, .L242+28
 3435 00f0 4048     		ldr	r0, .L242+32
 3436 00f2 FFF7FEFF 		bl	assert_failed
 3437              	.LVL262:
 3438              	.L226:
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3439              		.loc 1 2265 0 is_stmt 1
 3440 00f6 236C     		ldr	r3, [r4, #64]
 3441 00f8 002B     		cmp	r3, #0
 3442 00fa 03D0     		beq	.L227
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3443              		.loc 1 2265 0 is_stmt 0 discriminator 1
 3444 00fc 8022     		movs	r2, #128
 3445 00fe 5203     		lsls	r2, r2, #13
 3446 0100 9342     		cmp	r3, r2
 3447 0102 40D1     		bne	.L238
 3448              	.L227:
ARM GAS  /tmp/ccF4ErZF.s 			page 115


2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3449              		.loc 1 2266 0 is_stmt 1
 3450 0104 2268     		ldr	r2, [r4]
 3451 0106 5368     		ldr	r3, [r2, #4]
 3452 0108 3B49     		ldr	r1, .L242+36
 3453 010a 0B40     		ands	r3, r1
 3454 010c 216C     		ldr	r1, [r4, #64]
 3455 010e 0B43     		orrs	r3, r1
 3456 0110 5360     		str	r3, [r2, #4]
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3457              		.loc 1 2268 0
 3458 0112 8023     		movs	r3, #128
 3459 0114 5B03     		lsls	r3, r3, #13
 3460 0116 226C     		ldr	r2, [r4, #64]
 3461 0118 9A42     		cmp	r2, r3
 3462 011a 39D0     		beq	.L239
 3463              	.L225:
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3464              		.loc 1 2276 0
 3465 011c 636A     		ldr	r3, [r4, #36]
 3466 011e 1B06     		lsls	r3, r3, #24
 3467 0120 0DD5     		bpl	.L211
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3468              		.loc 1 2278 0
 3469 0122 A36C     		ldr	r3, [r4, #72]
 3470 0124 002B     		cmp	r3, #0
 3471 0126 03D0     		beq	.L230
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3472              		.loc 1 2278 0 is_stmt 0 discriminator 1
 3473 0128 8022     		movs	r2, #128
 3474 012a 1203     		lsls	r2, r2, #12
 3475 012c 9342     		cmp	r3, r2
 3476 012e 4BD1     		bne	.L240
 3477              	.L230:
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3478              		.loc 1 2279 0 is_stmt 1
 3479 0130 2268     		ldr	r2, [r4]
 3480 0132 5368     		ldr	r3, [r2, #4]
 3481 0134 3149     		ldr	r1, .L242+40
 3482 0136 0B40     		ands	r3, r1
 3483 0138 A16C     		ldr	r1, [r4, #72]
 3484 013a 0B43     		orrs	r3, r1
 3485 013c 5360     		str	r3, [r2, #4]
 3486              	.L211:
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3487              		.loc 1 2281 0
 3488              		@ sp needed
 3489              	.LVL263:
 3490 013e 10BD     		pop	{r4, pc}
 3491              	.LVL264:
 3492              	.L231:
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3493              		.loc 1 2217 0 discriminator 1
 3494 0140 2F49     		ldr	r1, .L242+44
 3495 0142 2C48     		ldr	r0, .L242+32
 3496              	.LVL265:
 3497 0144 FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/ccF4ErZF.s 			page 116


 3498              	.LVL266:
 3499 0148 60E7     		b	.L212
 3500              	.L232:
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 3501              		.loc 1 2222 0 discriminator 2
 3502 014a 2E49     		ldr	r1, .L242+48
 3503 014c 2948     		ldr	r0, .L242+32
 3504 014e FFF7FEFF 		bl	assert_failed
 3505              	.LVL267:
 3506 0152 66E7     		b	.L214
 3507              	.L233:
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 3508              		.loc 1 2229 0 discriminator 2
 3509 0154 2C49     		ldr	r1, .L242+52
 3510 0156 2748     		ldr	r0, .L242+32
 3511 0158 FFF7FEFF 		bl	assert_failed
 3512              	.LVL268:
 3513 015c 73E7     		b	.L216
 3514              	.L234:
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 3515              		.loc 1 2236 0 discriminator 2
 3516 015e 2B49     		ldr	r1, .L242+56
 3517 0160 2448     		ldr	r0, .L242+32
 3518 0162 FFF7FEFF 		bl	assert_failed
 3519              	.LVL269:
 3520 0166 80E7     		b	.L218
 3521              	.L235:
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 3522              		.loc 1 2243 0 discriminator 2
 3523 0168 2949     		ldr	r1, .L242+60
 3524 016a 2248     		ldr	r0, .L242+32
 3525 016c FFF7FEFF 		bl	assert_failed
 3526              	.LVL270:
 3527 0170 8DE7     		b	.L220
 3528              	.L236:
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 3529              		.loc 1 2250 0 discriminator 2
 3530 0172 2849     		ldr	r1, .L242+64
 3531 0174 1F48     		ldr	r0, .L242+32
 3532 0176 FFF7FEFF 		bl	assert_failed
 3533              	.LVL271:
 3534 017a 99E7     		b	.L222
 3535              	.L237:
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 3536              		.loc 1 2257 0 discriminator 2
 3537 017c 2649     		ldr	r1, .L242+68
 3538 017e 1D48     		ldr	r0, .L242+32
 3539 0180 FFF7FEFF 		bl	assert_failed
 3540              	.LVL272:
 3541 0184 A5E7     		b	.L224
 3542              	.L238:
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 3543              		.loc 1 2265 0 discriminator 2
 3544 0186 2549     		ldr	r1, .L242+72
 3545 0188 1A48     		ldr	r0, .L242+32
 3546 018a FFF7FEFF 		bl	assert_failed
 3547              	.LVL273:
ARM GAS  /tmp/ccF4ErZF.s 			page 117


 3548 018e B9E7     		b	.L227
 3549              	.L239:
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3550              		.loc 1 2270 0
 3551 0190 636C     		ldr	r3, [r4, #68]
 3552 0192 002B     		cmp	r3, #0
 3553 0194 0BD0     		beq	.L228
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3554              		.loc 1 2270 0 is_stmt 0 discriminator 1
 3555 0196 8022     		movs	r2, #128
 3556 0198 9203     		lsls	r2, r2, #14
 3557 019a 9342     		cmp	r3, r2
 3558 019c 07D0     		beq	.L228
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3559              		.loc 1 2270 0 discriminator 2
 3560 019e 8022     		movs	r2, #128
 3561 01a0 D203     		lsls	r2, r2, #15
 3562 01a2 9342     		cmp	r3, r2
 3563 01a4 03D0     		beq	.L228
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3564              		.loc 1 2270 0 discriminator 3
 3565 01a6 C022     		movs	r2, #192
 3566 01a8 D203     		lsls	r2, r2, #15
 3567 01aa 9342     		cmp	r3, r2
 3568 01ac 07D1     		bne	.L241
 3569              	.L228:
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3570              		.loc 1 2271 0 is_stmt 1
 3571 01ae 2268     		ldr	r2, [r4]
 3572 01b0 5368     		ldr	r3, [r2, #4]
 3573 01b2 1B49     		ldr	r1, .L242+76
 3574 01b4 0B40     		ands	r3, r1
 3575 01b6 616C     		ldr	r1, [r4, #68]
 3576 01b8 0B43     		orrs	r3, r1
 3577 01ba 5360     		str	r3, [r2, #4]
 3578 01bc AEE7     		b	.L225
 3579              	.L241:
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 3580              		.loc 1 2270 0 discriminator 4
 3581 01be 1949     		ldr	r1, .L242+80
 3582 01c0 0C48     		ldr	r0, .L242+32
 3583 01c2 FFF7FEFF 		bl	assert_failed
 3584              	.LVL274:
 3585 01c6 F2E7     		b	.L228
 3586              	.L240:
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 3587              		.loc 1 2278 0 discriminator 2
 3588 01c8 1749     		ldr	r1, .L242+84
 3589 01ca 0A48     		ldr	r0, .L242+32
 3590 01cc FFF7FEFF 		bl	assert_failed
 3591              	.LVL275:
 3592 01d0 AEE7     		b	.L230
 3593              	.L243:
 3594 01d2 C046     		.align	2
 3595              	.L242:
 3596 01d4 FFFFFDFF 		.word	-131073
 3597 01d8 FFFFFEFF 		.word	-65537
ARM GAS  /tmp/ccF4ErZF.s 			page 118


 3598 01dc FFFFFBFF 		.word	-262145
 3599 01e0 FF7FFFFF 		.word	-32769
 3600 01e4 FFEFFFFF 		.word	-4097
 3601 01e8 FFDFFFFF 		.word	-8193
 3602 01ec 00380140 		.word	1073821696
 3603 01f0 D8080000 		.word	2264
 3604 01f4 00000000 		.word	.LC0
 3605 01f8 FFFFEFFF 		.word	-1048577
 3606 01fc FFFFF7FF 		.word	-524289
 3607 0200 A9080000 		.word	2217
 3608 0204 AE080000 		.word	2222
 3609 0208 B5080000 		.word	2229
 3610 020c BC080000 		.word	2236
 3611 0210 C3080000 		.word	2243
 3612 0214 CA080000 		.word	2250
 3613 0218 D1080000 		.word	2257
 3614 021c D9080000 		.word	2265
 3615 0220 FFFF9FFF 		.word	-6291457
 3616 0224 DE080000 		.word	2270
 3617 0228 E6080000 		.word	2278
 3618              		.cfi_endproc
 3619              	.LFE75:
 3621              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3622              		.align	1
 3623              		.global	UART_WaitOnFlagUntilTimeout
 3624              		.syntax unified
 3625              		.code	16
 3626              		.thumb_func
 3627              		.fpu softvfp
 3629              	UART_WaitOnFlagUntilTimeout:
 3630              	.LFB77:
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Wait until flag is set */
 3631              		.loc 1 2350 0
 3632              		.cfi_startproc
 3633              		@ args = 4, pretend = 0, frame = 0
 3634              		@ frame_needed = 0, uses_anonymous_args = 0
 3635              	.LVL276:
 3636 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3637              	.LCFI26:
 3638              		.cfi_def_cfa_offset 20
 3639              		.cfi_offset 4, -20
 3640              		.cfi_offset 5, -16
 3641              		.cfi_offset 6, -12
 3642              		.cfi_offset 7, -8
 3643              		.cfi_offset 14, -4
 3644 0002 C646     		mov	lr, r8
 3645 0004 00B5     		push	{lr}
 3646              	.LCFI27:
 3647              		.cfi_def_cfa_offset 24
 3648              		.cfi_offset 8, -24
 3649 0006 0600     		movs	r6, r0
 3650 0008 0C00     		movs	r4, r1
 3651 000a 1700     		movs	r7, r2
 3652 000c 9846     		mov	r8, r3
 3653 000e 069D     		ldr	r5, [sp, #24]
 3654              	.LVL277:
 3655              	.L246:
ARM GAS  /tmp/ccF4ErZF.s 			page 119


2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3656              		.loc 1 2352 0
 3657 0010 3368     		ldr	r3, [r6]
 3658 0012 DB69     		ldr	r3, [r3, #28]
 3659 0014 2340     		ands	r3, r4
 3660 0016 1B1B     		subs	r3, r3, r4
 3661 0018 5A42     		rsbs	r2, r3, #0
 3662 001a 5341     		adcs	r3, r3, r2
 3663 001c BB42     		cmp	r3, r7
 3664 001e 1ED1     		bne	.L250
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3665              		.loc 1 2355 0
 3666 0020 6B1C     		adds	r3, r5, #1
 3667 0022 F5D0     		beq	.L246
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3668              		.loc 1 2357 0
 3669 0024 002D     		cmp	r5, #0
 3670 0026 05D0     		beq	.L247
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3671              		.loc 1 2357 0 is_stmt 0 discriminator 1
 3672 0028 FFF7FEFF 		bl	HAL_GetTick
 3673              	.LVL278:
 3674 002c 4346     		mov	r3, r8
 3675 002e C01A     		subs	r0, r0, r3
 3676 0030 A842     		cmp	r0, r5
 3677 0032 EDD9     		bls	.L246
 3678              	.L247:
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3679              		.loc 1 2360 0 is_stmt 1
 3680 0034 3268     		ldr	r2, [r6]
 3681 0036 1368     		ldr	r3, [r2]
 3682 0038 0B49     		ldr	r1, .L251
 3683 003a 0B40     		ands	r3, r1
 3684 003c 1360     		str	r3, [r2]
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3685              		.loc 1 2361 0
 3686 003e 3268     		ldr	r2, [r6]
 3687 0040 9368     		ldr	r3, [r2, #8]
 3688 0042 A331     		adds	r1, r1, #163
 3689 0044 FF31     		adds	r1, r1, #255
 3690 0046 8B43     		bics	r3, r1
 3691 0048 9360     		str	r3, [r2, #8]
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3692              		.loc 1 2363 0
 3693 004a 2023     		movs	r3, #32
 3694 004c 6922     		movs	r2, #105
 3695 004e B354     		strb	r3, [r6, r2]
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3696              		.loc 1 2364 0
 3697 0050 0132     		adds	r2, r2, #1
 3698 0052 B354     		strb	r3, [r6, r2]
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         return HAL_TIMEOUT;
 3699              		.loc 1 2367 0
 3700 0054 4833     		adds	r3, r3, #72
 3701 0056 0022     		movs	r2, #0
 3702 0058 F254     		strb	r2, [r6, r3]
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
ARM GAS  /tmp/ccF4ErZF.s 			page 120


 3703              		.loc 1 2368 0
 3704 005a 0320     		movs	r0, #3
 3705 005c 00E0     		b	.L248
 3706              	.L250:
2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 3707              		.loc 1 2372 0
 3708 005e 0020     		movs	r0, #0
 3709              	.L248:
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3710              		.loc 1 2373 0
 3711              		@ sp needed
 3712              	.LVL279:
 3713              	.LVL280:
 3714              	.LVL281:
 3715 0060 04BC     		pop	{r2}
 3716 0062 9046     		mov	r8, r2
 3717 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 3718              	.L252:
 3719 0066 C046     		.align	2
 3720              	.L251:
 3721 0068 5FFEFFFF 		.word	-417
 3722              		.cfi_endproc
 3723              	.LFE77:
 3725              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3726              		.align	1
 3727              		.global	HAL_UART_Transmit
 3728              		.syntax unified
 3729              		.code	16
 3730              		.thumb_func
 3731              		.fpu softvfp
 3733              	HAL_UART_Transmit:
 3734              	.LFB43:
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3735              		.loc 1 692 0
 3736              		.cfi_startproc
 3737              		@ args = 0, pretend = 0, frame = 8
 3738              		@ frame_needed = 0, uses_anonymous_args = 0
 3739              	.LVL282:
 3740 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3741              	.LCFI28:
 3742              		.cfi_def_cfa_offset 20
 3743              		.cfi_offset 4, -20
 3744              		.cfi_offset 5, -16
 3745              		.cfi_offset 6, -12
 3746              		.cfi_offset 7, -8
 3747              		.cfi_offset 14, -4
 3748 0002 85B0     		sub	sp, sp, #20
 3749              	.LCFI29:
 3750              		.cfi_def_cfa_offset 40
 3751 0004 0400     		movs	r4, r0
 3752 0006 0E00     		movs	r6, r1
 3753 0008 1700     		movs	r7, r2
 3754 000a 1D00     		movs	r5, r3
 3755              	.LVL283:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3756              		.loc 1 697 0
 3757 000c 6923     		movs	r3, #105
ARM GAS  /tmp/ccF4ErZF.s 			page 121


 3758              	.LVL284:
 3759 000e C35C     		ldrb	r3, [r0, r3]
 3760 0010 202B     		cmp	r3, #32
 3761 0012 59D1     		bne	.L260
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3762              		.loc 1 699 0
 3763 0014 0029     		cmp	r1, #0
 3764 0016 5AD0     		beq	.L261
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3765              		.loc 1 699 0 is_stmt 0 discriminator 1
 3766 0018 002A     		cmp	r2, #0
 3767 001a 5AD0     		beq	.L262
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3768              		.loc 1 707 0 is_stmt 1
 3769 001c 8023     		movs	r3, #128
 3770 001e 5B01     		lsls	r3, r3, #5
 3771 0020 8268     		ldr	r2, [r0, #8]
 3772              	.LVL285:
 3773 0022 9A42     		cmp	r2, r3
 3774 0024 13D0     		beq	.L267
 3775              	.L255:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3776              		.loc 1 716 0
 3777 0026 6823     		movs	r3, #104
 3778 0028 E35C     		ldrb	r3, [r4, r3]
 3779 002a 012B     		cmp	r3, #1
 3780 002c 53D0     		beq	.L264
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3781              		.loc 1 716 0 is_stmt 0 discriminator 2
 3782 002e 6823     		movs	r3, #104
 3783 0030 0122     		movs	r2, #1
 3784 0032 E254     		strb	r2, [r4, r3]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3785              		.loc 1 718 0 is_stmt 1 discriminator 2
 3786 0034 0023     		movs	r3, #0
 3787 0036 E366     		str	r3, [r4, #108]
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3788              		.loc 1 719 0 discriminator 2
 3789 0038 6933     		adds	r3, r3, #105
 3790 003a 2032     		adds	r2, r2, #32
 3791 003c E254     		strb	r2, [r4, r3]
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3792              		.loc 1 722 0 discriminator 2
 3793 003e FFF7FEFF 		bl	HAL_GetTick
 3794              	.LVL286:
 3795 0042 0390     		str	r0, [sp, #12]
 3796              	.LVL287:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->TxXferCount = Size;
 3797              		.loc 1 724 0 discriminator 2
 3798 0044 5023     		movs	r3, #80
 3799 0046 E752     		strh	r7, [r4, r3]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 3800              		.loc 1 725 0 discriminator 2
 3801 0048 0233     		adds	r3, r3, #2
 3802 004a E752     		strh	r7, [r4, r3]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3803              		.loc 1 726 0 discriminator 2
ARM GAS  /tmp/ccF4ErZF.s 			page 122


 3804 004c 0AE0     		b	.L256
 3805              	.LVL288:
 3806              	.L267:
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3807              		.loc 1 707 0 discriminator 1
 3808 004e 0369     		ldr	r3, [r0, #16]
 3809 0050 002B     		cmp	r3, #0
 3810 0052 E8D1     		bne	.L255
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3811              		.loc 1 709 0
 3812 0054 CB07     		lsls	r3, r1, #31
 3813 0056 E6D5     		bpl	.L255
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3814              		.loc 1 711 0
 3815 0058 0120     		movs	r0, #1
 3816              	.LVL289:
 3817 005a 36E0     		b	.L254
 3818              	.LVL290:
 3819              	.L257:
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3820              		.loc 1 741 0
 3821 005c 3378     		ldrb	r3, [r6]
 3822 005e 2268     		ldr	r2, [r4]
 3823 0060 1385     		strh	r3, [r2, #40]
 3824 0062 0136     		adds	r6, r6, #1
 3825              	.LVL291:
 3826              	.L256:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3827              		.loc 1 726 0
 3828 0064 5223     		movs	r3, #82
 3829 0066 E35A     		ldrh	r3, [r4, r3]
 3830 0068 9BB2     		uxth	r3, r3
 3831 006a 002B     		cmp	r3, #0
 3832 006c 1CD0     		beq	.L268
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3833              		.loc 1 728 0
 3834 006e 5222     		movs	r2, #82
 3835 0070 A35A     		ldrh	r3, [r4, r2]
 3836 0072 013B     		subs	r3, r3, #1
 3837 0074 9BB2     		uxth	r3, r3
 3838 0076 A352     		strh	r3, [r4, r2]
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3839              		.loc 1 729 0
 3840 0078 0095     		str	r5, [sp]
 3841 007a 039B     		ldr	r3, [sp, #12]
 3842 007c 0022     		movs	r2, #0
 3843 007e 8021     		movs	r1, #128
 3844 0080 2000     		movs	r0, r4
 3845 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3846              	.LVL292:
 3847 0086 0028     		cmp	r0, #0
 3848 0088 27D1     		bne	.L265
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3849              		.loc 1 733 0
 3850 008a 8023     		movs	r3, #128
 3851 008c 5B01     		lsls	r3, r3, #5
 3852 008e A268     		ldr	r2, [r4, #8]
ARM GAS  /tmp/ccF4ErZF.s 			page 123


 3853 0090 9A42     		cmp	r2, r3
 3854 0092 E3D1     		bne	.L257
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 3855              		.loc 1 733 0 is_stmt 0 discriminator 1
 3856 0094 2369     		ldr	r3, [r4, #16]
 3857 0096 002B     		cmp	r3, #0
 3858 0098 E0D1     		bne	.L257
 3859              	.LVL293:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData += 2;
 3860              		.loc 1 736 0 is_stmt 1
 3861 009a 3388     		ldrh	r3, [r6]
 3862 009c DB05     		lsls	r3, r3, #23
 3863 009e DB0D     		lsrs	r3, r3, #23
 3864 00a0 2268     		ldr	r2, [r4]
 3865 00a2 1385     		strh	r3, [r2, #40]
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3866              		.loc 1 737 0
 3867 00a4 0236     		adds	r6, r6, #2
 3868              	.LVL294:
 3869 00a6 DDE7     		b	.L256
 3870              	.LVL295:
 3871              	.L268:
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3872              		.loc 1 744 0
 3873 00a8 0095     		str	r5, [sp]
 3874 00aa 039B     		ldr	r3, [sp, #12]
 3875 00ac 0022     		movs	r2, #0
 3876 00ae 4021     		movs	r1, #64
 3877 00b0 2000     		movs	r0, r4
 3878 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3879              	.LVL296:
 3880 00b6 0028     		cmp	r0, #0
 3881 00b8 11D1     		bne	.L266
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3882              		.loc 1 750 0
 3883 00ba 6923     		movs	r3, #105
 3884 00bc 2022     		movs	r2, #32
 3885 00be E254     		strb	r2, [r4, r3]
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3886              		.loc 1 753 0
 3887 00c0 013B     		subs	r3, r3, #1
 3888 00c2 0022     		movs	r2, #0
 3889 00c4 E254     		strb	r2, [r4, r3]
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3890              		.loc 1 755 0
 3891 00c6 00E0     		b	.L254
 3892              	.LVL297:
 3893              	.L260:
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 3894              		.loc 1 759 0
 3895 00c8 0220     		movs	r0, #2
 3896              	.LVL298:
 3897              	.L254:
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3898              		.loc 1 761 0
 3899 00ca 05B0     		add	sp, sp, #20
 3900              		@ sp needed
ARM GAS  /tmp/ccF4ErZF.s 			page 124


 3901              	.LVL299:
 3902              	.LVL300:
 3903              	.LVL301:
 3904 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 3905              	.LVL302:
 3906              	.L261:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3907              		.loc 1 701 0
 3908 00ce 0120     		movs	r0, #1
 3909              	.LVL303:
 3910 00d0 FBE7     		b	.L254
 3911              	.LVL304:
 3912              	.L262:
 3913 00d2 0120     		movs	r0, #1
 3914              	.LVL305:
 3915 00d4 F9E7     		b	.L254
 3916              	.LVL306:
 3917              	.L264:
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3918              		.loc 1 716 0
 3919 00d6 0220     		movs	r0, #2
 3920              	.LVL307:
 3921 00d8 F7E7     		b	.L254
 3922              	.LVL308:
 3923              	.L265:
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 3924              		.loc 1 731 0
 3925 00da 0320     		movs	r0, #3
 3926 00dc F5E7     		b	.L254
 3927              	.L266:
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 3928              		.loc 1 746 0
 3929 00de 0320     		movs	r0, #3
 3930 00e0 F3E7     		b	.L254
 3931              		.cfi_endproc
 3932              	.LFE43:
 3934              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3935              		.align	1
 3936              		.global	HAL_UART_Receive
 3937              		.syntax unified
 3938              		.code	16
 3939              		.thumb_func
 3940              		.fpu softvfp
 3942              	HAL_UART_Receive:
 3943              	.LFB44:
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
 3944              		.loc 1 776 0
 3945              		.cfi_startproc
 3946              		@ args = 0, pretend = 0, frame = 8
 3947              		@ frame_needed = 0, uses_anonymous_args = 0
 3948              	.LVL309:
 3949 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3950              	.LCFI30:
 3951              		.cfi_def_cfa_offset 20
 3952              		.cfi_offset 4, -20
 3953              		.cfi_offset 5, -16
 3954              		.cfi_offset 6, -12
ARM GAS  /tmp/ccF4ErZF.s 			page 125


 3955              		.cfi_offset 7, -8
 3956              		.cfi_offset 14, -4
 3957 0002 85B0     		sub	sp, sp, #20
 3958              	.LCFI31:
 3959              		.cfi_def_cfa_offset 40
 3960 0004 0400     		movs	r4, r0
 3961 0006 0F00     		movs	r7, r1
 3962 0008 1600     		movs	r6, r2
 3963 000a 1D00     		movs	r5, r3
 3964              	.LVL310:
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 3965              		.loc 1 782 0
 3966 000c 6A23     		movs	r3, #106
 3967              	.LVL311:
 3968 000e C35C     		ldrb	r3, [r0, r3]
 3969 0010 202B     		cmp	r3, #32
 3970 0012 00D0     		beq	.LCB3583
 3971 0014 83E0     		b	.L282	@long jump
 3972              	.LCB3583:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3973              		.loc 1 784 0
 3974 0016 0029     		cmp	r1, #0
 3975 0018 00D1     		bne	.LCB3585
 3976 001a 83E0     		b	.L283	@long jump
 3977              	.LCB3585:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3978              		.loc 1 784 0 is_stmt 0 discriminator 1
 3979 001c 002A     		cmp	r2, #0
 3980 001e 00D1     		bne	.LCB3587
 3981 0020 82E0     		b	.L284	@long jump
 3982              	.LCB3587:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 3983              		.loc 1 792 0 is_stmt 1
 3984 0022 8023     		movs	r3, #128
 3985 0024 5B01     		lsls	r3, r3, #5
 3986 0026 8268     		ldr	r2, [r0, #8]
 3987              	.LVL312:
 3988 0028 9A42     		cmp	r2, r3
 3989 002a 21D0     		beq	.L288
 3990              	.L271:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3991              		.loc 1 801 0
 3992 002c 6823     		movs	r3, #104
 3993 002e E35C     		ldrb	r3, [r4, r3]
 3994 0030 012B     		cmp	r3, #1
 3995 0032 00D1     		bne	.LCB3599
 3996 0034 7AE0     		b	.L286	@long jump
 3997              	.LCB3599:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 3998              		.loc 1 801 0 is_stmt 0 discriminator 2
 3999 0036 6823     		movs	r3, #104
 4000 0038 0122     		movs	r2, #1
 4001 003a E254     		strb	r2, [r4, r3]
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4002              		.loc 1 803 0 is_stmt 1 discriminator 2
 4003 003c 0023     		movs	r3, #0
 4004 003e E366     		str	r3, [r4, #108]
ARM GAS  /tmp/ccF4ErZF.s 			page 126


 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4005              		.loc 1 804 0 discriminator 2
 4006 0040 6A33     		adds	r3, r3, #106
 4007 0042 2132     		adds	r2, r2, #33
 4008 0044 E254     		strb	r2, [r4, r3]
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4009              		.loc 1 807 0 discriminator 2
 4010 0046 FFF7FEFF 		bl	HAL_GetTick
 4011              	.LVL313:
 4012 004a 0390     		str	r0, [sp, #12]
 4013              	.LVL314:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxXferCount = Size;
 4014              		.loc 1 809 0 discriminator 2
 4015 004c 5823     		movs	r3, #88
 4016 004e E652     		strh	r6, [r4, r3]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4017              		.loc 1 810 0 discriminator 2
 4018 0050 0233     		adds	r3, r3, #2
 4019 0052 E652     		strh	r6, [r4, r3]
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4020              		.loc 1 813 0 discriminator 2
 4021 0054 A368     		ldr	r3, [r4, #8]
 4022 0056 8022     		movs	r2, #128
 4023 0058 5201     		lsls	r2, r2, #5
 4024 005a 9342     		cmp	r3, r2
 4025 005c 0FD0     		beq	.L289
 4026 005e 002B     		cmp	r3, #0
 4027 0060 1CD1     		bne	.L275
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4028              		.loc 1 813 0 is_stmt 0 discriminator 5
 4029 0062 2369     		ldr	r3, [r4, #16]
 4030 0064 002B     		cmp	r3, #0
 4031 0066 15D1     		bne	.L276
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4032              		.loc 1 813 0 discriminator 7
 4033 0068 5C33     		adds	r3, r3, #92
 4034 006a FF22     		movs	r2, #255
 4035 006c E252     		strh	r2, [r4, r3]
 4036 006e 19E0     		b	.L274
 4037              	.LVL315:
 4038              	.L288:
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4039              		.loc 1 792 0 is_stmt 1 discriminator 1
 4040 0070 0369     		ldr	r3, [r0, #16]
 4041 0072 002B     		cmp	r3, #0
 4042 0074 DAD1     		bne	.L271
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4043              		.loc 1 794 0
 4044 0076 CB07     		lsls	r3, r1, #31
 4045 0078 D8D5     		bpl	.L271
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4046              		.loc 1 796 0
 4047 007a 0120     		movs	r0, #1
 4048              	.LVL316:
 4049 007c 50E0     		b	.L270
 4050              	.LVL317:
 4051              	.L289:
ARM GAS  /tmp/ccF4ErZF.s 			page 127


 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4052              		.loc 1 813 0 discriminator 1
 4053 007e 2369     		ldr	r3, [r4, #16]
 4054 0080 002B     		cmp	r3, #0
 4055 0082 03D1     		bne	.L273
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4056              		.loc 1 813 0 is_stmt 0 discriminator 3
 4057 0084 5C33     		adds	r3, r3, #92
 4058 0086 2B4A     		ldr	r2, .L292
 4059 0088 E252     		strh	r2, [r4, r3]
 4060 008a 0BE0     		b	.L274
 4061              	.L273:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4062              		.loc 1 813 0 discriminator 4
 4063 008c 5C23     		movs	r3, #92
 4064 008e FF22     		movs	r2, #255
 4065 0090 E252     		strh	r2, [r4, r3]
 4066 0092 07E0     		b	.L274
 4067              	.L276:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4068              		.loc 1 813 0 discriminator 8
 4069 0094 5C23     		movs	r3, #92
 4070 0096 7F22     		movs	r2, #127
 4071 0098 E252     		strh	r2, [r4, r3]
 4072 009a 03E0     		b	.L274
 4073              	.L275:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4074              		.loc 1 813 0 discriminator 6
 4075 009c 8022     		movs	r2, #128
 4076 009e 5205     		lsls	r2, r2, #21
 4077 00a0 9342     		cmp	r3, r2
 4078 00a2 02D0     		beq	.L290
 4079              	.L274:
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4080              		.loc 1 814 0 is_stmt 1
 4081 00a4 5C23     		movs	r3, #92
 4082 00a6 E65A     		ldrh	r6, [r4, r3]
 4083              	.LVL318:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4084              		.loc 1 817 0
 4085 00a8 10E0     		b	.L278
 4086              	.LVL319:
 4087              	.L290:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4088              		.loc 1 813 0 discriminator 9
 4089 00aa 2369     		ldr	r3, [r4, #16]
 4090 00ac 002B     		cmp	r3, #0
 4091 00ae 03D1     		bne	.L277
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4092              		.loc 1 813 0 is_stmt 0 discriminator 10
 4093 00b0 5C33     		adds	r3, r3, #92
 4094 00b2 7F22     		movs	r2, #127
 4095 00b4 E252     		strh	r2, [r4, r3]
 4096 00b6 F5E7     		b	.L274
 4097              	.L277:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhMask = huart->Mask;
 4098              		.loc 1 813 0 discriminator 11
ARM GAS  /tmp/ccF4ErZF.s 			page 128


 4099 00b8 5C23     		movs	r3, #92
 4100 00ba 3F22     		movs	r2, #63
 4101 00bc E252     		strh	r2, [r4, r3]
 4102 00be F1E7     		b	.L274
 4103              	.LVL320:
 4104              	.L279:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4105              		.loc 1 832 0 is_stmt 1
 4106 00c0 2368     		ldr	r3, [r4]
 4107 00c2 9B8C     		ldrh	r3, [r3, #36]
 4108 00c4 F2B2     		uxtb	r2, r6
 4109              	.LVL321:
 4110 00c6 1340     		ands	r3, r2
 4111 00c8 3B70     		strb	r3, [r7]
 4112 00ca 0137     		adds	r7, r7, #1
 4113              	.LVL322:
 4114              	.L278:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4115              		.loc 1 817 0
 4116 00cc 5A23     		movs	r3, #90
 4117 00ce E35A     		ldrh	r3, [r4, r3]
 4118 00d0 9BB2     		uxth	r3, r3
 4119 00d2 002B     		cmp	r3, #0
 4120 00d4 1BD0     		beq	.L291
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 4121              		.loc 1 819 0
 4122 00d6 5A22     		movs	r2, #90
 4123 00d8 A35A     		ldrh	r3, [r4, r2]
 4124 00da 013B     		subs	r3, r3, #1
 4125 00dc 9BB2     		uxth	r3, r3
 4126 00de A352     		strh	r3, [r4, r2]
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4127              		.loc 1 820 0
 4128 00e0 0095     		str	r5, [sp]
 4129 00e2 039B     		ldr	r3, [sp, #12]
 4130 00e4 0022     		movs	r2, #0
 4131 00e6 2021     		movs	r1, #32
 4132 00e8 2000     		movs	r0, r4
 4133 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4134              	.LVL323:
 4135 00ee 0028     		cmp	r0, #0
 4136 00f0 1ED1     		bne	.L287
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4137              		.loc 1 824 0
 4138 00f2 8023     		movs	r3, #128
 4139 00f4 5B01     		lsls	r3, r3, #5
 4140 00f6 A268     		ldr	r2, [r4, #8]
 4141 00f8 9A42     		cmp	r2, r3
 4142 00fa E1D1     		bne	.L279
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4143              		.loc 1 824 0 is_stmt 0 discriminator 1
 4144 00fc 2369     		ldr	r3, [r4, #16]
 4145 00fe 002B     		cmp	r3, #0
 4146 0100 DED1     		bne	.L279
 4147              	.LVL324:
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         pData +=2U;
 4148              		.loc 1 827 0 is_stmt 1
ARM GAS  /tmp/ccF4ErZF.s 			page 129


 4149 0102 2368     		ldr	r3, [r4]
 4150 0104 9B8C     		ldrh	r3, [r3, #36]
 4151 0106 3340     		ands	r3, r6
 4152 0108 3B80     		strh	r3, [r7]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4153              		.loc 1 828 0
 4154 010a 0237     		adds	r7, r7, #2
 4155              	.LVL325:
 4156 010c DEE7     		b	.L278
 4157              	.LVL326:
 4158              	.L291:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4159              		.loc 1 837 0
 4160 010e 6A33     		adds	r3, r3, #106
 4161 0110 2022     		movs	r2, #32
 4162 0112 E254     		strb	r2, [r4, r3]
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4163              		.loc 1 840 0
 4164 0114 023B     		subs	r3, r3, #2
 4165 0116 0022     		movs	r2, #0
 4166 0118 E254     		strb	r2, [r4, r3]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4167              		.loc 1 842 0
 4168 011a 0020     		movs	r0, #0
 4169 011c 00E0     		b	.L270
 4170              	.LVL327:
 4171              	.L282:
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4172              		.loc 1 846 0
 4173 011e 0220     		movs	r0, #2
 4174              	.LVL328:
 4175              	.L270:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4176              		.loc 1 848 0
 4177 0120 05B0     		add	sp, sp, #20
 4178              		@ sp needed
 4179              	.LVL329:
 4180              	.LVL330:
 4181              	.LVL331:
 4182 0122 F0BD     		pop	{r4, r5, r6, r7, pc}
 4183              	.LVL332:
 4184              	.L283:
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4185              		.loc 1 786 0
 4186 0124 0120     		movs	r0, #1
 4187              	.LVL333:
 4188 0126 FBE7     		b	.L270
 4189              	.LVL334:
 4190              	.L284:
 4191 0128 0120     		movs	r0, #1
 4192              	.LVL335:
 4193 012a F9E7     		b	.L270
 4194              	.LVL336:
 4195              	.L286:
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4196              		.loc 1 801 0
 4197 012c 0220     		movs	r0, #2
ARM GAS  /tmp/ccF4ErZF.s 			page 130


 4198              	.LVL337:
 4199 012e F7E7     		b	.L270
 4200              	.LVL338:
 4201              	.L287:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4202              		.loc 1 822 0
 4203 0130 0320     		movs	r0, #3
 4204 0132 F5E7     		b	.L270
 4205              	.L293:
 4206              		.align	2
 4207              	.L292:
 4208 0134 FF010000 		.word	511
 4209              		.cfi_endproc
 4210              	.LFE44:
 4212              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4213              		.align	1
 4214              		.global	UART_CheckIdleState
 4215              		.syntax unified
 4216              		.code	16
 4217              		.thumb_func
 4218              		.fpu softvfp
 4220              	UART_CheckIdleState:
 4221              	.LFB76:
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 4222              		.loc 1 2289 0
 4223              		.cfi_startproc
 4224              		@ args = 0, pretend = 0, frame = 0
 4225              		@ frame_needed = 0, uses_anonymous_args = 0
 4226              	.LVL339:
 4227 0000 30B5     		push	{r4, r5, lr}
 4228              	.LCFI32:
 4229              		.cfi_def_cfa_offset 12
 4230              		.cfi_offset 4, -12
 4231              		.cfi_offset 5, -8
 4232              		.cfi_offset 14, -4
 4233 0002 83B0     		sub	sp, sp, #12
 4234              	.LCFI33:
 4235              		.cfi_def_cfa_offset 24
 4236 0004 0400     		movs	r4, r0
 4237              	.LVL340:
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4238              		.loc 1 2295 0
 4239 0006 0023     		movs	r3, #0
 4240 0008 C366     		str	r3, [r0, #108]
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4241              		.loc 1 2299 0
 4242 000a FFF7FEFF 		bl	HAL_GetTick
 4243              	.LVL341:
 4244 000e 0500     		movs	r5, r0
 4245              	.LVL342:
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4246              		.loc 1 2304 0
 4247 0010 2368     		ldr	r3, [r4]
 4248 0012 174A     		ldr	r2, .L302
 4249 0014 9342     		cmp	r3, r2
 4250 0016 0AD0     		beq	.L300
 4251              	.LVL343:
ARM GAS  /tmp/ccF4ErZF.s 			page 131


 4252              	.L295:
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4253              		.loc 1 2331 0
 4254 0018 2023     		movs	r3, #32
 4255 001a 6922     		movs	r2, #105
 4256 001c A354     		strb	r3, [r4, r2]
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4257              		.loc 1 2332 0
 4258 001e 0132     		adds	r2, r2, #1
 4259 0020 A354     		strb	r3, [r4, r2]
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4260              		.loc 1 2335 0
 4261 0022 4833     		adds	r3, r3, #72
 4262 0024 0022     		movs	r2, #0
 4263 0026 E254     		strb	r2, [r4, r3]
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4264              		.loc 1 2337 0
 4265 0028 0020     		movs	r0, #0
 4266              	.L297:
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4267              		.loc 1 2338 0
 4268 002a 03B0     		add	sp, sp, #12
 4269              		@ sp needed
 4270              	.LVL344:
 4271              	.LVL345:
 4272 002c 30BD     		pop	{r4, r5, pc}
 4273              	.LVL346:
 4274              	.L300:
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4275              		.loc 1 2307 0
 4276 002e 1B68     		ldr	r3, [r3]
 4277 0030 1B07     		lsls	r3, r3, #28
 4278 0032 10D4     		bmi	.L301
 4279              	.LVL347:
 4280              	.L296:
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 4281              		.loc 1 2318 0
 4282 0034 2368     		ldr	r3, [r4]
 4283 0036 1B68     		ldr	r3, [r3]
 4284 0038 5B07     		lsls	r3, r3, #29
 4285 003a EDD5     		bpl	.L295
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4286              		.loc 1 2321 0
 4287 003c 8021     		movs	r1, #128
 4288 003e 0D4B     		ldr	r3, .L302+4
 4289 0040 0093     		str	r3, [sp]
 4290 0042 2B00     		movs	r3, r5
 4291 0044 0022     		movs	r2, #0
 4292 0046 C903     		lsls	r1, r1, #15
 4293 0048 2000     		movs	r0, r4
 4294 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4295              	.LVL348:
 4296 004e 0028     		cmp	r0, #0
 4297 0050 E2D0     		beq	.L295
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4298              		.loc 1 2324 0
 4299 0052 0320     		movs	r0, #3
ARM GAS  /tmp/ccF4ErZF.s 			page 132


 4300 0054 E9E7     		b	.L297
 4301              	.LVL349:
 4302              	.L301:
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4303              		.loc 1 2310 0
 4304 0056 8021     		movs	r1, #128
 4305 0058 064B     		ldr	r3, .L302+4
 4306 005a 0093     		str	r3, [sp]
 4307 005c 0300     		movs	r3, r0
 4308 005e 0022     		movs	r2, #0
 4309 0060 8903     		lsls	r1, r1, #14
 4310 0062 2000     		movs	r0, r4
 4311              	.LVL350:
 4312 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4313              	.LVL351:
 4314 0068 0028     		cmp	r0, #0
 4315 006a E3D0     		beq	.L296
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4316              		.loc 1 2313 0
 4317 006c 0320     		movs	r0, #3
 4318 006e DCE7     		b	.L297
 4319              	.L303:
 4320              		.align	2
 4321              	.L302:
 4322 0070 00380140 		.word	1073821696
 4323 0074 FFFFFF01 		.word	33554431
 4324              		.cfi_endproc
 4325              	.LFE76:
 4327              		.section	.text.HAL_UART_Init,"ax",%progbits
 4328              		.align	1
 4329              		.global	HAL_UART_Init
 4330              		.syntax unified
 4331              		.code	16
 4332              		.thumb_func
 4333              		.fpu softvfp
 4335              	HAL_UART_Init:
 4336              	.LFB37:
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4337              		.loc 1 292 0
 4338              		.cfi_startproc
 4339              		@ args = 0, pretend = 0, frame = 0
 4340              		@ frame_needed = 0, uses_anonymous_args = 0
 4341              	.LVL352:
 4342 0000 10B5     		push	{r4, lr}
 4343              	.LCFI34:
 4344              		.cfi_def_cfa_offset 8
 4345              		.cfi_offset 4, -8
 4346              		.cfi_offset 14, -4
 4347 0002 041E     		subs	r4, r0, #0
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4348              		.loc 1 294 0
 4349 0004 4DD0     		beq	.L310
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4350              		.loc 1 299 0
 4351 0006 8369     		ldr	r3, [r0, #24]
 4352 0008 002B     		cmp	r3, #0
 4353 000a 32D0     		beq	.L306
ARM GAS  /tmp/ccF4ErZF.s 			page 133


 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4354              		.loc 1 302 0
 4355 000c 0368     		ldr	r3, [r0]
 4356 000e 264A     		ldr	r2, .L313
 4357 0010 9342     		cmp	r3, r2
 4358 0012 07D0     		beq	.L307
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4359              		.loc 1 302 0 is_stmt 0 discriminator 1
 4360 0014 254A     		ldr	r2, .L313+4
 4361 0016 9342     		cmp	r3, r2
 4362 0018 04D0     		beq	.L307
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4363              		.loc 1 302 0 discriminator 2
 4364 001a 9721     		movs	r1, #151
 4365 001c 4900     		lsls	r1, r1, #1
 4366 001e 2448     		ldr	r0, .L313+8
 4367              	.LVL353:
 4368 0020 FFF7FEFF 		bl	assert_failed
 4369              	.LVL354:
 4370              	.L307:
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4371              		.loc 1 310 0 is_stmt 1
 4372 0024 6923     		movs	r3, #105
 4373 0026 E35C     		ldrb	r3, [r4, r3]
 4374 0028 002B     		cmp	r3, #0
 4375 002a 2FD0     		beq	.L311
 4376              	.L308:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4377              		.loc 1 319 0
 4378 002c 6923     		movs	r3, #105
 4379 002e 2422     		movs	r2, #36
 4380 0030 E254     		strb	r2, [r4, r3]
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4381              		.loc 1 322 0
 4382 0032 2268     		ldr	r2, [r4]
 4383 0034 1368     		ldr	r3, [r2]
 4384 0036 0121     		movs	r1, #1
 4385 0038 8B43     		bics	r3, r1
 4386 003a 1360     		str	r3, [r2]
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4387              		.loc 1 325 0
 4388 003c 2000     		movs	r0, r4
 4389 003e FFF7FEFF 		bl	UART_SetConfig
 4390              	.LVL355:
 4391 0042 0128     		cmp	r0, #1
 4392 0044 14D0     		beq	.L305
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4393              		.loc 1 330 0
 4394 0046 636A     		ldr	r3, [r4, #36]
 4395 0048 002B     		cmp	r3, #0
 4396 004a 26D1     		bne	.L312
 4397              	.L309:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4398              		.loc 1 339 0
 4399 004c 2268     		ldr	r2, [r4]
 4400 004e 5368     		ldr	r3, [r2, #4]
 4401 0050 1849     		ldr	r1, .L313+12
ARM GAS  /tmp/ccF4ErZF.s 			page 134


 4402 0052 0B40     		ands	r3, r1
 4403 0054 5360     		str	r3, [r2, #4]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4404              		.loc 1 345 0
 4405 0056 2268     		ldr	r2, [r4]
 4406 0058 9368     		ldr	r3, [r2, #8]
 4407 005a 2A21     		movs	r1, #42
 4408 005c 8B43     		bics	r3, r1
 4409 005e 9360     		str	r3, [r2, #8]
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4410              		.loc 1 358 0
 4411 0060 2268     		ldr	r2, [r4]
 4412 0062 1368     		ldr	r3, [r2]
 4413 0064 2939     		subs	r1, r1, #41
 4414 0066 0B43     		orrs	r3, r1
 4415 0068 1360     		str	r3, [r2]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4416              		.loc 1 361 0
 4417 006a 2000     		movs	r0, r4
 4418 006c FFF7FEFF 		bl	UART_CheckIdleState
 4419              	.LVL356:
 4420              	.L305:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4421              		.loc 1 362 0
 4422              		@ sp needed
 4423              	.LVL357:
 4424 0070 10BD     		pop	{r4, pc}
 4425              	.LVL358:
 4426              	.L306:
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4427              		.loc 1 307 0
 4428 0072 0368     		ldr	r3, [r0]
 4429 0074 0C4A     		ldr	r2, .L313
 4430 0076 9342     		cmp	r3, r2
 4431 0078 D4D0     		beq	.L307
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4432              		.loc 1 307 0 is_stmt 0 discriminator 1
 4433 007a 0C4A     		ldr	r2, .L313+4
 4434 007c 9342     		cmp	r3, r2
 4435 007e D1D0     		beq	.L307
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4436              		.loc 1 307 0 discriminator 2
 4437 0080 3421     		movs	r1, #52
 4438 0082 FF31     		adds	r1, r1, #255
 4439 0084 0A48     		ldr	r0, .L313+8
 4440              	.LVL359:
 4441 0086 FFF7FEFF 		bl	assert_failed
 4442              	.LVL360:
 4443 008a CBE7     		b	.L307
 4444              	.L311:
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4445              		.loc 1 313 0 is_stmt 1
 4446 008c 6833     		adds	r3, r3, #104
 4447 008e 0022     		movs	r2, #0
 4448 0090 E254     		strb	r2, [r4, r3]
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4449              		.loc 1 316 0
ARM GAS  /tmp/ccF4ErZF.s 			page 135


 4450 0092 2000     		movs	r0, r4
 4451 0094 FFF7FEFF 		bl	HAL_UART_MspInit
 4452              	.LVL361:
 4453 0098 C8E7     		b	.L308
 4454              	.L312:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4455              		.loc 1 332 0
 4456 009a 2000     		movs	r0, r4
 4457 009c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4458              	.LVL362:
 4459 00a0 D4E7     		b	.L309
 4460              	.LVL363:
 4461              	.L310:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4462              		.loc 1 296 0
 4463 00a2 0120     		movs	r0, #1
 4464              	.LVL364:
 4465 00a4 E4E7     		b	.L305
 4466              	.L314:
 4467 00a6 C046     		.align	2
 4468              	.L313:
 4469 00a8 00380140 		.word	1073821696
 4470 00ac 00440040 		.word	1073759232
 4471 00b0 00000000 		.word	.LC0
 4472 00b4 FFB7FFFF 		.word	-18433
 4473              		.cfi_endproc
 4474              	.LFE37:
 4476              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4477              		.align	1
 4478              		.global	HAL_HalfDuplex_Init
 4479              		.syntax unified
 4480              		.code	16
 4481              		.thumb_func
 4482              		.fpu softvfp
 4484              	HAL_HalfDuplex_Init:
 4485              	.LFB38:
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4486              		.loc 1 371 0
 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 0
 4489              		@ frame_needed = 0, uses_anonymous_args = 0
 4490              	.LVL365:
 4491 0000 10B5     		push	{r4, lr}
 4492              	.LCFI35:
 4493              		.cfi_def_cfa_offset 8
 4494              		.cfi_offset 4, -8
 4495              		.cfi_offset 14, -4
 4496 0002 041E     		subs	r4, r0, #0
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4497              		.loc 1 373 0
 4498 0004 42D0     		beq	.L320
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4499              		.loc 1 379 0
 4500 0006 0368     		ldr	r3, [r0]
 4501 0008 214A     		ldr	r2, .L323
 4502 000a 9342     		cmp	r3, r2
 4503 000c 07D0     		beq	.L317
ARM GAS  /tmp/ccF4ErZF.s 			page 136


 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4504              		.loc 1 379 0 is_stmt 0 discriminator 1
 4505 000e 214A     		ldr	r2, .L323+4
 4506 0010 9342     		cmp	r3, r2
 4507 0012 04D0     		beq	.L317
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4508              		.loc 1 379 0 discriminator 2
 4509 0014 7C21     		movs	r1, #124
 4510 0016 FF31     		adds	r1, r1, #255
 4511 0018 1F48     		ldr	r0, .L323+8
 4512              	.LVL366:
 4513 001a FFF7FEFF 		bl	assert_failed
 4514              	.LVL367:
 4515              	.L317:
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4516              		.loc 1 381 0 is_stmt 1
 4517 001e 6923     		movs	r3, #105
 4518 0020 E35C     		ldrb	r3, [r4, r3]
 4519 0022 002B     		cmp	r3, #0
 4520 0024 27D0     		beq	.L321
 4521              	.L318:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4522              		.loc 1 390 0
 4523 0026 6923     		movs	r3, #105
 4524 0028 2422     		movs	r2, #36
 4525 002a E254     		strb	r2, [r4, r3]
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4526              		.loc 1 393 0
 4527 002c 2268     		ldr	r2, [r4]
 4528 002e 1368     		ldr	r3, [r2]
 4529 0030 0121     		movs	r1, #1
 4530 0032 8B43     		bics	r3, r1
 4531 0034 1360     		str	r3, [r2]
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4532              		.loc 1 396 0
 4533 0036 2000     		movs	r0, r4
 4534 0038 FFF7FEFF 		bl	UART_SetConfig
 4535              	.LVL368:
 4536 003c 0128     		cmp	r0, #1
 4537 003e 19D0     		beq	.L316
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4538              		.loc 1 401 0
 4539 0040 636A     		ldr	r3, [r4, #36]
 4540 0042 002B     		cmp	r3, #0
 4541 0044 1ED1     		bne	.L322
 4542              	.L319:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4543              		.loc 1 410 0
 4544 0046 2268     		ldr	r2, [r4]
 4545 0048 5368     		ldr	r3, [r2, #4]
 4546 004a 1449     		ldr	r1, .L323+12
 4547 004c 0B40     		ands	r3, r1
 4548 004e 5360     		str	r3, [r2, #4]
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4549              		.loc 1 416 0
 4550 0050 2268     		ldr	r2, [r4]
 4551 0052 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccF4ErZF.s 			page 137


 4552 0054 2221     		movs	r1, #34
 4553 0056 8B43     		bics	r3, r1
 4554 0058 9360     		str	r3, [r2, #8]
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4555              		.loc 1 427 0
 4556 005a 2268     		ldr	r2, [r4]
 4557 005c 9368     		ldr	r3, [r2, #8]
 4558 005e 1A39     		subs	r1, r1, #26
 4559 0060 0B43     		orrs	r3, r1
 4560 0062 9360     		str	r3, [r2, #8]
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4561              		.loc 1 430 0
 4562 0064 2268     		ldr	r2, [r4]
 4563 0066 1368     		ldr	r3, [r2]
 4564 0068 0739     		subs	r1, r1, #7
 4565 006a 0B43     		orrs	r3, r1
 4566 006c 1360     		str	r3, [r2]
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4567              		.loc 1 433 0
 4568 006e 2000     		movs	r0, r4
 4569 0070 FFF7FEFF 		bl	UART_CheckIdleState
 4570              	.LVL369:
 4571              	.L316:
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4572              		.loc 1 434 0
 4573              		@ sp needed
 4574              	.LVL370:
 4575 0074 10BD     		pop	{r4, pc}
 4576              	.LVL371:
 4577              	.L321:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4578              		.loc 1 384 0
 4579 0076 6833     		adds	r3, r3, #104
 4580 0078 0022     		movs	r2, #0
 4581 007a E254     		strb	r2, [r4, r3]
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4582              		.loc 1 387 0
 4583 007c 2000     		movs	r0, r4
 4584 007e FFF7FEFF 		bl	HAL_UART_MspInit
 4585              	.LVL372:
 4586 0082 D0E7     		b	.L318
 4587              	.L322:
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4588              		.loc 1 403 0
 4589 0084 2000     		movs	r0, r4
 4590 0086 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4591              	.LVL373:
 4592 008a DCE7     		b	.L319
 4593              	.LVL374:
 4594              	.L320:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4595              		.loc 1 375 0
 4596 008c 0120     		movs	r0, #1
 4597              	.LVL375:
 4598 008e F1E7     		b	.L316
 4599              	.L324:
 4600              		.align	2
ARM GAS  /tmp/ccF4ErZF.s 			page 138


 4601              	.L323:
 4602 0090 00380140 		.word	1073821696
 4603 0094 00440040 		.word	1073759232
 4604 0098 00000000 		.word	.LC0
 4605 009c FFB7FFFF 		.word	-18433
 4606              		.cfi_endproc
 4607              	.LFE38:
 4609              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4610              		.align	1
 4611              		.global	HAL_MultiProcessor_Init
 4612              		.syntax unified
 4613              		.code	16
 4614              		.thumb_func
 4615              		.fpu softvfp
 4617              	HAL_MultiProcessor_Init:
 4618              	.LFB39:
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check the UART handle allocation */
 4619              		.loc 1 456 0
 4620              		.cfi_startproc
 4621              		@ args = 0, pretend = 0, frame = 0
 4622              		@ frame_needed = 0, uses_anonymous_args = 0
 4623              	.LVL376:
 4624 0000 70B5     		push	{r4, r5, r6, lr}
 4625              	.LCFI36:
 4626              		.cfi_def_cfa_offset 16
 4627              		.cfi_offset 4, -16
 4628              		.cfi_offset 5, -12
 4629              		.cfi_offset 6, -8
 4630              		.cfi_offset 14, -4
 4631 0002 0400     		movs	r4, r0
 4632 0004 0D00     		movs	r5, r1
 4633 0006 1600     		movs	r6, r2
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4634              		.loc 1 458 0
 4635 0008 0028     		cmp	r0, #0
 4636 000a 4FD0     		beq	.L331
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4637              		.loc 1 464 0
 4638 000c 002A     		cmp	r2, #0
 4639 000e 03D0     		beq	.L327
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4640              		.loc 1 464 0 is_stmt 0 discriminator 1
 4641 0010 8023     		movs	r3, #128
 4642 0012 1B01     		lsls	r3, r3, #4
 4643 0014 9A42     		cmp	r2, r3
 4644 0016 30D1     		bne	.L332
 4645              	.LVL377:
 4646              	.L327:
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4647              		.loc 1 466 0 is_stmt 1
 4648 0018 6923     		movs	r3, #105
 4649 001a E35C     		ldrb	r3, [r4, r3]
 4650 001c 002B     		cmp	r3, #0
 4651 001e 32D0     		beq	.L333
 4652              	.L328:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4653              		.loc 1 475 0
ARM GAS  /tmp/ccF4ErZF.s 			page 139


 4654 0020 6923     		movs	r3, #105
 4655 0022 2422     		movs	r2, #36
 4656 0024 E254     		strb	r2, [r4, r3]
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4657              		.loc 1 478 0
 4658 0026 2268     		ldr	r2, [r4]
 4659 0028 1368     		ldr	r3, [r2]
 4660 002a 0121     		movs	r1, #1
 4661 002c 8B43     		bics	r3, r1
 4662 002e 1360     		str	r3, [r2]
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4663              		.loc 1 481 0
 4664 0030 2000     		movs	r0, r4
 4665 0032 FFF7FEFF 		bl	UART_SetConfig
 4666              	.LVL378:
 4667 0036 0128     		cmp	r0, #1
 4668 0038 1ED0     		beq	.L326
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4669              		.loc 1 486 0
 4670 003a 636A     		ldr	r3, [r4, #36]
 4671 003c 002B     		cmp	r3, #0
 4672 003e 29D1     		bne	.L334
 4673              	.L329:
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4674              		.loc 1 495 0
 4675 0040 2268     		ldr	r2, [r4]
 4676 0042 5368     		ldr	r3, [r2, #4]
 4677 0044 1A49     		ldr	r1, .L336
 4678 0046 0B40     		ands	r3, r1
 4679 0048 5360     		str	r3, [r2, #4]
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** #else
 4680              		.loc 1 501 0
 4681 004a 2268     		ldr	r2, [r4]
 4682 004c 9368     		ldr	r3, [r2, #8]
 4683 004e 2A21     		movs	r1, #42
 4684 0050 8B43     		bics	r3, r1
 4685 0052 9360     		str	r3, [r2, #8]
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 4686              		.loc 1 513 0
 4687 0054 8023     		movs	r3, #128
 4688 0056 1B01     		lsls	r3, r3, #4
 4689 0058 9E42     		cmp	r6, r3
 4690 005a 1FD0     		beq	.L335
 4691              	.L330:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4692              		.loc 1 520 0
 4693 005c 2268     		ldr	r2, [r4]
 4694 005e 1368     		ldr	r3, [r2]
 4695 0060 1449     		ldr	r1, .L336+4
 4696 0062 0B40     		ands	r3, r1
 4697 0064 1E43     		orrs	r6, r3
 4698              	.LVL379:
 4699 0066 1660     		str	r6, [r2]
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4700              		.loc 1 523 0
 4701 0068 2268     		ldr	r2, [r4]
 4702 006a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccF4ErZF.s 			page 140


 4703 006c 0121     		movs	r1, #1
 4704 006e 0B43     		orrs	r3, r1
 4705 0070 1360     		str	r3, [r2]
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4706              		.loc 1 526 0
 4707 0072 2000     		movs	r0, r4
 4708 0074 FFF7FEFF 		bl	UART_CheckIdleState
 4709              	.LVL380:
 4710              	.L326:
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4711              		.loc 1 527 0
 4712              		@ sp needed
 4713              	.LVL381:
 4714 0078 70BD     		pop	{r4, r5, r6, pc}
 4715              	.LVL382:
 4716              	.L332:
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4717              		.loc 1 464 0 discriminator 2
 4718 007a E821     		movs	r1, #232
 4719              	.LVL383:
 4720 007c 4900     		lsls	r1, r1, #1
 4721 007e 0E48     		ldr	r0, .L336+8
 4722              	.LVL384:
 4723 0080 FFF7FEFF 		bl	assert_failed
 4724              	.LVL385:
 4725 0084 C8E7     		b	.L327
 4726              	.L333:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4727              		.loc 1 469 0
 4728 0086 6833     		adds	r3, r3, #104
 4729 0088 0022     		movs	r2, #0
 4730 008a E254     		strb	r2, [r4, r3]
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4731              		.loc 1 472 0
 4732 008c 2000     		movs	r0, r4
 4733 008e FFF7FEFF 		bl	HAL_UART_MspInit
 4734              	.LVL386:
 4735 0092 C5E7     		b	.L328
 4736              	.L334:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4737              		.loc 1 488 0
 4738 0094 2000     		movs	r0, r4
 4739 0096 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4740              	.LVL387:
 4741 009a D1E7     		b	.L329
 4742              	.L335:
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4743              		.loc 1 516 0
 4744 009c 2268     		ldr	r2, [r4]
 4745 009e 5368     		ldr	r3, [r2, #4]
 4746 00a0 1B02     		lsls	r3, r3, #8
 4747 00a2 1B0A     		lsrs	r3, r3, #8
 4748 00a4 2D06     		lsls	r5, r5, #24
 4749 00a6 1D43     		orrs	r5, r3
 4750 00a8 5560     		str	r5, [r2, #4]
 4751 00aa D7E7     		b	.L330
 4752              	.LVL388:
ARM GAS  /tmp/ccF4ErZF.s 			page 141


 4753              	.L331:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 4754              		.loc 1 460 0
 4755 00ac 0120     		movs	r0, #1
 4756              	.LVL389:
 4757 00ae E3E7     		b	.L326
 4758              	.L337:
 4759              		.align	2
 4760              	.L336:
 4761 00b0 FFB7FFFF 		.word	-18433
 4762 00b4 FFF7FFFF 		.word	-2049
 4763 00b8 00000000 		.word	.LC0
 4764              		.cfi_endproc
 4765              	.LFE39:
 4767              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4768              		.align	1
 4769              		.global	HAL_MultiProcessor_EnableMuteMode
 4770              		.syntax unified
 4771              		.code	16
 4772              		.thumb_func
 4773              		.fpu softvfp
 4775              	HAL_MultiProcessor_EnableMuteMode:
 4776              	.LFB67:
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 4777              		.loc 1 1954 0
 4778              		.cfi_startproc
 4779              		@ args = 0, pretend = 0, frame = 0
 4780              		@ frame_needed = 0, uses_anonymous_args = 0
 4781              	.LVL390:
 4782 0000 10B5     		push	{r4, lr}
 4783              	.LCFI37:
 4784              		.cfi_def_cfa_offset 8
 4785              		.cfi_offset 4, -8
 4786              		.cfi_offset 14, -4
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4787              		.loc 1 1956 0
 4788 0002 6823     		movs	r3, #104
 4789 0004 C35C     		ldrb	r3, [r0, r3]
 4790 0006 012B     		cmp	r3, #1
 4791 0008 10D0     		beq	.L340
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4792              		.loc 1 1956 0 is_stmt 0 discriminator 2
 4793 000a 6823     		movs	r3, #104
 4794 000c 0122     		movs	r2, #1
 4795 000e C254     		strb	r2, [r0, r3]
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4796              		.loc 1 1958 0 is_stmt 1 discriminator 2
 4797 0010 6832     		adds	r2, r2, #104
 4798 0012 443B     		subs	r3, r3, #68
 4799 0014 8354     		strb	r3, [r0, r2]
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4800              		.loc 1 1961 0 discriminator 2
 4801 0016 0168     		ldr	r1, [r0]
 4802 0018 0C68     		ldr	r4, [r1]
 4803 001a 8023     		movs	r3, #128
 4804 001c 9B01     		lsls	r3, r3, #6
 4805 001e 2343     		orrs	r3, r4
ARM GAS  /tmp/ccF4ErZF.s 			page 142


 4806 0020 0B60     		str	r3, [r1]
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4807              		.loc 1 1963 0 discriminator 2
 4808 0022 2023     		movs	r3, #32
 4809 0024 8354     		strb	r3, [r0, r2]
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4810              		.loc 1 1965 0 discriminator 2
 4811 0026 FFF7FEFF 		bl	UART_CheckIdleState
 4812              	.LVL391:
 4813              	.L339:
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4814              		.loc 1 1966 0
 4815              		@ sp needed
 4816 002a 10BD     		pop	{r4, pc}
 4817              	.LVL392:
 4818              	.L340:
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4819              		.loc 1 1956 0
 4820 002c 0220     		movs	r0, #2
 4821              	.LVL393:
 4822 002e FCE7     		b	.L339
 4823              		.cfi_endproc
 4824              	.LFE67:
 4826              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4827              		.align	1
 4828              		.global	HAL_MultiProcessor_DisableMuteMode
 4829              		.syntax unified
 4830              		.code	16
 4831              		.thumb_func
 4832              		.fpu softvfp
 4834              	HAL_MultiProcessor_DisableMuteMode:
 4835              	.LFB68:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Process Locked */
 4836              		.loc 1 1975 0
 4837              		.cfi_startproc
 4838              		@ args = 0, pretend = 0, frame = 0
 4839              		@ frame_needed = 0, uses_anonymous_args = 0
 4840              	.LVL394:
 4841 0000 10B5     		push	{r4, lr}
 4842              	.LCFI38:
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4846              		.loc 1 1977 0
 4847 0002 6823     		movs	r3, #104
 4848 0004 C35C     		ldrb	r3, [r0, r3]
 4849 0006 012B     		cmp	r3, #1
 4850 0008 0FD0     		beq	.L343
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4851              		.loc 1 1977 0 is_stmt 0 discriminator 2
 4852 000a 6823     		movs	r3, #104
 4853 000c 0122     		movs	r2, #1
 4854 000e C254     		strb	r2, [r0, r3]
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4855              		.loc 1 1979 0 is_stmt 1 discriminator 2
 4856 0010 6832     		adds	r2, r2, #104
ARM GAS  /tmp/ccF4ErZF.s 			page 143


 4857 0012 443B     		subs	r3, r3, #68
 4858 0014 8354     		strb	r3, [r0, r2]
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4859              		.loc 1 1982 0 discriminator 2
 4860 0016 0168     		ldr	r1, [r0]
 4861 0018 0B68     		ldr	r3, [r1]
 4862 001a 054C     		ldr	r4, .L344
 4863 001c 2340     		ands	r3, r4
 4864 001e 0B60     		str	r3, [r1]
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4865              		.loc 1 1984 0 discriminator 2
 4866 0020 2023     		movs	r3, #32
 4867 0022 8354     		strb	r3, [r0, r2]
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4868              		.loc 1 1986 0 discriminator 2
 4869 0024 FFF7FEFF 		bl	UART_CheckIdleState
 4870              	.LVL395:
 4871              	.L342:
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4872              		.loc 1 1987 0
 4873              		@ sp needed
 4874 0028 10BD     		pop	{r4, pc}
 4875              	.LVL396:
 4876              	.L343:
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4877              		.loc 1 1977 0
 4878 002a 0220     		movs	r0, #2
 4879              	.LVL397:
 4880 002c FCE7     		b	.L342
 4881              	.L345:
 4882 002e C046     		.align	2
 4883              	.L344:
 4884 0030 FFDFFFFF 		.word	-8193
 4885              		.cfi_endproc
 4886              	.LFE68:
 4888              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4889              		.align	1
 4890              		.global	UART_Transmit_IT
 4891              		.syntax unified
 4892              		.code	16
 4893              		.thumb_func
 4894              		.fpu softvfp
 4896              	UART_Transmit_IT:
 4897              	.LFB90:
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4898              		.loc 1 2670 0
 4899              		.cfi_startproc
 4900              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccF4ErZF.s 			page 144


 4901              		@ frame_needed = 0, uses_anonymous_args = 0
 4902              		@ link register save eliminated.
 4903              	.LVL398:
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 4904              		.loc 1 2674 0
 4905 0000 6923     		movs	r3, #105
 4906 0002 C35C     		ldrb	r3, [r0, r3]
 4907 0004 212B     		cmp	r3, #33
 4908 0006 2FD1     		bne	.L351
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
 4909              		.loc 1 2676 0
 4910 0008 3133     		adds	r3, r3, #49
 4911 000a C35A     		ldrh	r3, [r0, r3]
 4912 000c 9BB2     		uxth	r3, r3
 4913 000e 002B     		cmp	r3, #0
 4914 0010 11D0     		beq	.L352
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4915              		.loc 1 2688 0
 4916 0012 8023     		movs	r3, #128
 4917 0014 5B01     		lsls	r3, r3, #5
 4918 0016 8268     		ldr	r2, [r0, #8]
 4919 0018 9A42     		cmp	r2, r3
 4920 001a 18D0     		beq	.L353
 4921              	.L349:
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       else
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 4922              		.loc 1 2696 0
 4923 001c C36C     		ldr	r3, [r0, #76]
 4924 001e 5A1C     		adds	r2, r3, #1
 4925 0020 C264     		str	r2, [r0, #76]
 4926 0022 1B78     		ldrb	r3, [r3]
 4927 0024 0268     		ldr	r2, [r0]
 4928 0026 1385     		strh	r3, [r2, #40]
 4929              	.L350:
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->TxXferCount--;
ARM GAS  /tmp/ccF4ErZF.s 			page 145


 4930              		.loc 1 2698 0
 4931 0028 5222     		movs	r2, #82
 4932 002a 835A     		ldrh	r3, [r0, r2]
 4933 002c 013B     		subs	r3, r3, #1
 4934 002e 9BB2     		uxth	r3, r3
 4935 0030 8352     		strh	r3, [r0, r2]
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
 4936              		.loc 1 2700 0
 4937 0032 0020     		movs	r0, #0
 4938              	.LVL399:
 4939 0034 19E0     		b	.L347
 4940              	.LVL400:
 4941              	.L352:
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4942              		.loc 1 2679 0
 4943 0036 0268     		ldr	r2, [r0]
 4944 0038 1368     		ldr	r3, [r2]
 4945 003a 8021     		movs	r1, #128
 4946 003c 8B43     		bics	r3, r1
 4947 003e 1360     		str	r3, [r2]
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 4948              		.loc 1 2682 0
 4949 0040 0268     		ldr	r2, [r0]
 4950 0042 1368     		ldr	r3, [r2]
 4951 0044 4039     		subs	r1, r1, #64
 4952 0046 0B43     		orrs	r3, r1
 4953 0048 1360     		str	r3, [r2]
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 4954              		.loc 1 2684 0
 4955 004a 0020     		movs	r0, #0
 4956              	.LVL401:
 4957 004c 0DE0     		b	.L347
 4958              	.LVL402:
 4959              	.L353:
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 4960              		.loc 1 2688 0 discriminator 1
 4961 004e 0369     		ldr	r3, [r0, #16]
 4962 0050 002B     		cmp	r3, #0
 4963 0052 E3D1     		bne	.L349
 4964              	.LVL403:
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4965              		.loc 1 2691 0
 4966 0054 C36C     		ldr	r3, [r0, #76]
 4967 0056 1B88     		ldrh	r3, [r3]
 4968 0058 DB05     		lsls	r3, r3, #23
 4969 005a DB0D     		lsrs	r3, r3, #23
 4970 005c 0268     		ldr	r2, [r0]
 4971 005e 1385     		strh	r3, [r2, #40]
 4972              	.LVL404:
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 4973              		.loc 1 2692 0
 4974 0060 C36C     		ldr	r3, [r0, #76]
 4975 0062 0233     		adds	r3, r3, #2
 4976 0064 C364     		str	r3, [r0, #76]
 4977 0066 DFE7     		b	.L350
 4978              	.L351:
ARM GAS  /tmp/ccF4ErZF.s 			page 146


2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 4979              		.loc 1 2705 0
 4980 0068 0220     		movs	r0, #2
 4981              	.LVL405:
 4982              	.L347:
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 4983              		.loc 1 2707 0
 4984              		@ sp needed
 4985 006a 7047     		bx	lr
 4986              		.cfi_endproc
 4987              	.LFE90:
 4989              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 4990              		.align	1
 4991              		.global	UART_EndTransmit_IT
 4992              		.syntax unified
 4993              		.code	16
 4994              		.thumb_func
 4995              		.fpu softvfp
 4997              	UART_EndTransmit_IT:
 4998              	.LFB91:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 4999              		.loc 1 2716 0
 5000              		.cfi_startproc
 5001              		@ args = 0, pretend = 0, frame = 0
 5002              		@ frame_needed = 0, uses_anonymous_args = 0
 5003              	.LVL406:
 5004 0000 10B5     		push	{r4, lr}
 5005              	.LCFI39:
 5006              		.cfi_def_cfa_offset 8
 5007              		.cfi_offset 4, -8
 5008              		.cfi_offset 14, -4
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5009              		.loc 1 2718 0
 5010 0002 0268     		ldr	r2, [r0]
 5011 0004 1368     		ldr	r3, [r2]
 5012 0006 4021     		movs	r1, #64
 5013 0008 8B43     		bics	r3, r1
 5014 000a 1360     		str	r3, [r2]
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5015              		.loc 1 2721 0
 5016 000c 6923     		movs	r3, #105
ARM GAS  /tmp/ccF4ErZF.s 			page 147


 5017 000e 2022     		movs	r2, #32
 5018 0010 C254     		strb	r2, [r0, r3]
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 5019              		.loc 1 2723 0
 5020 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 5021              	.LVL407:
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   return HAL_OK;
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5022              		.loc 1 2726 0
 5023 0016 0020     		movs	r0, #0
 5024              		@ sp needed
 5025 0018 10BD     		pop	{r4, pc}
 5026              		.cfi_endproc
 5027              	.LFE91:
 5029              		.section	.text.UART_Receive_IT,"ax",%progbits
 5030              		.align	1
 5031              		.global	UART_Receive_IT
 5032              		.syntax unified
 5033              		.code	16
 5034              		.thumb_func
 5035              		.fpu softvfp
 5037              	UART_Receive_IT:
 5038              	.LFB92:
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** /**
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   * @retval HAL status
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   */
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** {
 5039              		.loc 1 2736 0
 5040              		.cfi_startproc
 5041              		@ args = 0, pretend = 0, frame = 0
 5042              		@ frame_needed = 0, uses_anonymous_args = 0
 5043              	.LVL408:
 5044 0000 10B5     		push	{r4, lr}
 5045              	.LCFI40:
 5046              		.cfi_def_cfa_offset 8
 5047              		.cfi_offset 4, -8
 5048              		.cfi_offset 14, -4
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t* tmp;
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 5049              		.loc 1 2738 0
 5050 0002 5C23     		movs	r3, #92
 5051 0004 C25A     		ldrh	r2, [r0, r3]
 5052              	.LVL409:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint16_t  uhdata;
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 5053              		.loc 1 2742 0
 5054 0006 0E33     		adds	r3, r3, #14
ARM GAS  /tmp/ccF4ErZF.s 			page 148


 5055 0008 C35C     		ldrb	r3, [r0, r3]
 5056 000a 222B     		cmp	r3, #34
 5057 000c 32D1     		bne	.L356
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 5058              		.loc 1 2744 0
 5059 000e 0368     		ldr	r3, [r0]
 5060 0010 9B8C     		ldrh	r3, [r3, #36]
 5061 0012 9BB2     		uxth	r3, r3
 5062              	.LVL410:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 5063              		.loc 1 2745 0
 5064 0014 8021     		movs	r1, #128
 5065 0016 4901     		lsls	r1, r1, #5
 5066 0018 8468     		ldr	r4, [r0, #8]
 5067 001a 8C42     		cmp	r4, r1
 5068 001c 0ED0     		beq	.L361
 5069              	.L357:
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     else
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 5070              		.loc 1 2753 0
 5071 001e D2B2     		uxtb	r2, r2
 5072              	.LVL411:
 5073 0020 416D     		ldr	r1, [r0, #84]
 5074 0022 4C1C     		adds	r4, r1, #1
 5075 0024 4465     		str	r4, [r0, #84]
 5076              	.LVL412:
 5077 0026 1340     		ands	r3, r2
 5078              	.LVL413:
 5079 0028 0B70     		strb	r3, [r1]
 5080              	.L358:
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 5081              		.loc 1 2756 0
 5082 002a 5A22     		movs	r2, #90
 5083 002c 835A     		ldrh	r3, [r0, r2]
 5084 002e 013B     		subs	r3, r3, #1
 5085 0030 9BB2     		uxth	r3, r3
 5086 0032 8352     		strh	r3, [r0, r2]
 5087 0034 002B     		cmp	r3, #0
 5088 0036 0BD0     		beq	.L362
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccF4ErZF.s 			page 149


2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return HAL_OK;
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_OK;
 5089              		.loc 1 2772 0
 5090 0038 0020     		movs	r0, #0
 5091              	.LVL414:
 5092 003a 21E0     		b	.L359
 5093              	.LVL415:
 5094              	.L361:
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5095              		.loc 1 2745 0 discriminator 1
 5096 003c 0169     		ldr	r1, [r0, #16]
 5097 003e 0029     		cmp	r1, #0
 5098 0040 EDD1     		bne	.L357
 5099              	.LVL416:
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       huart->pRxBuffPtr +=2U;
 5100              		.loc 1 2748 0
 5101 0042 1340     		ands	r3, r2
 5102              	.LVL417:
 5103 0044 426D     		ldr	r2, [r0, #84]
 5104              	.LVL418:
 5105 0046 1380     		strh	r3, [r2]
 5106              	.LVL419:
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5107              		.loc 1 2749 0
 5108 0048 436D     		ldr	r3, [r0, #84]
 5109 004a 0233     		adds	r3, r3, #2
 5110 004c 4365     		str	r3, [r0, #84]
 5111 004e ECE7     		b	.L358
 5112              	.LVL420:
 5113              	.L362:
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5114              		.loc 1 2759 0
 5115 0050 0268     		ldr	r2, [r0]
 5116 0052 1368     		ldr	r3, [r2]
 5117 0054 0B49     		ldr	r1, .L363
 5118 0056 0B40     		ands	r3, r1
 5119 0058 1360     		str	r3, [r2]
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5120              		.loc 1 2762 0
 5121 005a 0268     		ldr	r2, [r0]
 5122 005c 9368     		ldr	r3, [r2, #8]
 5123 005e 2331     		adds	r1, r1, #35
 5124 0060 FF31     		adds	r1, r1, #255
 5125 0062 8B43     		bics	r3, r1
 5126 0064 9360     		str	r3, [r2, #8]
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5127              		.loc 1 2765 0
 5128 0066 6A23     		movs	r3, #106
 5129 0068 2022     		movs	r2, #32
 5130 006a C254     		strb	r2, [r0, r3]
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5131              		.loc 1 2767 0
ARM GAS  /tmp/ccF4ErZF.s 			page 150


 5132 006c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5133              	.LVL421:
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5134              		.loc 1 2769 0
 5135 0070 0020     		movs	r0, #0
 5136 0072 05E0     		b	.L359
 5137              	.LVL422:
 5138              	.L356:
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   else
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 5139              		.loc 1 2777 0
 5140 0074 0268     		ldr	r2, [r0]
 5141              	.LVL423:
 5142 0076 9369     		ldr	r3, [r2, #24]
 5143 0078 0821     		movs	r1, #8
 5144 007a 0B43     		orrs	r3, r1
 5145 007c 9361     		str	r3, [r2, #24]
 5146              	.LVL424:
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return HAL_BUSY;
 5147              		.loc 1 2779 0
 5148 007e 0220     		movs	r0, #2
 5149              	.LVL425:
 5150              	.L359:
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** }
 5151              		.loc 1 2781 0
 5152              		@ sp needed
 5153 0080 10BD     		pop	{r4, pc}
 5154              	.L364:
 5155 0082 C046     		.align	2
 5156              	.L363:
 5157 0084 DFFEFFFF 		.word	-289
 5158              		.cfi_endproc
 5159              	.LFE92:
 5161              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5162              		.align	1
 5163              		.global	HAL_UART_IRQHandler
 5164              		.syntax unified
 5165              		.code	16
 5166              		.thumb_func
 5167              		.fpu softvfp
 5169              	HAL_UART_IRQHandler:
 5170              	.LFB58:
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 5171              		.loc 1 1657 0
 5172              		.cfi_startproc
 5173              		@ args = 0, pretend = 0, frame = 0
 5174              		@ frame_needed = 0, uses_anonymous_args = 0
 5175              	.LVL426:
 5176 0000 70B5     		push	{r4, r5, r6, lr}
 5177              	.LCFI41:
 5178              		.cfi_def_cfa_offset 16
 5179              		.cfi_offset 4, -16
ARM GAS  /tmp/ccF4ErZF.s 			page 151


 5180              		.cfi_offset 5, -12
 5181              		.cfi_offset 6, -8
 5182              		.cfi_offset 14, -4
 5183 0002 0400     		movs	r4, r0
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5184              		.loc 1 1658 0
 5185 0004 0168     		ldr	r1, [r0]
 5186 0006 CB69     		ldr	r3, [r1, #28]
 5187              	.LVL427:
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   uint32_t cr3its;
 5188              		.loc 1 1659 0
 5189 0008 0868     		ldr	r0, [r1]
 5190              	.LVL428:
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if (errorflags == RESET)
 5191              		.loc 1 1664 0
 5192 000a 0F22     		movs	r2, #15
 5193 000c 1A40     		ands	r2, r3
 5194              	.LVL429:
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5195              		.loc 1 1665 0
 5196 000e 03D1     		bne	.L366
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5197              		.loc 1 1668 0
 5198 0010 9D06     		lsls	r5, r3, #26
 5199 0012 01D5     		bpl	.L366
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5200              		.loc 1 1668 0 is_stmt 0 discriminator 1
 5201 0014 8506     		lsls	r5, r0, #26
 5202 0016 5BD4     		bmi	.L382
 5203              	.L366:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   if(   (errorflags != RESET)
 5204              		.loc 1 1676 0 is_stmt 1
 5205 0018 8D68     		ldr	r5, [r1, #8]
 5206              	.LVL430:
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 5207              		.loc 1 1677 0
 5208 001a 002A     		cmp	r2, #0
 5209 001c 6ED0     		beq	.L368
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 5210              		.loc 1 1678 0
 5211 001e 0122     		movs	r2, #1
 5212              	.LVL431:
 5213 0020 2A40     		ands	r2, r5
 5214 0022 03D1     		bne	.L369
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5215              		.loc 1 1679 0
 5216 0024 9026     		movs	r6, #144
 5217 0026 7600     		lsls	r6, r6, #1
 5218 0028 3042     		tst	r0, r6
 5219 002a 67D0     		beq	.L368
 5220              	.L369:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5221              		.loc 1 1682 0
 5222 002c DD07     		lsls	r5, r3, #31
 5223 002e 06D5     		bpl	.L370
 5224              	.LVL432:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
ARM GAS  /tmp/ccF4ErZF.s 			page 152


 5225              		.loc 1 1682 0 is_stmt 0 discriminator 1
 5226 0030 C505     		lsls	r5, r0, #23
 5227 0032 04D5     		bpl	.L370
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5228              		.loc 1 1684 0 is_stmt 1
 5229 0034 0125     		movs	r5, #1
 5230 0036 0D62     		str	r5, [r1, #32]
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5231              		.loc 1 1686 0
 5232 0038 E16E     		ldr	r1, [r4, #108]
 5233 003a 2943     		orrs	r1, r5
 5234 003c E166     		str	r1, [r4, #108]
 5235              	.L370:
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5236              		.loc 1 1690 0
 5237 003e 9907     		lsls	r1, r3, #30
 5238 0040 08D5     		bpl	.L371
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5239              		.loc 1 1690 0 is_stmt 0 discriminator 1
 5240 0042 002A     		cmp	r2, #0
 5241 0044 06D0     		beq	.L371
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5242              		.loc 1 1692 0 is_stmt 1
 5243 0046 2168     		ldr	r1, [r4]
 5244 0048 0225     		movs	r5, #2
 5245 004a 0D62     		str	r5, [r1, #32]
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5246              		.loc 1 1694 0
 5247 004c E16E     		ldr	r1, [r4, #108]
 5248 004e 0235     		adds	r5, r5, #2
 5249 0050 2943     		orrs	r1, r5
 5250 0052 E166     		str	r1, [r4, #108]
 5251              	.L371:
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5252              		.loc 1 1698 0
 5253 0054 5907     		lsls	r1, r3, #29
 5254 0056 08D5     		bpl	.L372
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5255              		.loc 1 1698 0 is_stmt 0 discriminator 1
 5256 0058 002A     		cmp	r2, #0
 5257 005a 06D0     		beq	.L372
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5258              		.loc 1 1700 0 is_stmt 1
 5259 005c 2168     		ldr	r1, [r4]
 5260 005e 0425     		movs	r5, #4
 5261 0060 0D62     		str	r5, [r1, #32]
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5262              		.loc 1 1702 0
 5263 0062 E16E     		ldr	r1, [r4, #108]
 5264 0064 023D     		subs	r5, r5, #2
 5265 0066 2943     		orrs	r1, r5
 5266 0068 E166     		str	r1, [r4, #108]
 5267              	.L372:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 5268              		.loc 1 1706 0
 5269 006a 1907     		lsls	r1, r3, #28
 5270 006c 09D5     		bpl	.L373
ARM GAS  /tmp/ccF4ErZF.s 			page 153


1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 5271              		.loc 1 1706 0 is_stmt 0 discriminator 1
 5272 006e 8106     		lsls	r1, r0, #26
 5273 0070 01D4     		bmi	.L374
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5274              		.loc 1 1707 0 is_stmt 1
 5275 0072 002A     		cmp	r2, #0
 5276 0074 05D0     		beq	.L373
 5277              	.L374:
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5278              		.loc 1 1709 0
 5279 0076 2268     		ldr	r2, [r4]
 5280 0078 0821     		movs	r1, #8
 5281 007a 1162     		str	r1, [r2, #32]
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5282              		.loc 1 1711 0
 5283 007c E26E     		ldr	r2, [r4, #108]
 5284 007e 0A43     		orrs	r2, r1
 5285 0080 E266     		str	r2, [r4, #108]
 5286              	.L373:
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     {
 5287              		.loc 1 1715 0
 5288 0082 E26E     		ldr	r2, [r4, #108]
 5289 0084 002A     		cmp	r2, #0
 5290 0086 45D0     		beq	.L365
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 5291              		.loc 1 1718 0
 5292 0088 9B06     		lsls	r3, r3, #26
 5293 008a 01D5     		bpl	.L375
 5294              	.LVL433:
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {
 5295              		.loc 1 1718 0 is_stmt 0 discriminator 1
 5296 008c 8306     		lsls	r3, r0, #26
 5297 008e 23D4     		bmi	.L383
 5298              	.LVL434:
 5299              	.L375:
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 5300              		.loc 1 1725 0 is_stmt 1
 5301 0090 E36E     		ldr	r3, [r4, #108]
 5302 0092 1B07     		lsls	r3, r3, #28
 5303 0094 03D4     		bmi	.L376
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       {  
 5304              		.loc 1 1726 0 discriminator 1
 5305 0096 2368     		ldr	r3, [r4]
 5306 0098 9B68     		ldr	r3, [r3, #8]
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 5307              		.loc 1 1725 0 discriminator 1
 5308 009a 5B06     		lsls	r3, r3, #25
 5309 009c 28D5     		bpl	.L377
 5310              	.L376:
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5311              		.loc 1 1731 0
 5312 009e 2000     		movs	r0, r4
 5313 00a0 FFF7FEFF 		bl	UART_EndRxTransfer
 5314              	.LVL435:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         {
 5315              		.loc 1 1734 0
ARM GAS  /tmp/ccF4ErZF.s 			page 154


 5316 00a4 2368     		ldr	r3, [r4]
 5317 00a6 9A68     		ldr	r2, [r3, #8]
 5318 00a8 5206     		lsls	r2, r2, #25
 5319 00aa 1DD5     		bpl	.L378
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5320              		.loc 1 1736 0
 5321 00ac 9A68     		ldr	r2, [r3, #8]
 5322 00ae 4021     		movs	r1, #64
 5323 00b0 8A43     		bics	r2, r1
 5324 00b2 9A60     		str	r2, [r3, #8]
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           {
 5325              		.loc 1 1739 0
 5326 00b4 636E     		ldr	r3, [r4, #100]
 5327 00b6 002B     		cmp	r3, #0
 5328 00b8 12D0     		beq	.L379
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5329              		.loc 1 1743 0
 5330 00ba 214A     		ldr	r2, .L387
 5331 00bc 5A63     		str	r2, [r3, #52]
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             {
 5332              		.loc 1 1746 0
 5333 00be 606E     		ldr	r0, [r4, #100]
 5334 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5335              	.LVL436:
 5336 00c4 0028     		cmp	r0, #0
 5337 00c6 25D0     		beq	.L365
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****             }
 5338              		.loc 1 1749 0
 5339 00c8 606E     		ldr	r0, [r4, #100]
 5340 00ca 436B     		ldr	r3, [r0, #52]
 5341 00cc 9847     		blx	r3
 5342              	.LVL437:
 5343 00ce 21E0     		b	.L365
 5344              	.LVL438:
 5345              	.L382:
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       return;
 5346              		.loc 1 1670 0
 5347 00d0 2000     		movs	r0, r4
 5348              	.LVL439:
 5349 00d2 FFF7FEFF 		bl	UART_Receive_IT
 5350              	.LVL440:
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     }
 5351              		.loc 1 1671 0
 5352 00d6 1DE0     		b	.L365
 5353              	.LVL441:
 5354              	.L383:
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 5355              		.loc 1 1720 0
 5356 00d8 2000     		movs	r0, r4
 5357              	.LVL442:
 5358 00da FFF7FEFF 		bl	UART_Receive_IT
 5359              	.LVL443:
 5360 00de D7E7     		b	.L375
 5361              	.L379:
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****           }
 5362              		.loc 1 1755 0
 5363 00e0 2000     		movs	r0, r4
ARM GAS  /tmp/ccF4ErZF.s 			page 155


 5364 00e2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5365              	.LVL444:
 5366 00e6 15E0     		b	.L365
 5367              	.L378:
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         }
 5368              		.loc 1 1761 0
 5369 00e8 2000     		movs	r0, r4
 5370 00ea FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5371              	.LVL445:
 5372 00ee 11E0     		b	.L365
 5373              	.L377:
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5374              		.loc 1 1768 0
 5375 00f0 2000     		movs	r0, r4
 5376 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5377              	.LVL446:
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****       }
 5378              		.loc 1 1769 0
 5379 00f6 0023     		movs	r3, #0
 5380 00f8 E366     		str	r3, [r4, #108]
 5381 00fa 0BE0     		b	.L365
 5382              	.LVL447:
 5383              	.L368:
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5384              		.loc 1 1778 0
 5385 00fc DA02     		lsls	r2, r3, #11
 5386 00fe 01D5     		bpl	.L380
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5387              		.loc 1 1778 0 is_stmt 0 discriminator 1
 5388 0100 6A02     		lsls	r2, r5, #9
 5389 0102 08D4     		bmi	.L384
 5390              	.L380:
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5391              		.loc 1 1790 0 is_stmt 1
 5392 0104 1A06     		lsls	r2, r3, #24
 5393 0106 01D5     		bpl	.L381
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5394              		.loc 1 1790 0 is_stmt 0 discriminator 1
 5395 0108 0206     		lsls	r2, r0, #24
 5396 010a 10D4     		bmi	.L385
 5397              	.L381:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5398              		.loc 1 1797 0 is_stmt 1
 5399 010c 5B06     		lsls	r3, r3, #25
 5400 010e 01D5     		bpl	.L365
 5401              	.LVL448:
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   {
 5402              		.loc 1 1797 0 is_stmt 0 discriminator 1
 5403 0110 4306     		lsls	r3, r0, #25
 5404 0112 10D4     		bmi	.L386
 5405              	.LVL449:
 5406              	.L365:
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c **** 
 5407              		.loc 1 1803 0 is_stmt 1
 5408              		@ sp needed
 5409              	.LVL450:
 5410 0114 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccF4ErZF.s 			page 156


 5411              	.LVL451:
 5412              	.L384:
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 5413              		.loc 1 1780 0
 5414 0116 8023     		movs	r3, #128
 5415              	.LVL452:
 5416 0118 5B03     		lsls	r3, r3, #13
 5417 011a 0B62     		str	r3, [r1, #32]
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5418              		.loc 1 1782 0
 5419 011c 2023     		movs	r3, #32
 5420 011e 6922     		movs	r2, #105
 5421 0120 A354     		strb	r3, [r4, r2]
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 5422              		.loc 1 1783 0
 5423 0122 0132     		adds	r2, r2, #1
 5424 0124 A354     		strb	r3, [r4, r2]
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 5425              		.loc 1 1784 0
 5426 0126 2000     		movs	r0, r4
 5427              	.LVL453:
 5428 0128 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 5429              	.LVL454:
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5430              		.loc 1 1785 0
 5431 012c F2E7     		b	.L365
 5432              	.LVL455:
 5433              	.L385:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 5434              		.loc 1 1792 0
 5435 012e 2000     		movs	r0, r4
 5436              	.LVL456:
 5437 0130 FFF7FEFF 		bl	UART_Transmit_IT
 5438              	.LVL457:
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5439              		.loc 1 1793 0
 5440 0134 EEE7     		b	.L365
 5441              	.LVL458:
 5442              	.L386:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****     return;
 5443              		.loc 1 1799 0
 5444 0136 2000     		movs	r0, r4
 5445              	.LVL459:
 5446 0138 FFF7FEFF 		bl	UART_EndTransmit_IT
 5447              	.LVL460:
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart.c ****   }
 5448              		.loc 1 1800 0
 5449 013c EAE7     		b	.L365
 5450              	.L388:
 5451 013e C046     		.align	2
 5452              	.L387:
 5453 0140 00000000 		.word	UART_DMAAbortOnError
 5454              		.cfi_endproc
 5455              	.LFE58:
 5457              		.section	.rodata.HAL_UART_DeInit.str1.4,"aMS",%progbits,1
 5458              		.align	2
 5459              	.LC0:
ARM GAS  /tmp/ccF4ErZF.s 			page 157


 5460 0000 44726976 		.ascii	"Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_uart"
 5460      6572732F 
 5460      53544D33 
 5460      32463078 
 5460      785F4841 
 5461 0033 2E6300   		.ascii	".c\000"
 5462              		.text
 5463              	.Letext0:
 5464              		.file 2 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machi
 5465              		.file 3 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 5466              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 5467              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 5468              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 5469              		.file 7 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/l
 5470              		.file 8 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 5471              		.file 9 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1
 5472              		.file 10 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/
 5473              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 5474              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 5475              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 5476              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 5477              		.file 15 "Inc/stm32f0xx_hal_conf.h"
 5478              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 5479              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart_ex.h"
ARM GAS  /tmp/ccF4ErZF.s 			page 158


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_uart.c
     /tmp/ccF4ErZF.s:16     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccF4ErZF.s:22     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccF4ErZF.s:48     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccF4ErZF.s:54     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccF4ErZF.s:85     .text.UART_EndRxTransfer:0000000000000020 $d
     /tmp/ccF4ErZF.s:90     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccF4ErZF.s:97     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccF4ErZF.s:112    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccF4ErZF.s:119    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccF4ErZF.s:134    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccF4ErZF.s:141    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccF4ErZF.s:225    .text.HAL_UART_DeInit:0000000000000058 $d
     /tmp/ccF4ErZF.s:232    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:239    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccF4ErZF.s:347    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:354    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccF4ErZF.s:548    .text.HAL_UART_Receive_IT:00000000000000d0 $d
     /tmp/ccF4ErZF.s:553    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccF4ErZF.s:560    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccF4ErZF.s:695    .text.HAL_UART_Transmit_DMA:000000000000009c $d
     /tmp/ccF4ErZF.s:1427   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccF4ErZF.s:1510   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccF4ErZF.s:1708   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccF4ErZF.s:702    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccF4ErZF.s:709    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccF4ErZF.s:850    .text.HAL_UART_Receive_DMA:00000000000000a4 $d
     /tmp/ccF4ErZF.s:1563   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccF4ErZF.s:1655   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccF4ErZF.s:857    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccF4ErZF.s:864    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccF4ErZF.s:952    .text.HAL_UART_DMAPause:0000000000000068 $d
     /tmp/ccF4ErZF.s:957    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccF4ErZF.s:964    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccF4ErZF.s:1047   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccF4ErZF.s:1054   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccF4ErZF.s:1141   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccF4ErZF.s:1148   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccF4ErZF.s:1247   .text.HAL_UART_Abort:000000000000007c $d
     /tmp/ccF4ErZF.s:1252   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccF4ErZF.s:1259   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccF4ErZF.s:1318   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccF4ErZF.s:1325   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccF4ErZF.s:1394   .text.HAL_UART_AbortReceive:0000000000000050 $d
     /tmp/ccF4ErZF.s:1399   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:1406   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccF4ErZF.s:1421   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccF4ErZF.s:1482   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:1489   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccF4ErZF.s:1504   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccF4ErZF.s:1535   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:1542   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccF4ErZF.s:1557   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccF4ErZF.s:1622   .text.UART_DMAReceiveCplt:0000000000000040 $d
     /tmp/ccF4ErZF.s:1627   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:1634   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/ccF4ErZF.s 			page 159


     /tmp/ccF4ErZF.s:1649   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccF4ErZF.s:1680   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:1687   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccF4ErZF.s:1702   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccF4ErZF.s:1785   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccF4ErZF.s:1791   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccF4ErZF.s:1823   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:1830   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccF4ErZF.s:1845   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:1852   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccF4ErZF.s:2022   .text.HAL_UART_Abort_IT:00000000000000cc $d
     /tmp/ccF4ErZF.s:2103   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccF4ErZF.s:2035   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccF4ErZF.s:2029   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:2097   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:2165   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:2172   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccF4ErZF.s:2187   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:2194   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccF4ErZF.s:2279   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccF4ErZF.s:2290   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccF4ErZF.s:2284   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:2323   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:2330   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccF4ErZF.s:2345   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:2352   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccF4ErZF.s:2451   .text.HAL_UART_AbortReceive_IT:0000000000000078 $d
     /tmp/ccF4ErZF.s:2463   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccF4ErZF.s:2457   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccF4ErZF.s:2500   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccF4ErZF.s:2507   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccF4ErZF.s:2528   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccF4ErZF.s:2535   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccF4ErZF.s:2596   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccF4ErZF.s:2603   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccF4ErZF.s:2664   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccF4ErZF.s:2671   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccF4ErZF.s:2697   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccF4ErZF.s:2704   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccF4ErZF.s:2723   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccF4ErZF.s:2730   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccF4ErZF.s:3228   .text.UART_SetConfig:0000000000000288 $d
     /tmp/ccF4ErZF.s:3250   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccF4ErZF.s:3257   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccF4ErZF.s:3596   .text.UART_AdvFeatureConfig:00000000000001d4 $d
     /tmp/ccF4ErZF.s:3622   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccF4ErZF.s:3629   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccF4ErZF.s:3721   .text.UART_WaitOnFlagUntilTimeout:0000000000000068 $d
     /tmp/ccF4ErZF.s:3726   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccF4ErZF.s:3733   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccF4ErZF.s:3935   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccF4ErZF.s:3942   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccF4ErZF.s:4208   .text.HAL_UART_Receive:0000000000000134 $d
     /tmp/ccF4ErZF.s:4213   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccF4ErZF.s:4220   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccF4ErZF.s:4322   .text.UART_CheckIdleState:0000000000000070 $d
     /tmp/ccF4ErZF.s:4328   .text.HAL_UART_Init:0000000000000000 $t
ARM GAS  /tmp/ccF4ErZF.s 			page 160


     /tmp/ccF4ErZF.s:4335   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccF4ErZF.s:4469   .text.HAL_UART_Init:00000000000000a8 $d
     /tmp/ccF4ErZF.s:4477   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccF4ErZF.s:4484   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccF4ErZF.s:4602   .text.HAL_HalfDuplex_Init:0000000000000090 $d
     /tmp/ccF4ErZF.s:4610   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccF4ErZF.s:4617   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccF4ErZF.s:4761   .text.HAL_MultiProcessor_Init:00000000000000b0 $d
     /tmp/ccF4ErZF.s:4768   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccF4ErZF.s:4775   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccF4ErZF.s:4827   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccF4ErZF.s:4834   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccF4ErZF.s:4884   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000030 $d
     /tmp/ccF4ErZF.s:4889   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:4896   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccF4ErZF.s:4990   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:4997   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccF4ErZF.s:5030   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccF4ErZF.s:5037   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccF4ErZF.s:5157   .text.UART_Receive_IT:0000000000000084 $d
     /tmp/ccF4ErZF.s:5162   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccF4ErZF.s:5169   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccF4ErZF.s:5453   .text.HAL_UART_IRQHandler:0000000000000140 $d
     /tmp/ccF4ErZF.s:5458   .rodata.HAL_UART_DeInit.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
assert_failed
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
HAL_UARTEx_WakeupCallback
